Concuerror v0.19+build.2090.refb510413 started at 09 Jul 2018 17:47:15
 Options:
  [{after_timeout,1000},
   {assertions_only,false},
   {assume_racing,false},
   {depth_bound,500},
   {disable_sleep_sets,false},
   {dpor,optimal},
   {entry_point,{test,t_reg_or_locate2,[]}},
   {exclude_module,[]},
   {files,["../test.erl"]},
   {first_process_errors_only,false},
   {ignore_error,[deadlock]},
   {instant_delivery,true},
   {interleaving_bound,100},
   {keep_going,true},
   {non_racing_system,[]},
   {pa,"ebin"},
   {print_depth,20},
   {quiet,true},
   {scheduling,round_robin},
   {scheduling_bound_type,none},
   {show_races,false},
   {strict_scheduling,false},
   {symbolic_names,true},
   {timeout,5000},
   {treat_as_normal,[shutdown]},
   {use_receive_patterns,true}]
################################################################################
Interleaving #1
--------------------------------------------------------------------------------
Errors found:
* At step 78 process <P.2> exited abnormally
    Reason:
      killed
    Stacktrace:
      []
--------------------------------------------------------------------------------
Event trace:
   1: <P>: undefined = erlang:whereis(gproc_sup)
    in gen.erl line 299
   2: <P>: [] = erlang:process_info(<P>, registered_name)
    in proc_lib.erl line 731
   3: <P>: <P.1/gproc_sup> = erlang:spawn_opt({proc_lib,init_p,[<P>,[],gen,init_it,[gen_server,<P>,<P>,{local,gproc_sup},supervisor,{{local,gproc_sup},gproc_sup,[]},[]]],[link]})
    in erlang.erl line 2868
   4: <P.1/gproc_sup>: true = erlang:register(gproc_sup, <P.1/gproc_sup>)
    in gen.erl line 302
   5: <P.1/gproc_sup>: false = erlang:process_flag(trap_exit, true)
    in supervisor.erl line 293
   6: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   7: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
   8: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   9: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  10: <P.1/gproc_sup>: undefined = ets:info(gproc, name)
    in gproc.erl line 2488
  11: <P.1/gproc_sup>: gproc = ets:new(gproc, [ordered_set,public,named_table,{write_concurrency,true},{read_concurrency,true}])
    in gproc.erl line 2490
  12: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
  13: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  14: <P.1/gproc_sup>: undefined = erlang:whereis(gproc)
    in gen.erl line 299
  15: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  16: <P.1/gproc_sup>: <P.1.1/gproc> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc},gproc,[],[{spawn_opt,[]}]]],[link]})
    in erlang.erl line 2868
  17: <P.1.1/gproc>: true = erlang:register(gproc, <P.1.1/gproc>)
    in gen.erl line 302
  18: <P.1.1/gproc>: '$end_of_table' = ets:select(gproc, [{{{'$1',l}},[],['$1']}], 100)
    in gproc.erl line 2502
  19: <P.1.1/gproc>: {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}} = <P.1/gproc_sup> ! {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}}
    in proc_lib.erl line 392
  20: <P.1/gproc_sup>: receives message ({ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}})
    in proc_lib.erl line 348
  21: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  22: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  23: <P.1/gproc_sup>: undefined = ets:info(gproc_monitor, owner)
  24: <P.1/gproc_sup>: gproc_monitor = ets:new(gproc_monitor, [ordered_set,protected,named_table,{heir,<P.1/gproc_sup>,[]}])
  25: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  26: <P.1/gproc_sup>: <P.1.2/gproc_monitor> = erlang:spawn_link(proc_lib, init_p, [gproc_sup,[<P>],gproc_monitor,init,[<P.1/gproc_sup>]])
    in proc_lib.erl line 100
  27: <P.1.2/gproc_monitor>: normal = erlang:process_flag(priority, high)
    in gproc_monitor.erl line 123
  28: <P.1.2/gproc_monitor>: true = erlang:register(gproc_monitor, <P.1.2/gproc_monitor>)
    in gproc_monitor.erl line 124
  29: <P.1.2/gproc_monitor>: {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}} = <P.1/gproc_sup> ! {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}}
    in proc_lib.erl line 392
  30: <P.1/gproc_sup>: receives message ({ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}})
    in proc_lib.erl line 348
  31: <P.1/gproc_sup>: true = ets:give_away(gproc_monitor, <P.1.2/gproc_monitor>, [])
    in gproc_monitor.erl line 104
  32: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  33: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  34: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_bcast)
    in gen.erl line 299
  35: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  36: <P.1/gproc_sup>: <P.1.3/gproc_bcast> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_bcast},gproc_bcast,[],[]]],[link]})
    in erlang.erl line 2868
  37: <P.1.2/gproc_monitor>: receives message ({'ETS-TRANSFER',gproc_monitor,<P.1/gproc_sup>,[]})
    in gproc_monitor.erl line 126
  38: <P.1.2/gproc_monitor>: <P.1/gproc_sup> = erlang:whereis(gproc_sup)
    in gen.erl line 382
  39: <P.1.3/gproc_bcast>: true = erlang:register(gproc_bcast, <P.1.3/gproc_bcast>)
    in gen.erl line 302
  40: <P.1.3/gproc_bcast>: {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}} = <P.1/gproc_sup> ! {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}}
    in proc_lib.erl line 392
  41: <P.1/gproc_sup>: receives message ({ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}})
    in proc_lib.erl line 348
  42: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  43: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  44: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_pool)
    in gen.erl line 299
  45: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  46: <P.1/gproc_sup>: <P.1.4/gproc_pool> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_pool},gproc_pool,[],[]]],[link]})
    in erlang.erl line 2868
  47: <P.1.4/gproc_pool>: true = erlang:register(gproc_pool, <P.1.4/gproc_pool>)
    in gen.erl line 302
  48: <P.1.4/gproc_pool>: {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}} = <P.1/gproc_sup> ! {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}}
    in proc_lib.erl line 392
  49: <P.1/gproc_sup>: receives message ({ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}})
    in proc_lib.erl line 348
  50: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  51: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  52: <P.1/gproc_sup>: {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}} = <P> ! {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}}
    in proc_lib.erl line 392
  53: <P>: receives message ({ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}})
    in proc_lib.erl line 348
  54: <P>: {<P.2>,#Ref<0.3937440253.4130865153.76259>} = erlang:spawn_opt({erlang,apply,[#Fun<test.8.122744875>,[]],[monitor]})
    in erlang.erl line 2731
  55: <P.2>: #Ref<0.3937440253.4130865153.76262> = erlang:monitor(process, <P>)
    in test.erl line 38
  56: <P.2>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  57: <P.2>: #Ref<0.3937440253.4130865153.76266> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  58: <P.2>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}}, [noconnect])
    in gen.erl line 167
  59: <P.1.1/gproc>: receives message ({'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}})
    in gen_server.erl line 381
  60: <P.1.1/gproc>: true = ets:insert_new(gproc, {{{n,l,foo},n},<P.2>,the_value})
    in gproc_lib.erl line 78
  61: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,{n,l,foo}},[]})
  62: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,l}})
    in gproc_lib.erl line 300
  63: <P.1.1/gproc>: #Ref<0.3937440253.4130865153.76276> = erlang:monitor(process, <P.2>)
    in gproc_lib.erl line 302
  64: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76266>,true} = <P.2> ! {#Ref<0.3937440253.4130865153.76266>,true}
    in gen_server.erl line 243
  65: <P.2>: receives message ({#Ref<0.3937440253.4130865153.76266>,true})
    in gen.erl line 169
  66: <P.2>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76266>, [flush])
    in gen.erl line 171
  67: <P.2>: {<P.2>,ok} = <P> ! {<P.2>,ok}
    in test.erl line 40
  68: <P>: receives message ({<P.2>,ok})
    in test.erl line 45
  69: <P>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  70: <P>: #Ref<0.3937440253.4130865153.76286> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  71: <P>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}}, [noconnect])
    in gen.erl line 167
  72: <P.1.1/gproc>: receives message ({'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}})
    in gen_server.erl line 381
  73: <P.1.1/gproc>: [{{{n,l,foo},n},<P.2>,the_value}] = ets:lookup(gproc, {{n,l,foo},n})
    in gproc.erl line 2072
  74: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}} = <P> ! {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}}
    in gen_server.erl line 243
  75: <P>: receives message ({#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}})
    in gen.erl line 169
  76: <P>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76286>, [flush])
    in gen.erl line 171
  77: <P>: true = erlang:exit(<P.2>, kill)
    in test.erl line 47
  78: <P.2>: exits abnormally (killed)
  79: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed} = erlang:send(<P>, {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    (while exiting)
  80: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed} = erlang:send(<P.1.1/gproc>, {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed})
    (while exiting)
  81: <P>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    in test.erl line 48
  82: <P>: exits normally
  83: <P>: true = erlang:exit(<P.1/gproc_sup>, normal)
    (while exiting)
  84: <P>: {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal} = erlang:send(<P.2>, {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal})
    (while exiting)
  85: <P.1/gproc_sup>: receives message ({'EXIT',<P>,normal})
    in gen_server.erl line 381
  86: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76307> = erlang:monitor(process, <P.1.4/gproc_pool>)
    in supervisor.erl line 978
  87: <P.1/gproc_sup>: true = erlang:unlink(<P.1.4/gproc_pool>)
    in supervisor.erl line 979
  88: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
  89: <P.1/gproc_sup>: true = erlang:exit(<P.1.4/gproc_pool>, shutdown)
    in supervisor.erl line 954
  90: <P.1.1/gproc>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed})
    in gen_server.erl line 381
  91: <P.1.1/gproc>: true = ets:member(gproc, {<P.2>,l})
    in gproc.erl line 2313
  92: <P.1.1/gproc>: [{{n,l,foo},[]}] = ets:select(gproc, [{{{<P.2>,'$1'},'$2'},[{'==',{element,2,'$1'},l}],[{{'$1','$2'}}]}])
    in gproc.erl line 2317
  93: <P.1.1/gproc>: [{{{n,l,foo},n},<P.2>,the_value}] = ets:lookup(gproc, {{n,l,foo},n})
    in gproc.erl line 2323
  94: <P.1.1/gproc>: true = ets:delete(gproc, {{n,l,foo},n})
    in gproc.erl line 2325
  95: <P.1.1/gproc>: 1 = ets:select_delete(gproc, [{{{<P.2>,{'_',l,'_'}},'_'},[],[true]}])
    in gproc.erl line 2372
  96: <P.1.1/gproc>: true = ets:delete(gproc, {<P.2>,l})
    in gproc.erl line 2373
  97: <P.1.4/gproc_pool>: exits abnormally (shutdown)
  98: <P.1.4/gproc_pool>: {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    (while exiting)
  99: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    in supervisor.erl line 955
 100: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76331> = erlang:monitor(process, <P.1.3/gproc_bcast>)
    in supervisor.erl line 978
 101: <P.1/gproc_sup>: true = erlang:unlink(<P.1.3/gproc_bcast>)
    in supervisor.erl line 979
 102: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 103: <P.1/gproc_sup>: true = erlang:exit(<P.1.3/gproc_bcast>, shutdown)
    in supervisor.erl line 954
 104: <P.1.3/gproc_bcast>: exits abnormally (shutdown)
 105: <P.1.3/gproc_bcast>: {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    (while exiting)
 106: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    in supervisor.erl line 955
 107: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76340> = erlang:monitor(process, <P.1.2/gproc_monitor>)
    in supervisor.erl line 978
 108: <P.1/gproc_sup>: true = erlang:unlink(<P.1.2/gproc_monitor>)
    in supervisor.erl line 979
 109: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 110: <P.1/gproc_sup>: true = erlang:exit(<P.1.2/gproc_monitor>, shutdown)
    in supervisor.erl line 954
 111: <P.1.2/gproc_monitor>: exits abnormally (shutdown)
 112: <P.1.2/gproc_monitor>: true = ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 113: <P.1.2/gproc_monitor>: {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    (while exiting)
 114: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    in supervisor.erl line 955
 115: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76351> = erlang:monitor(process, <P.1.1/gproc>)
    in supervisor.erl line 978
 116: <P.1/gproc_sup>: true = erlang:unlink(<P.1.1/gproc>)
    in supervisor.erl line 979
 117: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 118: <P.1/gproc_sup>: true = erlang:exit(<P.1.1/gproc>, shutdown)
    in supervisor.erl line 954
 119: <P.1.1/gproc>: exits abnormally (shutdown)
 120: <P.1.1/gproc>: {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    (while exiting)
 121: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    in supervisor.erl line 955
 122: <P.1/gproc_sup>: exits normally
 123: <P.1/gproc_sup>: true = ets:delete(gproc)
    (while exiting)
 124: <P.1/gproc_sup>: Exception badarg raised by: ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 125: <P.1/gproc_sup>: true = ets:delete(gproc_monitor)
    (while exiting)
 126: <P.1/gproc_sup>: true = erlang:exit(<P>, normal)
    (while exiting)
################################################################################
Interleaving #2
--------------------------------------------------------------------------------
Errors found:
* At step 78 process <P.2> exited abnormally
    Reason:
      killed
    Stacktrace:
      []
--------------------------------------------------------------------------------
Event trace:
   1: <P>: undefined = erlang:whereis(gproc_sup)
    in gen.erl line 299
   2: <P>: [] = erlang:process_info(<P>, registered_name)
    in proc_lib.erl line 731
   3: <P>: <P.1/gproc_sup> = erlang:spawn_opt({proc_lib,init_p,[<P>,[],gen,init_it,[gen_server,<P>,<P>,{local,gproc_sup},supervisor,{{local,gproc_sup},gproc_sup,[]},[]]],[link]})
    in erlang.erl line 2868
   4: <P.1/gproc_sup>: true = erlang:register(gproc_sup, <P.1/gproc_sup>)
    in gen.erl line 302
   5: <P.1/gproc_sup>: false = erlang:process_flag(trap_exit, true)
    in supervisor.erl line 293
   6: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   7: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
   8: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   9: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  10: <P.1/gproc_sup>: undefined = ets:info(gproc, name)
    in gproc.erl line 2488
  11: <P.1/gproc_sup>: gproc = ets:new(gproc, [ordered_set,public,named_table,{write_concurrency,true},{read_concurrency,true}])
    in gproc.erl line 2490
  12: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
  13: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  14: <P.1/gproc_sup>: undefined = erlang:whereis(gproc)
    in gen.erl line 299
  15: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  16: <P.1/gproc_sup>: <P.1.1/gproc> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc},gproc,[],[{spawn_opt,[]}]]],[link]})
    in erlang.erl line 2868
  17: <P.1.1/gproc>: true = erlang:register(gproc, <P.1.1/gproc>)
    in gen.erl line 302
  18: <P.1.1/gproc>: '$end_of_table' = ets:select(gproc, [{{{'$1',l}},[],['$1']}], 100)
    in gproc.erl line 2502
  19: <P.1.1/gproc>: {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}} = <P.1/gproc_sup> ! {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}}
    in proc_lib.erl line 392
  20: <P.1/gproc_sup>: receives message ({ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}})
    in proc_lib.erl line 348
  21: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  22: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  23: <P.1/gproc_sup>: undefined = ets:info(gproc_monitor, owner)
  24: <P.1/gproc_sup>: gproc_monitor = ets:new(gproc_monitor, [ordered_set,protected,named_table,{heir,<P.1/gproc_sup>,[]}])
  25: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  26: <P.1/gproc_sup>: <P.1.2/gproc_monitor> = erlang:spawn_link(proc_lib, init_p, [gproc_sup,[<P>],gproc_monitor,init,[<P.1/gproc_sup>]])
    in proc_lib.erl line 100
  27: <P.1.2/gproc_monitor>: normal = erlang:process_flag(priority, high)
    in gproc_monitor.erl line 123
  28: <P.1.2/gproc_monitor>: true = erlang:register(gproc_monitor, <P.1.2/gproc_monitor>)
    in gproc_monitor.erl line 124
  29: <P.1.2/gproc_monitor>: {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}} = <P.1/gproc_sup> ! {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}}
    in proc_lib.erl line 392
  30: <P.1/gproc_sup>: receives message ({ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}})
    in proc_lib.erl line 348
  31: <P.1/gproc_sup>: true = ets:give_away(gproc_monitor, <P.1.2/gproc_monitor>, [])
    in gproc_monitor.erl line 104
  32: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  33: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  34: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_bcast)
    in gen.erl line 299
  35: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  36: <P.1/gproc_sup>: <P.1.3/gproc_bcast> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_bcast},gproc_bcast,[],[]]],[link]})
    in erlang.erl line 2868
  37: <P.1.2/gproc_monitor>: receives message ({'ETS-TRANSFER',gproc_monitor,<P.1/gproc_sup>,[]})
    in gproc_monitor.erl line 126
  38: <P.1.2/gproc_monitor>: <P.1/gproc_sup> = erlang:whereis(gproc_sup)
    in gen.erl line 382
  39: <P.1.3/gproc_bcast>: true = erlang:register(gproc_bcast, <P.1.3/gproc_bcast>)
    in gen.erl line 302
  40: <P.1.3/gproc_bcast>: {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}} = <P.1/gproc_sup> ! {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}}
    in proc_lib.erl line 392
  41: <P.1/gproc_sup>: receives message ({ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}})
    in proc_lib.erl line 348
  42: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  43: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  44: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_pool)
    in gen.erl line 299
  45: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  46: <P.1/gproc_sup>: <P.1.4/gproc_pool> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_pool},gproc_pool,[],[]]],[link]})
    in erlang.erl line 2868
  47: <P.1.4/gproc_pool>: true = erlang:register(gproc_pool, <P.1.4/gproc_pool>)
    in gen.erl line 302
  48: <P.1.4/gproc_pool>: {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}} = <P.1/gproc_sup> ! {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}}
    in proc_lib.erl line 392
  49: <P.1/gproc_sup>: receives message ({ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}})
    in proc_lib.erl line 348
  50: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  51: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  52: <P.1/gproc_sup>: {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}} = <P> ! {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}}
    in proc_lib.erl line 392
  53: <P>: receives message ({ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}})
    in proc_lib.erl line 348
  54: <P>: {<P.2>,#Ref<0.3937440253.4130865153.76259>} = erlang:spawn_opt({erlang,apply,[#Fun<test.8.122744875>,[]],[monitor]})
    in erlang.erl line 2731
  55: <P.2>: #Ref<0.3937440253.4130865153.76262> = erlang:monitor(process, <P>)
    in test.erl line 38
  56: <P.2>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  57: <P.2>: #Ref<0.3937440253.4130865153.76266> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  58: <P.2>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}}, [noconnect])
    in gen.erl line 167
  59: <P.1.1/gproc>: receives message ({'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}})
    in gen_server.erl line 381
  60: <P.1.1/gproc>: true = ets:insert_new(gproc, {{{n,l,foo},n},<P.2>,the_value})
    in gproc_lib.erl line 78
  61: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,{n,l,foo}},[]})
  62: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,l}})
    in gproc_lib.erl line 300
  63: <P.1.1/gproc>: #Ref<0.3937440253.4130865153.76276> = erlang:monitor(process, <P.2>)
    in gproc_lib.erl line 302
  64: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76266>,true} = <P.2> ! {#Ref<0.3937440253.4130865153.76266>,true}
    in gen_server.erl line 243
  65: <P.2>: receives message ({#Ref<0.3937440253.4130865153.76266>,true})
    in gen.erl line 169
  66: <P.2>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76266>, [flush])
    in gen.erl line 171
  67: <P.2>: {<P.2>,ok} = <P> ! {<P.2>,ok}
    in test.erl line 40
  68: <P>: receives message ({<P.2>,ok})
    in test.erl line 45
  69: <P>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  70: <P>: #Ref<0.3937440253.4130865153.76286> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  71: <P>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}}, [noconnect])
    in gen.erl line 167
  72: <P.1.1/gproc>: receives message ({'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}})
    in gen_server.erl line 381
  73: <P.1.1/gproc>: [{{{n,l,foo},n},<P.2>,the_value}] = ets:lookup(gproc, {{n,l,foo},n})
    in gproc.erl line 2072
  74: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}} = <P> ! {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}}
    in gen_server.erl line 243
  75: <P>: receives message ({#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}})
    in gen.erl line 169
  76: <P>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76286>, [flush])
    in gen.erl line 171
  77: <P>: true = erlang:exit(<P.2>, kill)
    in test.erl line 47
  78: <P.2>: exits abnormally (killed)
  79: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed} = erlang:send(<P>, {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    (while exiting)
  80: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed} = erlang:send(<P.1.1/gproc>, {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed})
    (while exiting)
  81: <P>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    in test.erl line 48
  82: <P>: exits normally
  83: <P>: true = erlang:exit(<P.1/gproc_sup>, normal)
    (while exiting)
  84: <P>: {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal} = erlang:send(<P.2>, {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal})
    (while exiting)
  85: <P.1/gproc_sup>: receives message ({'EXIT',<P>,normal})
    in gen_server.erl line 381
  86: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76307> = erlang:monitor(process, <P.1.4/gproc_pool>)
    in supervisor.erl line 978
  87: <P.1/gproc_sup>: true = erlang:unlink(<P.1.4/gproc_pool>)
    in supervisor.erl line 979
  88: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
  89: <P.1/gproc_sup>: true = erlang:exit(<P.1.4/gproc_pool>, shutdown)
    in supervisor.erl line 954
  90: <P.1.1/gproc>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed})
    in gen_server.erl line 381
  91: <P.1.1/gproc>: true = ets:member(gproc, {<P.2>,l})
    in gproc.erl line 2313
  92: <P.1.1/gproc>: [{{n,l,foo},[]}] = ets:select(gproc, [{{{<P.2>,'$1'},'$2'},[{'==',{element,2,'$1'},l}],[{{'$1','$2'}}]}])
    in gproc.erl line 2317
  93: <P.1.1/gproc>: [{{{n,l,foo},n},<P.2>,the_value}] = ets:lookup(gproc, {{n,l,foo},n})
    in gproc.erl line 2323
  94: <P.1.1/gproc>: true = ets:delete(gproc, {{n,l,foo},n})
    in gproc.erl line 2325
  95: <P.1.1/gproc>: 1 = ets:select_delete(gproc, [{{{<P.2>,{'_',l,'_'}},'_'},[],[true]}])
    in gproc.erl line 2372
  96: <P.1.4/gproc_pool>: exits abnormally (shutdown)
  97: <P.1.4/gproc_pool>: {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    (while exiting)
  98: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    in supervisor.erl line 955
  99: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76331> = erlang:monitor(process, <P.1.3/gproc_bcast>)
    in supervisor.erl line 978
 100: <P.1/gproc_sup>: true = erlang:unlink(<P.1.3/gproc_bcast>)
    in supervisor.erl line 979
 101: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 102: <P.1/gproc_sup>: true = erlang:exit(<P.1.3/gproc_bcast>, shutdown)
    in supervisor.erl line 954
 103: <P.1.3/gproc_bcast>: exits abnormally (shutdown)
 104: <P.1.3/gproc_bcast>: {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    (while exiting)
 105: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    in supervisor.erl line 955
 106: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76340> = erlang:monitor(process, <P.1.2/gproc_monitor>)
    in supervisor.erl line 978
 107: <P.1/gproc_sup>: true = erlang:unlink(<P.1.2/gproc_monitor>)
    in supervisor.erl line 979
 108: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 109: <P.1/gproc_sup>: true = erlang:exit(<P.1.2/gproc_monitor>, shutdown)
    in supervisor.erl line 954
 110: <P.1.2/gproc_monitor>: exits abnormally (shutdown)
 111: <P.1.2/gproc_monitor>: true = ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 112: <P.1.2/gproc_monitor>: {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    (while exiting)
 113: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    in supervisor.erl line 955
 114: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76351> = erlang:monitor(process, <P.1.1/gproc>)
    in supervisor.erl line 978
 115: <P.1/gproc_sup>: true = erlang:unlink(<P.1.1/gproc>)
    in supervisor.erl line 979
 116: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 117: <P.1/gproc_sup>: true = erlang:exit(<P.1.1/gproc>, shutdown)
    in supervisor.erl line 954
 118: <P.1.1/gproc>: exits abnormally (shutdown)
 119: <P.1.1/gproc>: {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    (while exiting)
 120: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    in supervisor.erl line 955
 121: <P.1/gproc_sup>: exits normally
 122: <P.1/gproc_sup>: true = ets:delete(gproc)
    (while exiting)
 123: <P.1/gproc_sup>: Exception badarg raised by: ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 124: <P.1/gproc_sup>: true = ets:delete(gproc_monitor)
    (while exiting)
 125: <P.1/gproc_sup>: true = erlang:exit(<P>, normal)
    (while exiting)
################################################################################
Interleaving #3
--------------------------------------------------------------------------------
Errors found:
* At step 78 process <P.2> exited abnormally
    Reason:
      killed
    Stacktrace:
      []
--------------------------------------------------------------------------------
Event trace:
   1: <P>: undefined = erlang:whereis(gproc_sup)
    in gen.erl line 299
   2: <P>: [] = erlang:process_info(<P>, registered_name)
    in proc_lib.erl line 731
   3: <P>: <P.1/gproc_sup> = erlang:spawn_opt({proc_lib,init_p,[<P>,[],gen,init_it,[gen_server,<P>,<P>,{local,gproc_sup},supervisor,{{local,gproc_sup},gproc_sup,[]},[]]],[link]})
    in erlang.erl line 2868
   4: <P.1/gproc_sup>: true = erlang:register(gproc_sup, <P.1/gproc_sup>)
    in gen.erl line 302
   5: <P.1/gproc_sup>: false = erlang:process_flag(trap_exit, true)
    in supervisor.erl line 293
   6: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   7: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
   8: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   9: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  10: <P.1/gproc_sup>: undefined = ets:info(gproc, name)
    in gproc.erl line 2488
  11: <P.1/gproc_sup>: gproc = ets:new(gproc, [ordered_set,public,named_table,{write_concurrency,true},{read_concurrency,true}])
    in gproc.erl line 2490
  12: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
  13: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  14: <P.1/gproc_sup>: undefined = erlang:whereis(gproc)
    in gen.erl line 299
  15: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  16: <P.1/gproc_sup>: <P.1.1/gproc> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc},gproc,[],[{spawn_opt,[]}]]],[link]})
    in erlang.erl line 2868
  17: <P.1.1/gproc>: true = erlang:register(gproc, <P.1.1/gproc>)
    in gen.erl line 302
  18: <P.1.1/gproc>: '$end_of_table' = ets:select(gproc, [{{{'$1',l}},[],['$1']}], 100)
    in gproc.erl line 2502
  19: <P.1.1/gproc>: {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}} = <P.1/gproc_sup> ! {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}}
    in proc_lib.erl line 392
  20: <P.1/gproc_sup>: receives message ({ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}})
    in proc_lib.erl line 348
  21: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  22: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  23: <P.1/gproc_sup>: undefined = ets:info(gproc_monitor, owner)
  24: <P.1/gproc_sup>: gproc_monitor = ets:new(gproc_monitor, [ordered_set,protected,named_table,{heir,<P.1/gproc_sup>,[]}])
  25: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  26: <P.1/gproc_sup>: <P.1.2/gproc_monitor> = erlang:spawn_link(proc_lib, init_p, [gproc_sup,[<P>],gproc_monitor,init,[<P.1/gproc_sup>]])
    in proc_lib.erl line 100
  27: <P.1.2/gproc_monitor>: normal = erlang:process_flag(priority, high)
    in gproc_monitor.erl line 123
  28: <P.1.2/gproc_monitor>: true = erlang:register(gproc_monitor, <P.1.2/gproc_monitor>)
    in gproc_monitor.erl line 124
  29: <P.1.2/gproc_monitor>: {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}} = <P.1/gproc_sup> ! {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}}
    in proc_lib.erl line 392
  30: <P.1/gproc_sup>: receives message ({ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}})
    in proc_lib.erl line 348
  31: <P.1/gproc_sup>: true = ets:give_away(gproc_monitor, <P.1.2/gproc_monitor>, [])
    in gproc_monitor.erl line 104
  32: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  33: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  34: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_bcast)
    in gen.erl line 299
  35: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  36: <P.1/gproc_sup>: <P.1.3/gproc_bcast> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_bcast},gproc_bcast,[],[]]],[link]})
    in erlang.erl line 2868
  37: <P.1.2/gproc_monitor>: receives message ({'ETS-TRANSFER',gproc_monitor,<P.1/gproc_sup>,[]})
    in gproc_monitor.erl line 126
  38: <P.1.2/gproc_monitor>: <P.1/gproc_sup> = erlang:whereis(gproc_sup)
    in gen.erl line 382
  39: <P.1.3/gproc_bcast>: true = erlang:register(gproc_bcast, <P.1.3/gproc_bcast>)
    in gen.erl line 302
  40: <P.1.3/gproc_bcast>: {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}} = <P.1/gproc_sup> ! {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}}
    in proc_lib.erl line 392
  41: <P.1/gproc_sup>: receives message ({ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}})
    in proc_lib.erl line 348
  42: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  43: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  44: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_pool)
    in gen.erl line 299
  45: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  46: <P.1/gproc_sup>: <P.1.4/gproc_pool> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_pool},gproc_pool,[],[]]],[link]})
    in erlang.erl line 2868
  47: <P.1.4/gproc_pool>: true = erlang:register(gproc_pool, <P.1.4/gproc_pool>)
    in gen.erl line 302
  48: <P.1.4/gproc_pool>: {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}} = <P.1/gproc_sup> ! {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}}
    in proc_lib.erl line 392
  49: <P.1/gproc_sup>: receives message ({ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}})
    in proc_lib.erl line 348
  50: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  51: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  52: <P.1/gproc_sup>: {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}} = <P> ! {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}}
    in proc_lib.erl line 392
  53: <P>: receives message ({ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}})
    in proc_lib.erl line 348
  54: <P>: {<P.2>,#Ref<0.3937440253.4130865153.76259>} = erlang:spawn_opt({erlang,apply,[#Fun<test.8.122744875>,[]],[monitor]})
    in erlang.erl line 2731
  55: <P.2>: #Ref<0.3937440253.4130865153.76262> = erlang:monitor(process, <P>)
    in test.erl line 38
  56: <P.2>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  57: <P.2>: #Ref<0.3937440253.4130865153.76266> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  58: <P.2>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}}, [noconnect])
    in gen.erl line 167
  59: <P.1.1/gproc>: receives message ({'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}})
    in gen_server.erl line 381
  60: <P.1.1/gproc>: true = ets:insert_new(gproc, {{{n,l,foo},n},<P.2>,the_value})
    in gproc_lib.erl line 78
  61: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,{n,l,foo}},[]})
  62: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,l}})
    in gproc_lib.erl line 300
  63: <P.1.1/gproc>: #Ref<0.3937440253.4130865153.76276> = erlang:monitor(process, <P.2>)
    in gproc_lib.erl line 302
  64: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76266>,true} = <P.2> ! {#Ref<0.3937440253.4130865153.76266>,true}
    in gen_server.erl line 243
  65: <P.2>: receives message ({#Ref<0.3937440253.4130865153.76266>,true})
    in gen.erl line 169
  66: <P.2>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76266>, [flush])
    in gen.erl line 171
  67: <P.2>: {<P.2>,ok} = <P> ! {<P.2>,ok}
    in test.erl line 40
  68: <P>: receives message ({<P.2>,ok})
    in test.erl line 45
  69: <P>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  70: <P>: #Ref<0.3937440253.4130865153.76286> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  71: <P>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}}, [noconnect])
    in gen.erl line 167
  72: <P.1.1/gproc>: receives message ({'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}})
    in gen_server.erl line 381
  73: <P.1.1/gproc>: [{{{n,l,foo},n},<P.2>,the_value}] = ets:lookup(gproc, {{n,l,foo},n})
    in gproc.erl line 2072
  74: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}} = <P> ! {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}}
    in gen_server.erl line 243
  75: <P>: receives message ({#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}})
    in gen.erl line 169
  76: <P>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76286>, [flush])
    in gen.erl line 171
  77: <P>: true = erlang:exit(<P.2>, kill)
    in test.erl line 47
  78: <P.2>: exits abnormally (killed)
  79: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed} = erlang:send(<P>, {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    (while exiting)
  80: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed} = erlang:send(<P.1.1/gproc>, {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed})
    (while exiting)
  81: <P>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    in test.erl line 48
  82: <P>: exits normally
  83: <P>: true = erlang:exit(<P.1/gproc_sup>, normal)
    (while exiting)
  84: <P>: {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal} = erlang:send(<P.2>, {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal})
    (while exiting)
  85: <P.1/gproc_sup>: receives message ({'EXIT',<P>,normal})
    in gen_server.erl line 381
  86: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76307> = erlang:monitor(process, <P.1.4/gproc_pool>)
    in supervisor.erl line 978
  87: <P.1/gproc_sup>: true = erlang:unlink(<P.1.4/gproc_pool>)
    in supervisor.erl line 979
  88: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
  89: <P.1/gproc_sup>: true = erlang:exit(<P.1.4/gproc_pool>, shutdown)
    in supervisor.erl line 954
  90: <P.1.1/gproc>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed})
    in gen_server.erl line 381
  91: <P.1.1/gproc>: true = ets:member(gproc, {<P.2>,l})
    in gproc.erl line 2313
  92: <P.1.1/gproc>: [{{n,l,foo},[]}] = ets:select(gproc, [{{{<P.2>,'$1'},'$2'},[{'==',{element,2,'$1'},l}],[{{'$1','$2'}}]}])
    in gproc.erl line 2317
  93: <P.1.1/gproc>: [{{{n,l,foo},n},<P.2>,the_value}] = ets:lookup(gproc, {{n,l,foo},n})
    in gproc.erl line 2323
  94: <P.1.1/gproc>: true = ets:delete(gproc, {{n,l,foo},n})
    in gproc.erl line 2325
  95: <P.1.4/gproc_pool>: exits abnormally (shutdown)
  96: <P.1.4/gproc_pool>: {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    (while exiting)
  97: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    in supervisor.erl line 955
  98: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76331> = erlang:monitor(process, <P.1.3/gproc_bcast>)
    in supervisor.erl line 978
  99: <P.1/gproc_sup>: true = erlang:unlink(<P.1.3/gproc_bcast>)
    in supervisor.erl line 979
 100: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 101: <P.1/gproc_sup>: true = erlang:exit(<P.1.3/gproc_bcast>, shutdown)
    in supervisor.erl line 954
 102: <P.1.3/gproc_bcast>: exits abnormally (shutdown)
 103: <P.1.3/gproc_bcast>: {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    (while exiting)
 104: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    in supervisor.erl line 955
 105: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76340> = erlang:monitor(process, <P.1.2/gproc_monitor>)
    in supervisor.erl line 978
 106: <P.1/gproc_sup>: true = erlang:unlink(<P.1.2/gproc_monitor>)
    in supervisor.erl line 979
 107: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 108: <P.1/gproc_sup>: true = erlang:exit(<P.1.2/gproc_monitor>, shutdown)
    in supervisor.erl line 954
 109: <P.1.2/gproc_monitor>: exits abnormally (shutdown)
 110: <P.1.2/gproc_monitor>: true = ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 111: <P.1.2/gproc_monitor>: {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    (while exiting)
 112: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    in supervisor.erl line 955
 113: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76351> = erlang:monitor(process, <P.1.1/gproc>)
    in supervisor.erl line 978
 114: <P.1/gproc_sup>: true = erlang:unlink(<P.1.1/gproc>)
    in supervisor.erl line 979
 115: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 116: <P.1/gproc_sup>: true = erlang:exit(<P.1.1/gproc>, shutdown)
    in supervisor.erl line 954
 117: <P.1.1/gproc>: exits abnormally (shutdown)
 118: <P.1.1/gproc>: {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    (while exiting)
 119: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    in supervisor.erl line 955
 120: <P.1/gproc_sup>: exits normally
 121: <P.1/gproc_sup>: true = ets:delete(gproc)
    (while exiting)
 122: <P.1/gproc_sup>: Exception badarg raised by: ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 123: <P.1/gproc_sup>: true = ets:delete(gproc_monitor)
    (while exiting)
 124: <P.1/gproc_sup>: true = erlang:exit(<P>, normal)
    (while exiting)
################################################################################
Interleaving #4
--------------------------------------------------------------------------------
Errors found:
* At step 78 process <P.2> exited abnormally
    Reason:
      killed
    Stacktrace:
      []
--------------------------------------------------------------------------------
Event trace:
   1: <P>: undefined = erlang:whereis(gproc_sup)
    in gen.erl line 299
   2: <P>: [] = erlang:process_info(<P>, registered_name)
    in proc_lib.erl line 731
   3: <P>: <P.1/gproc_sup> = erlang:spawn_opt({proc_lib,init_p,[<P>,[],gen,init_it,[gen_server,<P>,<P>,{local,gproc_sup},supervisor,{{local,gproc_sup},gproc_sup,[]},[]]],[link]})
    in erlang.erl line 2868
   4: <P.1/gproc_sup>: true = erlang:register(gproc_sup, <P.1/gproc_sup>)
    in gen.erl line 302
   5: <P.1/gproc_sup>: false = erlang:process_flag(trap_exit, true)
    in supervisor.erl line 293
   6: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   7: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
   8: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   9: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  10: <P.1/gproc_sup>: undefined = ets:info(gproc, name)
    in gproc.erl line 2488
  11: <P.1/gproc_sup>: gproc = ets:new(gproc, [ordered_set,public,named_table,{write_concurrency,true},{read_concurrency,true}])
    in gproc.erl line 2490
  12: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
  13: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  14: <P.1/gproc_sup>: undefined = erlang:whereis(gproc)
    in gen.erl line 299
  15: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  16: <P.1/gproc_sup>: <P.1.1/gproc> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc},gproc,[],[{spawn_opt,[]}]]],[link]})
    in erlang.erl line 2868
  17: <P.1.1/gproc>: true = erlang:register(gproc, <P.1.1/gproc>)
    in gen.erl line 302
  18: <P.1.1/gproc>: '$end_of_table' = ets:select(gproc, [{{{'$1',l}},[],['$1']}], 100)
    in gproc.erl line 2502
  19: <P.1.1/gproc>: {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}} = <P.1/gproc_sup> ! {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}}
    in proc_lib.erl line 392
  20: <P.1/gproc_sup>: receives message ({ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}})
    in proc_lib.erl line 348
  21: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  22: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  23: <P.1/gproc_sup>: undefined = ets:info(gproc_monitor, owner)
  24: <P.1/gproc_sup>: gproc_monitor = ets:new(gproc_monitor, [ordered_set,protected,named_table,{heir,<P.1/gproc_sup>,[]}])
  25: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  26: <P.1/gproc_sup>: <P.1.2/gproc_monitor> = erlang:spawn_link(proc_lib, init_p, [gproc_sup,[<P>],gproc_monitor,init,[<P.1/gproc_sup>]])
    in proc_lib.erl line 100
  27: <P.1.2/gproc_monitor>: normal = erlang:process_flag(priority, high)
    in gproc_monitor.erl line 123
  28: <P.1.2/gproc_monitor>: true = erlang:register(gproc_monitor, <P.1.2/gproc_monitor>)
    in gproc_monitor.erl line 124
  29: <P.1.2/gproc_monitor>: {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}} = <P.1/gproc_sup> ! {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}}
    in proc_lib.erl line 392
  30: <P.1/gproc_sup>: receives message ({ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}})
    in proc_lib.erl line 348
  31: <P.1/gproc_sup>: true = ets:give_away(gproc_monitor, <P.1.2/gproc_monitor>, [])
    in gproc_monitor.erl line 104
  32: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  33: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  34: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_bcast)
    in gen.erl line 299
  35: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  36: <P.1/gproc_sup>: <P.1.3/gproc_bcast> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_bcast},gproc_bcast,[],[]]],[link]})
    in erlang.erl line 2868
  37: <P.1.2/gproc_monitor>: receives message ({'ETS-TRANSFER',gproc_monitor,<P.1/gproc_sup>,[]})
    in gproc_monitor.erl line 126
  38: <P.1.2/gproc_monitor>: <P.1/gproc_sup> = erlang:whereis(gproc_sup)
    in gen.erl line 382
  39: <P.1.3/gproc_bcast>: true = erlang:register(gproc_bcast, <P.1.3/gproc_bcast>)
    in gen.erl line 302
  40: <P.1.3/gproc_bcast>: {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}} = <P.1/gproc_sup> ! {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}}
    in proc_lib.erl line 392
  41: <P.1/gproc_sup>: receives message ({ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}})
    in proc_lib.erl line 348
  42: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  43: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  44: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_pool)
    in gen.erl line 299
  45: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  46: <P.1/gproc_sup>: <P.1.4/gproc_pool> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_pool},gproc_pool,[],[]]],[link]})
    in erlang.erl line 2868
  47: <P.1.4/gproc_pool>: true = erlang:register(gproc_pool, <P.1.4/gproc_pool>)
    in gen.erl line 302
  48: <P.1.4/gproc_pool>: {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}} = <P.1/gproc_sup> ! {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}}
    in proc_lib.erl line 392
  49: <P.1/gproc_sup>: receives message ({ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}})
    in proc_lib.erl line 348
  50: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  51: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  52: <P.1/gproc_sup>: {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}} = <P> ! {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}}
    in proc_lib.erl line 392
  53: <P>: receives message ({ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}})
    in proc_lib.erl line 348
  54: <P>: {<P.2>,#Ref<0.3937440253.4130865153.76259>} = erlang:spawn_opt({erlang,apply,[#Fun<test.8.122744875>,[]],[monitor]})
    in erlang.erl line 2731
  55: <P.2>: #Ref<0.3937440253.4130865153.76262> = erlang:monitor(process, <P>)
    in test.erl line 38
  56: <P.2>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  57: <P.2>: #Ref<0.3937440253.4130865153.76266> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  58: <P.2>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}}, [noconnect])
    in gen.erl line 167
  59: <P.1.1/gproc>: receives message ({'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}})
    in gen_server.erl line 381
  60: <P.1.1/gproc>: true = ets:insert_new(gproc, {{{n,l,foo},n},<P.2>,the_value})
    in gproc_lib.erl line 78
  61: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,{n,l,foo}},[]})
  62: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,l}})
    in gproc_lib.erl line 300
  63: <P.1.1/gproc>: #Ref<0.3937440253.4130865153.76276> = erlang:monitor(process, <P.2>)
    in gproc_lib.erl line 302
  64: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76266>,true} = <P.2> ! {#Ref<0.3937440253.4130865153.76266>,true}
    in gen_server.erl line 243
  65: <P.2>: receives message ({#Ref<0.3937440253.4130865153.76266>,true})
    in gen.erl line 169
  66: <P.2>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76266>, [flush])
    in gen.erl line 171
  67: <P.2>: {<P.2>,ok} = <P> ! {<P.2>,ok}
    in test.erl line 40
  68: <P>: receives message ({<P.2>,ok})
    in test.erl line 45
  69: <P>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  70: <P>: #Ref<0.3937440253.4130865153.76286> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  71: <P>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}}, [noconnect])
    in gen.erl line 167
  72: <P.1.1/gproc>: receives message ({'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}})
    in gen_server.erl line 381
  73: <P.1.1/gproc>: [{{{n,l,foo},n},<P.2>,the_value}] = ets:lookup(gproc, {{n,l,foo},n})
    in gproc.erl line 2072
  74: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}} = <P> ! {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}}
    in gen_server.erl line 243
  75: <P>: receives message ({#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}})
    in gen.erl line 169
  76: <P>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76286>, [flush])
    in gen.erl line 171
  77: <P>: true = erlang:exit(<P.2>, kill)
    in test.erl line 47
  78: <P.2>: exits abnormally (killed)
  79: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed} = erlang:send(<P>, {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    (while exiting)
  80: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed} = erlang:send(<P.1.1/gproc>, {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed})
    (while exiting)
  81: <P>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    in test.erl line 48
  82: <P>: exits normally
  83: <P>: true = erlang:exit(<P.1/gproc_sup>, normal)
    (while exiting)
  84: <P>: {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal} = erlang:send(<P.2>, {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal})
    (while exiting)
  85: <P.1/gproc_sup>: receives message ({'EXIT',<P>,normal})
    in gen_server.erl line 381
  86: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76307> = erlang:monitor(process, <P.1.4/gproc_pool>)
    in supervisor.erl line 978
  87: <P.1/gproc_sup>: true = erlang:unlink(<P.1.4/gproc_pool>)
    in supervisor.erl line 979
  88: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
  89: <P.1/gproc_sup>: true = erlang:exit(<P.1.4/gproc_pool>, shutdown)
    in supervisor.erl line 954
  90: <P.1.1/gproc>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed})
    in gen_server.erl line 381
  91: <P.1.1/gproc>: true = ets:member(gproc, {<P.2>,l})
    in gproc.erl line 2313
  92: <P.1.1/gproc>: [{{n,l,foo},[]}] = ets:select(gproc, [{{{<P.2>,'$1'},'$2'},[{'==',{element,2,'$1'},l}],[{{'$1','$2'}}]}])
    in gproc.erl line 2317
  93: <P.1.1/gproc>: [{{{n,l,foo},n},<P.2>,the_value}] = ets:lookup(gproc, {{n,l,foo},n})
    in gproc.erl line 2323
  94: <P.1.4/gproc_pool>: exits abnormally (shutdown)
  95: <P.1.4/gproc_pool>: {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    (while exiting)
  96: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    in supervisor.erl line 955
  97: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76331> = erlang:monitor(process, <P.1.3/gproc_bcast>)
    in supervisor.erl line 978
  98: <P.1/gproc_sup>: true = erlang:unlink(<P.1.3/gproc_bcast>)
    in supervisor.erl line 979
  99: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 100: <P.1/gproc_sup>: true = erlang:exit(<P.1.3/gproc_bcast>, shutdown)
    in supervisor.erl line 954
 101: <P.1.3/gproc_bcast>: exits abnormally (shutdown)
 102: <P.1.3/gproc_bcast>: {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    (while exiting)
 103: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    in supervisor.erl line 955
 104: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76340> = erlang:monitor(process, <P.1.2/gproc_monitor>)
    in supervisor.erl line 978
 105: <P.1/gproc_sup>: true = erlang:unlink(<P.1.2/gproc_monitor>)
    in supervisor.erl line 979
 106: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 107: <P.1/gproc_sup>: true = erlang:exit(<P.1.2/gproc_monitor>, shutdown)
    in supervisor.erl line 954
 108: <P.1.2/gproc_monitor>: exits abnormally (shutdown)
 109: <P.1.2/gproc_monitor>: true = ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 110: <P.1.2/gproc_monitor>: {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    (while exiting)
 111: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    in supervisor.erl line 955
 112: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76351> = erlang:monitor(process, <P.1.1/gproc>)
    in supervisor.erl line 978
 113: <P.1/gproc_sup>: true = erlang:unlink(<P.1.1/gproc>)
    in supervisor.erl line 979
 114: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 115: <P.1/gproc_sup>: true = erlang:exit(<P.1.1/gproc>, shutdown)
    in supervisor.erl line 954
 116: <P.1.1/gproc>: exits abnormally (shutdown)
 117: <P.1.1/gproc>: {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    (while exiting)
 118: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    in supervisor.erl line 955
 119: <P.1/gproc_sup>: exits normally
 120: <P.1/gproc_sup>: true = ets:delete(gproc)
    (while exiting)
 121: <P.1/gproc_sup>: Exception badarg raised by: ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 122: <P.1/gproc_sup>: true = ets:delete(gproc_monitor)
    (while exiting)
 123: <P.1/gproc_sup>: true = erlang:exit(<P>, normal)
    (while exiting)
################################################################################
Interleaving #5
--------------------------------------------------------------------------------
Errors found:
* At step 78 process <P.2> exited abnormally
    Reason:
      killed
    Stacktrace:
      []
--------------------------------------------------------------------------------
Event trace:
   1: <P>: undefined = erlang:whereis(gproc_sup)
    in gen.erl line 299
   2: <P>: [] = erlang:process_info(<P>, registered_name)
    in proc_lib.erl line 731
   3: <P>: <P.1/gproc_sup> = erlang:spawn_opt({proc_lib,init_p,[<P>,[],gen,init_it,[gen_server,<P>,<P>,{local,gproc_sup},supervisor,{{local,gproc_sup},gproc_sup,[]},[]]],[link]})
    in erlang.erl line 2868
   4: <P.1/gproc_sup>: true = erlang:register(gproc_sup, <P.1/gproc_sup>)
    in gen.erl line 302
   5: <P.1/gproc_sup>: false = erlang:process_flag(trap_exit, true)
    in supervisor.erl line 293
   6: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   7: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
   8: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   9: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  10: <P.1/gproc_sup>: undefined = ets:info(gproc, name)
    in gproc.erl line 2488
  11: <P.1/gproc_sup>: gproc = ets:new(gproc, [ordered_set,public,named_table,{write_concurrency,true},{read_concurrency,true}])
    in gproc.erl line 2490
  12: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
  13: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  14: <P.1/gproc_sup>: undefined = erlang:whereis(gproc)
    in gen.erl line 299
  15: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  16: <P.1/gproc_sup>: <P.1.1/gproc> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc},gproc,[],[{spawn_opt,[]}]]],[link]})
    in erlang.erl line 2868
  17: <P.1.1/gproc>: true = erlang:register(gproc, <P.1.1/gproc>)
    in gen.erl line 302
  18: <P.1.1/gproc>: '$end_of_table' = ets:select(gproc, [{{{'$1',l}},[],['$1']}], 100)
    in gproc.erl line 2502
  19: <P.1.1/gproc>: {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}} = <P.1/gproc_sup> ! {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}}
    in proc_lib.erl line 392
  20: <P.1/gproc_sup>: receives message ({ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}})
    in proc_lib.erl line 348
  21: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  22: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  23: <P.1/gproc_sup>: undefined = ets:info(gproc_monitor, owner)
  24: <P.1/gproc_sup>: gproc_monitor = ets:new(gproc_monitor, [ordered_set,protected,named_table,{heir,<P.1/gproc_sup>,[]}])
  25: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  26: <P.1/gproc_sup>: <P.1.2/gproc_monitor> = erlang:spawn_link(proc_lib, init_p, [gproc_sup,[<P>],gproc_monitor,init,[<P.1/gproc_sup>]])
    in proc_lib.erl line 100
  27: <P.1.2/gproc_monitor>: normal = erlang:process_flag(priority, high)
    in gproc_monitor.erl line 123
  28: <P.1.2/gproc_monitor>: true = erlang:register(gproc_monitor, <P.1.2/gproc_monitor>)
    in gproc_monitor.erl line 124
  29: <P.1.2/gproc_monitor>: {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}} = <P.1/gproc_sup> ! {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}}
    in proc_lib.erl line 392
  30: <P.1/gproc_sup>: receives message ({ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}})
    in proc_lib.erl line 348
  31: <P.1/gproc_sup>: true = ets:give_away(gproc_monitor, <P.1.2/gproc_monitor>, [])
    in gproc_monitor.erl line 104
  32: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  33: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  34: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_bcast)
    in gen.erl line 299
  35: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  36: <P.1/gproc_sup>: <P.1.3/gproc_bcast> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_bcast},gproc_bcast,[],[]]],[link]})
    in erlang.erl line 2868
  37: <P.1.2/gproc_monitor>: receives message ({'ETS-TRANSFER',gproc_monitor,<P.1/gproc_sup>,[]})
    in gproc_monitor.erl line 126
  38: <P.1.2/gproc_monitor>: <P.1/gproc_sup> = erlang:whereis(gproc_sup)
    in gen.erl line 382
  39: <P.1.3/gproc_bcast>: true = erlang:register(gproc_bcast, <P.1.3/gproc_bcast>)
    in gen.erl line 302
  40: <P.1.3/gproc_bcast>: {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}} = <P.1/gproc_sup> ! {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}}
    in proc_lib.erl line 392
  41: <P.1/gproc_sup>: receives message ({ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}})
    in proc_lib.erl line 348
  42: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  43: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  44: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_pool)
    in gen.erl line 299
  45: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  46: <P.1/gproc_sup>: <P.1.4/gproc_pool> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_pool},gproc_pool,[],[]]],[link]})
    in erlang.erl line 2868
  47: <P.1.4/gproc_pool>: true = erlang:register(gproc_pool, <P.1.4/gproc_pool>)
    in gen.erl line 302
  48: <P.1.4/gproc_pool>: {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}} = <P.1/gproc_sup> ! {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}}
    in proc_lib.erl line 392
  49: <P.1/gproc_sup>: receives message ({ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}})
    in proc_lib.erl line 348
  50: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  51: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  52: <P.1/gproc_sup>: {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}} = <P> ! {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}}
    in proc_lib.erl line 392
  53: <P>: receives message ({ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}})
    in proc_lib.erl line 348
  54: <P>: {<P.2>,#Ref<0.3937440253.4130865153.76259>} = erlang:spawn_opt({erlang,apply,[#Fun<test.8.122744875>,[]],[monitor]})
    in erlang.erl line 2731
  55: <P.2>: #Ref<0.3937440253.4130865153.76262> = erlang:monitor(process, <P>)
    in test.erl line 38
  56: <P.2>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  57: <P.2>: #Ref<0.3937440253.4130865153.76266> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  58: <P.2>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}}, [noconnect])
    in gen.erl line 167
  59: <P.1.1/gproc>: receives message ({'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}})
    in gen_server.erl line 381
  60: <P.1.1/gproc>: true = ets:insert_new(gproc, {{{n,l,foo},n},<P.2>,the_value})
    in gproc_lib.erl line 78
  61: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,{n,l,foo}},[]})
  62: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,l}})
    in gproc_lib.erl line 300
  63: <P.1.1/gproc>: #Ref<0.3937440253.4130865153.76276> = erlang:monitor(process, <P.2>)
    in gproc_lib.erl line 302
  64: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76266>,true} = <P.2> ! {#Ref<0.3937440253.4130865153.76266>,true}
    in gen_server.erl line 243
  65: <P.2>: receives message ({#Ref<0.3937440253.4130865153.76266>,true})
    in gen.erl line 169
  66: <P.2>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76266>, [flush])
    in gen.erl line 171
  67: <P.2>: {<P.2>,ok} = <P> ! {<P.2>,ok}
    in test.erl line 40
  68: <P>: receives message ({<P.2>,ok})
    in test.erl line 45
  69: <P>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  70: <P>: #Ref<0.3937440253.4130865153.76286> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  71: <P>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}}, [noconnect])
    in gen.erl line 167
  72: <P.1.1/gproc>: receives message ({'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}})
    in gen_server.erl line 381
  73: <P.1.1/gproc>: [{{{n,l,foo},n},<P.2>,the_value}] = ets:lookup(gproc, {{n,l,foo},n})
    in gproc.erl line 2072
  74: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}} = <P> ! {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}}
    in gen_server.erl line 243
  75: <P>: receives message ({#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}})
    in gen.erl line 169
  76: <P>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76286>, [flush])
    in gen.erl line 171
  77: <P>: true = erlang:exit(<P.2>, kill)
    in test.erl line 47
  78: <P.2>: exits abnormally (killed)
  79: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed} = erlang:send(<P>, {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    (while exiting)
  80: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed} = erlang:send(<P.1.1/gproc>, {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed})
    (while exiting)
  81: <P>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    in test.erl line 48
  82: <P>: exits normally
  83: <P>: true = erlang:exit(<P.1/gproc_sup>, normal)
    (while exiting)
  84: <P>: {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal} = erlang:send(<P.2>, {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal})
    (while exiting)
  85: <P.1/gproc_sup>: receives message ({'EXIT',<P>,normal})
    in gen_server.erl line 381
  86: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76307> = erlang:monitor(process, <P.1.4/gproc_pool>)
    in supervisor.erl line 978
  87: <P.1/gproc_sup>: true = erlang:unlink(<P.1.4/gproc_pool>)
    in supervisor.erl line 979
  88: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
  89: <P.1/gproc_sup>: true = erlang:exit(<P.1.4/gproc_pool>, shutdown)
    in supervisor.erl line 954
  90: <P.1.1/gproc>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed})
    in gen_server.erl line 381
  91: <P.1.1/gproc>: true = ets:member(gproc, {<P.2>,l})
    in gproc.erl line 2313
  92: <P.1.1/gproc>: [{{n,l,foo},[]}] = ets:select(gproc, [{{{<P.2>,'$1'},'$2'},[{'==',{element,2,'$1'},l}],[{{'$1','$2'}}]}])
    in gproc.erl line 2317
  93: <P.1.4/gproc_pool>: exits abnormally (shutdown)
  94: <P.1.4/gproc_pool>: {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    (while exiting)
  95: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    in supervisor.erl line 955
  96: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76331> = erlang:monitor(process, <P.1.3/gproc_bcast>)
    in supervisor.erl line 978
  97: <P.1/gproc_sup>: true = erlang:unlink(<P.1.3/gproc_bcast>)
    in supervisor.erl line 979
  98: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
  99: <P.1/gproc_sup>: true = erlang:exit(<P.1.3/gproc_bcast>, shutdown)
    in supervisor.erl line 954
 100: <P.1.3/gproc_bcast>: exits abnormally (shutdown)
 101: <P.1.3/gproc_bcast>: {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    (while exiting)
 102: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    in supervisor.erl line 955
 103: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76340> = erlang:monitor(process, <P.1.2/gproc_monitor>)
    in supervisor.erl line 978
 104: <P.1/gproc_sup>: true = erlang:unlink(<P.1.2/gproc_monitor>)
    in supervisor.erl line 979
 105: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 106: <P.1/gproc_sup>: true = erlang:exit(<P.1.2/gproc_monitor>, shutdown)
    in supervisor.erl line 954
 107: <P.1.2/gproc_monitor>: exits abnormally (shutdown)
 108: <P.1.2/gproc_monitor>: true = ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 109: <P.1.2/gproc_monitor>: {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    (while exiting)
 110: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    in supervisor.erl line 955
 111: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76351> = erlang:monitor(process, <P.1.1/gproc>)
    in supervisor.erl line 978
 112: <P.1/gproc_sup>: true = erlang:unlink(<P.1.1/gproc>)
    in supervisor.erl line 979
 113: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 114: <P.1/gproc_sup>: true = erlang:exit(<P.1.1/gproc>, shutdown)
    in supervisor.erl line 954
 115: <P.1.1/gproc>: exits abnormally (shutdown)
 116: <P.1.1/gproc>: {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    (while exiting)
 117: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    in supervisor.erl line 955
 118: <P.1/gproc_sup>: exits normally
 119: <P.1/gproc_sup>: true = ets:delete(gproc)
    (while exiting)
 120: <P.1/gproc_sup>: Exception badarg raised by: ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 121: <P.1/gproc_sup>: true = ets:delete(gproc_monitor)
    (while exiting)
 122: <P.1/gproc_sup>: true = erlang:exit(<P>, normal)
    (while exiting)
################################################################################
Interleaving #6
--------------------------------------------------------------------------------
Errors found:
* At step 78 process <P.2> exited abnormally
    Reason:
      killed
    Stacktrace:
      []
--------------------------------------------------------------------------------
Event trace:
   1: <P>: undefined = erlang:whereis(gproc_sup)
    in gen.erl line 299
   2: <P>: [] = erlang:process_info(<P>, registered_name)
    in proc_lib.erl line 731
   3: <P>: <P.1/gproc_sup> = erlang:spawn_opt({proc_lib,init_p,[<P>,[],gen,init_it,[gen_server,<P>,<P>,{local,gproc_sup},supervisor,{{local,gproc_sup},gproc_sup,[]},[]]],[link]})
    in erlang.erl line 2868
   4: <P.1/gproc_sup>: true = erlang:register(gproc_sup, <P.1/gproc_sup>)
    in gen.erl line 302
   5: <P.1/gproc_sup>: false = erlang:process_flag(trap_exit, true)
    in supervisor.erl line 293
   6: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   7: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
   8: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   9: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  10: <P.1/gproc_sup>: undefined = ets:info(gproc, name)
    in gproc.erl line 2488
  11: <P.1/gproc_sup>: gproc = ets:new(gproc, [ordered_set,public,named_table,{write_concurrency,true},{read_concurrency,true}])
    in gproc.erl line 2490
  12: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
  13: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  14: <P.1/gproc_sup>: undefined = erlang:whereis(gproc)
    in gen.erl line 299
  15: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  16: <P.1/gproc_sup>: <P.1.1/gproc> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc},gproc,[],[{spawn_opt,[]}]]],[link]})
    in erlang.erl line 2868
  17: <P.1.1/gproc>: true = erlang:register(gproc, <P.1.1/gproc>)
    in gen.erl line 302
  18: <P.1.1/gproc>: '$end_of_table' = ets:select(gproc, [{{{'$1',l}},[],['$1']}], 100)
    in gproc.erl line 2502
  19: <P.1.1/gproc>: {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}} = <P.1/gproc_sup> ! {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}}
    in proc_lib.erl line 392
  20: <P.1/gproc_sup>: receives message ({ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}})
    in proc_lib.erl line 348
  21: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  22: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  23: <P.1/gproc_sup>: undefined = ets:info(gproc_monitor, owner)
  24: <P.1/gproc_sup>: gproc_monitor = ets:new(gproc_monitor, [ordered_set,protected,named_table,{heir,<P.1/gproc_sup>,[]}])
  25: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  26: <P.1/gproc_sup>: <P.1.2/gproc_monitor> = erlang:spawn_link(proc_lib, init_p, [gproc_sup,[<P>],gproc_monitor,init,[<P.1/gproc_sup>]])
    in proc_lib.erl line 100
  27: <P.1.2/gproc_monitor>: normal = erlang:process_flag(priority, high)
    in gproc_monitor.erl line 123
  28: <P.1.2/gproc_monitor>: true = erlang:register(gproc_monitor, <P.1.2/gproc_monitor>)
    in gproc_monitor.erl line 124
  29: <P.1.2/gproc_monitor>: {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}} = <P.1/gproc_sup> ! {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}}
    in proc_lib.erl line 392
  30: <P.1/gproc_sup>: receives message ({ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}})
    in proc_lib.erl line 348
  31: <P.1/gproc_sup>: true = ets:give_away(gproc_monitor, <P.1.2/gproc_monitor>, [])
    in gproc_monitor.erl line 104
  32: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  33: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  34: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_bcast)
    in gen.erl line 299
  35: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  36: <P.1/gproc_sup>: <P.1.3/gproc_bcast> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_bcast},gproc_bcast,[],[]]],[link]})
    in erlang.erl line 2868
  37: <P.1.2/gproc_monitor>: receives message ({'ETS-TRANSFER',gproc_monitor,<P.1/gproc_sup>,[]})
    in gproc_monitor.erl line 126
  38: <P.1.2/gproc_monitor>: <P.1/gproc_sup> = erlang:whereis(gproc_sup)
    in gen.erl line 382
  39: <P.1.3/gproc_bcast>: true = erlang:register(gproc_bcast, <P.1.3/gproc_bcast>)
    in gen.erl line 302
  40: <P.1.3/gproc_bcast>: {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}} = <P.1/gproc_sup> ! {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}}
    in proc_lib.erl line 392
  41: <P.1/gproc_sup>: receives message ({ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}})
    in proc_lib.erl line 348
  42: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  43: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  44: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_pool)
    in gen.erl line 299
  45: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  46: <P.1/gproc_sup>: <P.1.4/gproc_pool> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_pool},gproc_pool,[],[]]],[link]})
    in erlang.erl line 2868
  47: <P.1.4/gproc_pool>: true = erlang:register(gproc_pool, <P.1.4/gproc_pool>)
    in gen.erl line 302
  48: <P.1.4/gproc_pool>: {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}} = <P.1/gproc_sup> ! {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}}
    in proc_lib.erl line 392
  49: <P.1/gproc_sup>: receives message ({ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}})
    in proc_lib.erl line 348
  50: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  51: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  52: <P.1/gproc_sup>: {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}} = <P> ! {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}}
    in proc_lib.erl line 392
  53: <P>: receives message ({ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}})
    in proc_lib.erl line 348
  54: <P>: {<P.2>,#Ref<0.3937440253.4130865153.76259>} = erlang:spawn_opt({erlang,apply,[#Fun<test.8.122744875>,[]],[monitor]})
    in erlang.erl line 2731
  55: <P.2>: #Ref<0.3937440253.4130865153.76262> = erlang:monitor(process, <P>)
    in test.erl line 38
  56: <P.2>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  57: <P.2>: #Ref<0.3937440253.4130865153.76266> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  58: <P.2>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}}, [noconnect])
    in gen.erl line 167
  59: <P.1.1/gproc>: receives message ({'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}})
    in gen_server.erl line 381
  60: <P.1.1/gproc>: true = ets:insert_new(gproc, {{{n,l,foo},n},<P.2>,the_value})
    in gproc_lib.erl line 78
  61: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,{n,l,foo}},[]})
  62: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,l}})
    in gproc_lib.erl line 300
  63: <P.1.1/gproc>: #Ref<0.3937440253.4130865153.76276> = erlang:monitor(process, <P.2>)
    in gproc_lib.erl line 302
  64: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76266>,true} = <P.2> ! {#Ref<0.3937440253.4130865153.76266>,true}
    in gen_server.erl line 243
  65: <P.2>: receives message ({#Ref<0.3937440253.4130865153.76266>,true})
    in gen.erl line 169
  66: <P.2>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76266>, [flush])
    in gen.erl line 171
  67: <P.2>: {<P.2>,ok} = <P> ! {<P.2>,ok}
    in test.erl line 40
  68: <P>: receives message ({<P.2>,ok})
    in test.erl line 45
  69: <P>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  70: <P>: #Ref<0.3937440253.4130865153.76286> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  71: <P>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}}, [noconnect])
    in gen.erl line 167
  72: <P.1.1/gproc>: receives message ({'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}})
    in gen_server.erl line 381
  73: <P.1.1/gproc>: [{{{n,l,foo},n},<P.2>,the_value}] = ets:lookup(gproc, {{n,l,foo},n})
    in gproc.erl line 2072
  74: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}} = <P> ! {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}}
    in gen_server.erl line 243
  75: <P>: receives message ({#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}})
    in gen.erl line 169
  76: <P>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76286>, [flush])
    in gen.erl line 171
  77: <P>: true = erlang:exit(<P.2>, kill)
    in test.erl line 47
  78: <P.2>: exits abnormally (killed)
  79: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed} = erlang:send(<P>, {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    (while exiting)
  80: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed} = erlang:send(<P.1.1/gproc>, {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed})
    (while exiting)
  81: <P>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    in test.erl line 48
  82: <P>: exits normally
  83: <P>: true = erlang:exit(<P.1/gproc_sup>, normal)
    (while exiting)
  84: <P>: {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal} = erlang:send(<P.2>, {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal})
    (while exiting)
  85: <P.1/gproc_sup>: receives message ({'EXIT',<P>,normal})
    in gen_server.erl line 381
  86: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76307> = erlang:monitor(process, <P.1.4/gproc_pool>)
    in supervisor.erl line 978
  87: <P.1/gproc_sup>: true = erlang:unlink(<P.1.4/gproc_pool>)
    in supervisor.erl line 979
  88: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
  89: <P.1/gproc_sup>: true = erlang:exit(<P.1.4/gproc_pool>, shutdown)
    in supervisor.erl line 954
  90: <P.1.1/gproc>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed})
    in gen_server.erl line 381
  91: <P.1.1/gproc>: true = ets:member(gproc, {<P.2>,l})
    in gproc.erl line 2313
  92: <P.1.4/gproc_pool>: exits abnormally (shutdown)
  93: <P.1.4/gproc_pool>: {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    (while exiting)
  94: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    in supervisor.erl line 955
  95: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76331> = erlang:monitor(process, <P.1.3/gproc_bcast>)
    in supervisor.erl line 978
  96: <P.1/gproc_sup>: true = erlang:unlink(<P.1.3/gproc_bcast>)
    in supervisor.erl line 979
  97: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
  98: <P.1/gproc_sup>: true = erlang:exit(<P.1.3/gproc_bcast>, shutdown)
    in supervisor.erl line 954
  99: <P.1.3/gproc_bcast>: exits abnormally (shutdown)
 100: <P.1.3/gproc_bcast>: {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    (while exiting)
 101: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    in supervisor.erl line 955
 102: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76340> = erlang:monitor(process, <P.1.2/gproc_monitor>)
    in supervisor.erl line 978
 103: <P.1/gproc_sup>: true = erlang:unlink(<P.1.2/gproc_monitor>)
    in supervisor.erl line 979
 104: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 105: <P.1/gproc_sup>: true = erlang:exit(<P.1.2/gproc_monitor>, shutdown)
    in supervisor.erl line 954
 106: <P.1.2/gproc_monitor>: exits abnormally (shutdown)
 107: <P.1.2/gproc_monitor>: true = ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 108: <P.1.2/gproc_monitor>: {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    (while exiting)
 109: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    in supervisor.erl line 955
 110: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76351> = erlang:monitor(process, <P.1.1/gproc>)
    in supervisor.erl line 978
 111: <P.1/gproc_sup>: true = erlang:unlink(<P.1.1/gproc>)
    in supervisor.erl line 979
 112: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 113: <P.1/gproc_sup>: true = erlang:exit(<P.1.1/gproc>, shutdown)
    in supervisor.erl line 954
 114: <P.1.1/gproc>: exits abnormally (shutdown)
 115: <P.1.1/gproc>: {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    (while exiting)
 116: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    in supervisor.erl line 955
 117: <P.1/gproc_sup>: exits normally
 118: <P.1/gproc_sup>: true = ets:delete(gproc)
    (while exiting)
 119: <P.1/gproc_sup>: Exception badarg raised by: ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 120: <P.1/gproc_sup>: true = ets:delete(gproc_monitor)
    (while exiting)
 121: <P.1/gproc_sup>: true = erlang:exit(<P>, normal)
    (while exiting)
################################################################################
Interleaving #7
--------------------------------------------------------------------------------
Errors found:
* At step 78 process <P.2> exited abnormally
    Reason:
      killed
    Stacktrace:
      []
--------------------------------------------------------------------------------
Event trace:
   1: <P>: undefined = erlang:whereis(gproc_sup)
    in gen.erl line 299
   2: <P>: [] = erlang:process_info(<P>, registered_name)
    in proc_lib.erl line 731
   3: <P>: <P.1/gproc_sup> = erlang:spawn_opt({proc_lib,init_p,[<P>,[],gen,init_it,[gen_server,<P>,<P>,{local,gproc_sup},supervisor,{{local,gproc_sup},gproc_sup,[]},[]]],[link]})
    in erlang.erl line 2868
   4: <P.1/gproc_sup>: true = erlang:register(gproc_sup, <P.1/gproc_sup>)
    in gen.erl line 302
   5: <P.1/gproc_sup>: false = erlang:process_flag(trap_exit, true)
    in supervisor.erl line 293
   6: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   7: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
   8: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   9: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  10: <P.1/gproc_sup>: undefined = ets:info(gproc, name)
    in gproc.erl line 2488
  11: <P.1/gproc_sup>: gproc = ets:new(gproc, [ordered_set,public,named_table,{write_concurrency,true},{read_concurrency,true}])
    in gproc.erl line 2490
  12: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
  13: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  14: <P.1/gproc_sup>: undefined = erlang:whereis(gproc)
    in gen.erl line 299
  15: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  16: <P.1/gproc_sup>: <P.1.1/gproc> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc},gproc,[],[{spawn_opt,[]}]]],[link]})
    in erlang.erl line 2868
  17: <P.1.1/gproc>: true = erlang:register(gproc, <P.1.1/gproc>)
    in gen.erl line 302
  18: <P.1.1/gproc>: '$end_of_table' = ets:select(gproc, [{{{'$1',l}},[],['$1']}], 100)
    in gproc.erl line 2502
  19: <P.1.1/gproc>: {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}} = <P.1/gproc_sup> ! {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}}
    in proc_lib.erl line 392
  20: <P.1/gproc_sup>: receives message ({ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}})
    in proc_lib.erl line 348
  21: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  22: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  23: <P.1/gproc_sup>: undefined = ets:info(gproc_monitor, owner)
  24: <P.1/gproc_sup>: gproc_monitor = ets:new(gproc_monitor, [ordered_set,protected,named_table,{heir,<P.1/gproc_sup>,[]}])
  25: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  26: <P.1/gproc_sup>: <P.1.2/gproc_monitor> = erlang:spawn_link(proc_lib, init_p, [gproc_sup,[<P>],gproc_monitor,init,[<P.1/gproc_sup>]])
    in proc_lib.erl line 100
  27: <P.1.2/gproc_monitor>: normal = erlang:process_flag(priority, high)
    in gproc_monitor.erl line 123
  28: <P.1.2/gproc_monitor>: true = erlang:register(gproc_monitor, <P.1.2/gproc_monitor>)
    in gproc_monitor.erl line 124
  29: <P.1.2/gproc_monitor>: {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}} = <P.1/gproc_sup> ! {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}}
    in proc_lib.erl line 392
  30: <P.1/gproc_sup>: receives message ({ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}})
    in proc_lib.erl line 348
  31: <P.1/gproc_sup>: true = ets:give_away(gproc_monitor, <P.1.2/gproc_monitor>, [])
    in gproc_monitor.erl line 104
  32: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  33: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  34: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_bcast)
    in gen.erl line 299
  35: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  36: <P.1/gproc_sup>: <P.1.3/gproc_bcast> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_bcast},gproc_bcast,[],[]]],[link]})
    in erlang.erl line 2868
  37: <P.1.2/gproc_monitor>: receives message ({'ETS-TRANSFER',gproc_monitor,<P.1/gproc_sup>,[]})
    in gproc_monitor.erl line 126
  38: <P.1.2/gproc_monitor>: <P.1/gproc_sup> = erlang:whereis(gproc_sup)
    in gen.erl line 382
  39: <P.1.3/gproc_bcast>: true = erlang:register(gproc_bcast, <P.1.3/gproc_bcast>)
    in gen.erl line 302
  40: <P.1.3/gproc_bcast>: {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}} = <P.1/gproc_sup> ! {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}}
    in proc_lib.erl line 392
  41: <P.1/gproc_sup>: receives message ({ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}})
    in proc_lib.erl line 348
  42: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  43: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  44: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_pool)
    in gen.erl line 299
  45: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  46: <P.1/gproc_sup>: <P.1.4/gproc_pool> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_pool},gproc_pool,[],[]]],[link]})
    in erlang.erl line 2868
  47: <P.1.4/gproc_pool>: true = erlang:register(gproc_pool, <P.1.4/gproc_pool>)
    in gen.erl line 302
  48: <P.1.4/gproc_pool>: {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}} = <P.1/gproc_sup> ! {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}}
    in proc_lib.erl line 392
  49: <P.1/gproc_sup>: receives message ({ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}})
    in proc_lib.erl line 348
  50: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  51: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  52: <P.1/gproc_sup>: {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}} = <P> ! {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}}
    in proc_lib.erl line 392
  53: <P>: receives message ({ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}})
    in proc_lib.erl line 348
  54: <P>: {<P.2>,#Ref<0.3937440253.4130865153.76259>} = erlang:spawn_opt({erlang,apply,[#Fun<test.8.122744875>,[]],[monitor]})
    in erlang.erl line 2731
  55: <P.2>: #Ref<0.3937440253.4130865153.76262> = erlang:monitor(process, <P>)
    in test.erl line 38
  56: <P.2>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  57: <P.2>: #Ref<0.3937440253.4130865153.76266> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  58: <P.2>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}}, [noconnect])
    in gen.erl line 167
  59: <P.1.1/gproc>: receives message ({'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}})
    in gen_server.erl line 381
  60: <P.1.1/gproc>: true = ets:insert_new(gproc, {{{n,l,foo},n},<P.2>,the_value})
    in gproc_lib.erl line 78
  61: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,{n,l,foo}},[]})
  62: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,l}})
    in gproc_lib.erl line 300
  63: <P.1.1/gproc>: #Ref<0.3937440253.4130865153.76276> = erlang:monitor(process, <P.2>)
    in gproc_lib.erl line 302
  64: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76266>,true} = <P.2> ! {#Ref<0.3937440253.4130865153.76266>,true}
    in gen_server.erl line 243
  65: <P.2>: receives message ({#Ref<0.3937440253.4130865153.76266>,true})
    in gen.erl line 169
  66: <P.2>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76266>, [flush])
    in gen.erl line 171
  67: <P.2>: {<P.2>,ok} = <P> ! {<P.2>,ok}
    in test.erl line 40
  68: <P>: receives message ({<P.2>,ok})
    in test.erl line 45
  69: <P>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  70: <P>: #Ref<0.3937440253.4130865153.76286> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  71: <P>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}}, [noconnect])
    in gen.erl line 167
  72: <P.1.1/gproc>: receives message ({'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}})
    in gen_server.erl line 381
  73: <P.1.1/gproc>: [{{{n,l,foo},n},<P.2>,the_value}] = ets:lookup(gproc, {{n,l,foo},n})
    in gproc.erl line 2072
  74: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}} = <P> ! {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}}
    in gen_server.erl line 243
  75: <P>: receives message ({#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}})
    in gen.erl line 169
  76: <P>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76286>, [flush])
    in gen.erl line 171
  77: <P>: true = erlang:exit(<P.2>, kill)
    in test.erl line 47
  78: <P.2>: exits abnormally (killed)
  79: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed} = erlang:send(<P>, {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    (while exiting)
  80: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed} = erlang:send(<P.1.1/gproc>, {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed})
    (while exiting)
  81: <P>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    in test.erl line 48
  82: <P>: exits normally
  83: <P>: true = erlang:exit(<P.1/gproc_sup>, normal)
    (while exiting)
  84: <P>: {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal} = erlang:send(<P.2>, {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal})
    (while exiting)
  85: <P.1/gproc_sup>: receives message ({'EXIT',<P>,normal})
    in gen_server.erl line 381
  86: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76307> = erlang:monitor(process, <P.1.4/gproc_pool>)
    in supervisor.erl line 978
  87: <P.1/gproc_sup>: true = erlang:unlink(<P.1.4/gproc_pool>)
    in supervisor.erl line 979
  88: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
  89: <P.1/gproc_sup>: true = erlang:exit(<P.1.4/gproc_pool>, shutdown)
    in supervisor.erl line 954
  90: <P.1.1/gproc>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed})
    in gen_server.erl line 381
  91: <P.1.4/gproc_pool>: exits abnormally (shutdown)
  92: <P.1.4/gproc_pool>: {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    (while exiting)
  93: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    in supervisor.erl line 955
  94: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76331> = erlang:monitor(process, <P.1.3/gproc_bcast>)
    in supervisor.erl line 978
  95: <P.1/gproc_sup>: true = erlang:unlink(<P.1.3/gproc_bcast>)
    in supervisor.erl line 979
  96: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
  97: <P.1/gproc_sup>: true = erlang:exit(<P.1.3/gproc_bcast>, shutdown)
    in supervisor.erl line 954
  98: <P.1.3/gproc_bcast>: exits abnormally (shutdown)
  99: <P.1.3/gproc_bcast>: {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    (while exiting)
 100: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    in supervisor.erl line 955
 101: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76340> = erlang:monitor(process, <P.1.2/gproc_monitor>)
    in supervisor.erl line 978
 102: <P.1/gproc_sup>: true = erlang:unlink(<P.1.2/gproc_monitor>)
    in supervisor.erl line 979
 103: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 104: <P.1/gproc_sup>: true = erlang:exit(<P.1.2/gproc_monitor>, shutdown)
    in supervisor.erl line 954
 105: <P.1.2/gproc_monitor>: exits abnormally (shutdown)
 106: <P.1.2/gproc_monitor>: true = ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 107: <P.1.2/gproc_monitor>: {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    (while exiting)
 108: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    in supervisor.erl line 955
 109: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76351> = erlang:monitor(process, <P.1.1/gproc>)
    in supervisor.erl line 978
 110: <P.1/gproc_sup>: true = erlang:unlink(<P.1.1/gproc>)
    in supervisor.erl line 979
 111: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 112: <P.1/gproc_sup>: true = erlang:exit(<P.1.1/gproc>, shutdown)
    in supervisor.erl line 954
 113: <P.1.1/gproc>: exits abnormally (shutdown)
 114: <P.1.1/gproc>: {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    (while exiting)
 115: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    in supervisor.erl line 955
 116: <P.1/gproc_sup>: exits normally
 117: <P.1/gproc_sup>: true = ets:delete(gproc)
    (while exiting)
 118: <P.1/gproc_sup>: Exception badarg raised by: ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 119: <P.1/gproc_sup>: true = ets:delete(gproc_monitor)
    (while exiting)
 120: <P.1/gproc_sup>: true = erlang:exit(<P>, normal)
    (while exiting)
################################################################################
Interleaving #8
--------------------------------------------------------------------------------
Errors found:
* At step 78 process <P.2> exited abnormally
    Reason:
      killed
    Stacktrace:
      []
--------------------------------------------------------------------------------
Event trace:
   1: <P>: undefined = erlang:whereis(gproc_sup)
    in gen.erl line 299
   2: <P>: [] = erlang:process_info(<P>, registered_name)
    in proc_lib.erl line 731
   3: <P>: <P.1/gproc_sup> = erlang:spawn_opt({proc_lib,init_p,[<P>,[],gen,init_it,[gen_server,<P>,<P>,{local,gproc_sup},supervisor,{{local,gproc_sup},gproc_sup,[]},[]]],[link]})
    in erlang.erl line 2868
   4: <P.1/gproc_sup>: true = erlang:register(gproc_sup, <P.1/gproc_sup>)
    in gen.erl line 302
   5: <P.1/gproc_sup>: false = erlang:process_flag(trap_exit, true)
    in supervisor.erl line 293
   6: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   7: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
   8: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   9: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  10: <P.1/gproc_sup>: undefined = ets:info(gproc, name)
    in gproc.erl line 2488
  11: <P.1/gproc_sup>: gproc = ets:new(gproc, [ordered_set,public,named_table,{write_concurrency,true},{read_concurrency,true}])
    in gproc.erl line 2490
  12: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
  13: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  14: <P.1/gproc_sup>: undefined = erlang:whereis(gproc)
    in gen.erl line 299
  15: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  16: <P.1/gproc_sup>: <P.1.1/gproc> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc},gproc,[],[{spawn_opt,[]}]]],[link]})
    in erlang.erl line 2868
  17: <P.1.1/gproc>: true = erlang:register(gproc, <P.1.1/gproc>)
    in gen.erl line 302
  18: <P.1.1/gproc>: '$end_of_table' = ets:select(gproc, [{{{'$1',l}},[],['$1']}], 100)
    in gproc.erl line 2502
  19: <P.1.1/gproc>: {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}} = <P.1/gproc_sup> ! {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}}
    in proc_lib.erl line 392
  20: <P.1/gproc_sup>: receives message ({ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}})
    in proc_lib.erl line 348
  21: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  22: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  23: <P.1/gproc_sup>: undefined = ets:info(gproc_monitor, owner)
  24: <P.1/gproc_sup>: gproc_monitor = ets:new(gproc_monitor, [ordered_set,protected,named_table,{heir,<P.1/gproc_sup>,[]}])
  25: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  26: <P.1/gproc_sup>: <P.1.2/gproc_monitor> = erlang:spawn_link(proc_lib, init_p, [gproc_sup,[<P>],gproc_monitor,init,[<P.1/gproc_sup>]])
    in proc_lib.erl line 100
  27: <P.1.2/gproc_monitor>: normal = erlang:process_flag(priority, high)
    in gproc_monitor.erl line 123
  28: <P.1.2/gproc_monitor>: true = erlang:register(gproc_monitor, <P.1.2/gproc_monitor>)
    in gproc_monitor.erl line 124
  29: <P.1.2/gproc_monitor>: {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}} = <P.1/gproc_sup> ! {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}}
    in proc_lib.erl line 392
  30: <P.1/gproc_sup>: receives message ({ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}})
    in proc_lib.erl line 348
  31: <P.1/gproc_sup>: true = ets:give_away(gproc_monitor, <P.1.2/gproc_monitor>, [])
    in gproc_monitor.erl line 104
  32: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  33: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  34: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_bcast)
    in gen.erl line 299
  35: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  36: <P.1/gproc_sup>: <P.1.3/gproc_bcast> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_bcast},gproc_bcast,[],[]]],[link]})
    in erlang.erl line 2868
  37: <P.1.2/gproc_monitor>: receives message ({'ETS-TRANSFER',gproc_monitor,<P.1/gproc_sup>,[]})
    in gproc_monitor.erl line 126
  38: <P.1.2/gproc_monitor>: <P.1/gproc_sup> = erlang:whereis(gproc_sup)
    in gen.erl line 382
  39: <P.1.3/gproc_bcast>: true = erlang:register(gproc_bcast, <P.1.3/gproc_bcast>)
    in gen.erl line 302
  40: <P.1.3/gproc_bcast>: {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}} = <P.1/gproc_sup> ! {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}}
    in proc_lib.erl line 392
  41: <P.1/gproc_sup>: receives message ({ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}})
    in proc_lib.erl line 348
  42: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  43: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  44: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_pool)
    in gen.erl line 299
  45: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  46: <P.1/gproc_sup>: <P.1.4/gproc_pool> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_pool},gproc_pool,[],[]]],[link]})
    in erlang.erl line 2868
  47: <P.1.4/gproc_pool>: true = erlang:register(gproc_pool, <P.1.4/gproc_pool>)
    in gen.erl line 302
  48: <P.1.4/gproc_pool>: {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}} = <P.1/gproc_sup> ! {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}}
    in proc_lib.erl line 392
  49: <P.1/gproc_sup>: receives message ({ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}})
    in proc_lib.erl line 348
  50: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  51: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  52: <P.1/gproc_sup>: {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}} = <P> ! {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}}
    in proc_lib.erl line 392
  53: <P>: receives message ({ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}})
    in proc_lib.erl line 348
  54: <P>: {<P.2>,#Ref<0.3937440253.4130865153.76259>} = erlang:spawn_opt({erlang,apply,[#Fun<test.8.122744875>,[]],[monitor]})
    in erlang.erl line 2731
  55: <P.2>: #Ref<0.3937440253.4130865153.76262> = erlang:monitor(process, <P>)
    in test.erl line 38
  56: <P.2>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  57: <P.2>: #Ref<0.3937440253.4130865153.76266> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  58: <P.2>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}}, [noconnect])
    in gen.erl line 167
  59: <P.1.1/gproc>: receives message ({'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}})
    in gen_server.erl line 381
  60: <P.1.1/gproc>: true = ets:insert_new(gproc, {{{n,l,foo},n},<P.2>,the_value})
    in gproc_lib.erl line 78
  61: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,{n,l,foo}},[]})
  62: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,l}})
    in gproc_lib.erl line 300
  63: <P.1.1/gproc>: #Ref<0.3937440253.4130865153.76276> = erlang:monitor(process, <P.2>)
    in gproc_lib.erl line 302
  64: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76266>,true} = <P.2> ! {#Ref<0.3937440253.4130865153.76266>,true}
    in gen_server.erl line 243
  65: <P.2>: receives message ({#Ref<0.3937440253.4130865153.76266>,true})
    in gen.erl line 169
  66: <P.2>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76266>, [flush])
    in gen.erl line 171
  67: <P.2>: {<P.2>,ok} = <P> ! {<P.2>,ok}
    in test.erl line 40
  68: <P>: receives message ({<P.2>,ok})
    in test.erl line 45
  69: <P>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  70: <P>: #Ref<0.3937440253.4130865153.76286> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  71: <P>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}}, [noconnect])
    in gen.erl line 167
  72: <P.1.1/gproc>: receives message ({'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}})
    in gen_server.erl line 381
  73: <P.1.1/gproc>: [{{{n,l,foo},n},<P.2>,the_value}] = ets:lookup(gproc, {{n,l,foo},n})
    in gproc.erl line 2072
  74: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}} = <P> ! {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}}
    in gen_server.erl line 243
  75: <P>: receives message ({#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}})
    in gen.erl line 169
  76: <P>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76286>, [flush])
    in gen.erl line 171
  77: <P>: true = erlang:exit(<P.2>, kill)
    in test.erl line 47
  78: <P.2>: exits abnormally (killed)
  79: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed} = erlang:send(<P>, {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    (while exiting)
  80: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed} = erlang:send(<P.1.1/gproc>, {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed})
    (while exiting)
  81: <P>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    in test.erl line 48
  82: <P>: exits normally
  83: <P>: true = erlang:exit(<P.1/gproc_sup>, normal)
    (while exiting)
  84: <P>: {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal} = erlang:send(<P.2>, {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal})
    (while exiting)
  85: <P.1/gproc_sup>: receives message ({'EXIT',<P>,normal})
    in gen_server.erl line 381
  86: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76307> = erlang:monitor(process, <P.1.4/gproc_pool>)
    in supervisor.erl line 978
  87: <P.1/gproc_sup>: true = erlang:unlink(<P.1.4/gproc_pool>)
    in supervisor.erl line 979
  88: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
  89: <P.1/gproc_sup>: true = erlang:exit(<P.1.4/gproc_pool>, shutdown)
    in supervisor.erl line 954
  90: <P.1.4/gproc_pool>: exits abnormally (shutdown)
  91: <P.1.4/gproc_pool>: {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    (while exiting)
  92: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    in supervisor.erl line 955
  93: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76331> = erlang:monitor(process, <P.1.3/gproc_bcast>)
    in supervisor.erl line 978
  94: <P.1/gproc_sup>: true = erlang:unlink(<P.1.3/gproc_bcast>)
    in supervisor.erl line 979
  95: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
  96: <P.1/gproc_sup>: true = erlang:exit(<P.1.3/gproc_bcast>, shutdown)
    in supervisor.erl line 954
  97: <P.1.3/gproc_bcast>: exits abnormally (shutdown)
  98: <P.1.3/gproc_bcast>: {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    (while exiting)
  99: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    in supervisor.erl line 955
 100: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76340> = erlang:monitor(process, <P.1.2/gproc_monitor>)
    in supervisor.erl line 978
 101: <P.1/gproc_sup>: true = erlang:unlink(<P.1.2/gproc_monitor>)
    in supervisor.erl line 979
 102: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 103: <P.1/gproc_sup>: true = erlang:exit(<P.1.2/gproc_monitor>, shutdown)
    in supervisor.erl line 954
 104: <P.1.2/gproc_monitor>: exits abnormally (shutdown)
 105: <P.1.2/gproc_monitor>: true = ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 106: <P.1.2/gproc_monitor>: {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    (while exiting)
 107: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    in supervisor.erl line 955
 108: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76351> = erlang:monitor(process, <P.1.1/gproc>)
    in supervisor.erl line 978
 109: <P.1/gproc_sup>: true = erlang:unlink(<P.1.1/gproc>)
    in supervisor.erl line 979
 110: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 111: <P.1/gproc_sup>: true = erlang:exit(<P.1.1/gproc>, shutdown)
    in supervisor.erl line 954
 112: <P.1.1/gproc>: exits abnormally (shutdown)
 113: <P.1.1/gproc>: {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    (while exiting)
 114: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    in supervisor.erl line 955
 115: <P.1/gproc_sup>: exits normally
 116: <P.1/gproc_sup>: true = ets:delete(gproc)
    (while exiting)
 117: <P.1/gproc_sup>: Exception badarg raised by: ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 118: <P.1/gproc_sup>: true = ets:delete(gproc_monitor)
    (while exiting)
 119: <P.1/gproc_sup>: true = erlang:exit(<P>, normal)
    (while exiting)
################################################################################
Interleaving #9
--------------------------------------------------------------------------------
Errors found:
* At step 78 process <P.2> exited abnormally
    Reason:
      killed
    Stacktrace:
      []
--------------------------------------------------------------------------------
Event trace:
   1: <P>: undefined = erlang:whereis(gproc_sup)
    in gen.erl line 299
   2: <P>: [] = erlang:process_info(<P>, registered_name)
    in proc_lib.erl line 731
   3: <P>: <P.1/gproc_sup> = erlang:spawn_opt({proc_lib,init_p,[<P>,[],gen,init_it,[gen_server,<P>,<P>,{local,gproc_sup},supervisor,{{local,gproc_sup},gproc_sup,[]},[]]],[link]})
    in erlang.erl line 2868
   4: <P.1/gproc_sup>: true = erlang:register(gproc_sup, <P.1/gproc_sup>)
    in gen.erl line 302
   5: <P.1/gproc_sup>: false = erlang:process_flag(trap_exit, true)
    in supervisor.erl line 293
   6: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   7: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
   8: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   9: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  10: <P.1/gproc_sup>: undefined = ets:info(gproc, name)
    in gproc.erl line 2488
  11: <P.1/gproc_sup>: gproc = ets:new(gproc, [ordered_set,public,named_table,{write_concurrency,true},{read_concurrency,true}])
    in gproc.erl line 2490
  12: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
  13: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  14: <P.1/gproc_sup>: undefined = erlang:whereis(gproc)
    in gen.erl line 299
  15: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  16: <P.1/gproc_sup>: <P.1.1/gproc> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc},gproc,[],[{spawn_opt,[]}]]],[link]})
    in erlang.erl line 2868
  17: <P.1.1/gproc>: true = erlang:register(gproc, <P.1.1/gproc>)
    in gen.erl line 302
  18: <P.1.1/gproc>: '$end_of_table' = ets:select(gproc, [{{{'$1',l}},[],['$1']}], 100)
    in gproc.erl line 2502
  19: <P.1.1/gproc>: {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}} = <P.1/gproc_sup> ! {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}}
    in proc_lib.erl line 392
  20: <P.1/gproc_sup>: receives message ({ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}})
    in proc_lib.erl line 348
  21: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  22: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  23: <P.1/gproc_sup>: undefined = ets:info(gproc_monitor, owner)
  24: <P.1/gproc_sup>: gproc_monitor = ets:new(gproc_monitor, [ordered_set,protected,named_table,{heir,<P.1/gproc_sup>,[]}])
  25: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  26: <P.1/gproc_sup>: <P.1.2/gproc_monitor> = erlang:spawn_link(proc_lib, init_p, [gproc_sup,[<P>],gproc_monitor,init,[<P.1/gproc_sup>]])
    in proc_lib.erl line 100
  27: <P.1.2/gproc_monitor>: normal = erlang:process_flag(priority, high)
    in gproc_monitor.erl line 123
  28: <P.1.2/gproc_monitor>: true = erlang:register(gproc_monitor, <P.1.2/gproc_monitor>)
    in gproc_monitor.erl line 124
  29: <P.1.2/gproc_monitor>: {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}} = <P.1/gproc_sup> ! {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}}
    in proc_lib.erl line 392
  30: <P.1/gproc_sup>: receives message ({ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}})
    in proc_lib.erl line 348
  31: <P.1/gproc_sup>: true = ets:give_away(gproc_monitor, <P.1.2/gproc_monitor>, [])
    in gproc_monitor.erl line 104
  32: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  33: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  34: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_bcast)
    in gen.erl line 299
  35: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  36: <P.1/gproc_sup>: <P.1.3/gproc_bcast> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_bcast},gproc_bcast,[],[]]],[link]})
    in erlang.erl line 2868
  37: <P.1.2/gproc_monitor>: receives message ({'ETS-TRANSFER',gproc_monitor,<P.1/gproc_sup>,[]})
    in gproc_monitor.erl line 126
  38: <P.1.2/gproc_monitor>: <P.1/gproc_sup> = erlang:whereis(gproc_sup)
    in gen.erl line 382
  39: <P.1.3/gproc_bcast>: true = erlang:register(gproc_bcast, <P.1.3/gproc_bcast>)
    in gen.erl line 302
  40: <P.1.3/gproc_bcast>: {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}} = <P.1/gproc_sup> ! {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}}
    in proc_lib.erl line 392
  41: <P.1/gproc_sup>: receives message ({ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}})
    in proc_lib.erl line 348
  42: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  43: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  44: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_pool)
    in gen.erl line 299
  45: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  46: <P.1/gproc_sup>: <P.1.4/gproc_pool> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_pool},gproc_pool,[],[]]],[link]})
    in erlang.erl line 2868
  47: <P.1.4/gproc_pool>: true = erlang:register(gproc_pool, <P.1.4/gproc_pool>)
    in gen.erl line 302
  48: <P.1.4/gproc_pool>: {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}} = <P.1/gproc_sup> ! {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}}
    in proc_lib.erl line 392
  49: <P.1/gproc_sup>: receives message ({ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}})
    in proc_lib.erl line 348
  50: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  51: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  52: <P.1/gproc_sup>: {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}} = <P> ! {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}}
    in proc_lib.erl line 392
  53: <P>: receives message ({ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}})
    in proc_lib.erl line 348
  54: <P>: {<P.2>,#Ref<0.3937440253.4130865153.76259>} = erlang:spawn_opt({erlang,apply,[#Fun<test.8.122744875>,[]],[monitor]})
    in erlang.erl line 2731
  55: <P.2>: #Ref<0.3937440253.4130865153.76262> = erlang:monitor(process, <P>)
    in test.erl line 38
  56: <P.2>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  57: <P.2>: #Ref<0.3937440253.4130865153.76266> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  58: <P.2>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}}, [noconnect])
    in gen.erl line 167
  59: <P.1.1/gproc>: receives message ({'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}})
    in gen_server.erl line 381
  60: <P.1.1/gproc>: true = ets:insert_new(gproc, {{{n,l,foo},n},<P.2>,the_value})
    in gproc_lib.erl line 78
  61: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,{n,l,foo}},[]})
  62: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,l}})
    in gproc_lib.erl line 300
  63: <P.1.1/gproc>: #Ref<0.3937440253.4130865153.76276> = erlang:monitor(process, <P.2>)
    in gproc_lib.erl line 302
  64: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76266>,true} = <P.2> ! {#Ref<0.3937440253.4130865153.76266>,true}
    in gen_server.erl line 243
  65: <P.2>: receives message ({#Ref<0.3937440253.4130865153.76266>,true})
    in gen.erl line 169
  66: <P.2>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76266>, [flush])
    in gen.erl line 171
  67: <P.2>: {<P.2>,ok} = <P> ! {<P.2>,ok}
    in test.erl line 40
  68: <P>: receives message ({<P.2>,ok})
    in test.erl line 45
  69: <P>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  70: <P>: #Ref<0.3937440253.4130865153.76286> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  71: <P>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}}, [noconnect])
    in gen.erl line 167
  72: <P.1.1/gproc>: receives message ({'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}})
    in gen_server.erl line 381
  73: <P.1.1/gproc>: [{{{n,l,foo},n},<P.2>,the_value}] = ets:lookup(gproc, {{n,l,foo},n})
    in gproc.erl line 2072
  74: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}} = <P> ! {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}}
    in gen_server.erl line 243
  75: <P>: receives message ({#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}})
    in gen.erl line 169
  76: <P>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76286>, [flush])
    in gen.erl line 171
  77: <P>: true = erlang:exit(<P.2>, kill)
    in test.erl line 47
  78: <P.2>: exits abnormally (killed)
  79: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed} = erlang:send(<P>, {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    (while exiting)
  80: <P>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    in test.erl line 48
  81: <P>: exits normally
  82: <P>: true = erlang:exit(<P.1/gproc_sup>, normal)
    (while exiting)
  83: <P>: {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal} = erlang:send(<P.2>, {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal})
    (while exiting)
  84: <P.1/gproc_sup>: receives message ({'EXIT',<P>,normal})
    in gen_server.erl line 381
  85: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76307> = erlang:monitor(process, <P.1.4/gproc_pool>)
    in supervisor.erl line 978
  86: <P.1/gproc_sup>: true = erlang:unlink(<P.1.4/gproc_pool>)
    in supervisor.erl line 979
  87: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
  88: <P.1/gproc_sup>: true = erlang:exit(<P.1.4/gproc_pool>, shutdown)
    in supervisor.erl line 954
  89: <P.1.4/gproc_pool>: exits abnormally (shutdown)
  90: <P.1.4/gproc_pool>: {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    (while exiting)
  91: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    in supervisor.erl line 955
  92: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76331> = erlang:monitor(process, <P.1.3/gproc_bcast>)
    in supervisor.erl line 978
  93: <P.1/gproc_sup>: true = erlang:unlink(<P.1.3/gproc_bcast>)
    in supervisor.erl line 979
  94: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
  95: <P.1/gproc_sup>: true = erlang:exit(<P.1.3/gproc_bcast>, shutdown)
    in supervisor.erl line 954
  96: <P.1.3/gproc_bcast>: exits abnormally (shutdown)
  97: <P.1.3/gproc_bcast>: {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    (while exiting)
  98: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    in supervisor.erl line 955
  99: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76340> = erlang:monitor(process, <P.1.2/gproc_monitor>)
    in supervisor.erl line 978
 100: <P.1/gproc_sup>: true = erlang:unlink(<P.1.2/gproc_monitor>)
    in supervisor.erl line 979
 101: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 102: <P.1/gproc_sup>: true = erlang:exit(<P.1.2/gproc_monitor>, shutdown)
    in supervisor.erl line 954
 103: <P.1.2/gproc_monitor>: exits abnormally (shutdown)
 104: <P.1.2/gproc_monitor>: true = ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 105: <P.1.2/gproc_monitor>: {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    (while exiting)
 106: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    in supervisor.erl line 955
 107: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76351> = erlang:monitor(process, <P.1.1/gproc>)
    in supervisor.erl line 978
 108: <P.1/gproc_sup>: true = erlang:unlink(<P.1.1/gproc>)
    in supervisor.erl line 979
 109: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 110: <P.1/gproc_sup>: true = erlang:exit(<P.1.1/gproc>, shutdown)
    in supervisor.erl line 954
 111: <P.1.1/gproc>: exits abnormally (shutdown)
 112: <P.1.1/gproc>: {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    (while exiting)
 113: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed} = erlang:send(<P.1.1/gproc>, {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed})
    (while exiting)
 114: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    in supervisor.erl line 955
 115: <P.1/gproc_sup>: exits normally
 116: <P.1/gproc_sup>: true = ets:delete(gproc)
    (while exiting)
 117: <P.1/gproc_sup>: Exception badarg raised by: ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 118: <P.1/gproc_sup>: true = ets:delete(gproc_monitor)
    (while exiting)
 119: <P.1/gproc_sup>: true = erlang:exit(<P>, normal)
    (while exiting)
################################################################################
Interleaving #10
--------------------------------------------------------------------------------
Errors found:
* At step 77 process <P.2> exited abnormally
    Reason:
      killed
    Stacktrace:
      []
--------------------------------------------------------------------------------
Event trace:
   1: <P>: undefined = erlang:whereis(gproc_sup)
    in gen.erl line 299
   2: <P>: [] = erlang:process_info(<P>, registered_name)
    in proc_lib.erl line 731
   3: <P>: <P.1/gproc_sup> = erlang:spawn_opt({proc_lib,init_p,[<P>,[],gen,init_it,[gen_server,<P>,<P>,{local,gproc_sup},supervisor,{{local,gproc_sup},gproc_sup,[]},[]]],[link]})
    in erlang.erl line 2868
   4: <P.1/gproc_sup>: true = erlang:register(gproc_sup, <P.1/gproc_sup>)
    in gen.erl line 302
   5: <P.1/gproc_sup>: false = erlang:process_flag(trap_exit, true)
    in supervisor.erl line 293
   6: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   7: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
   8: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   9: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  10: <P.1/gproc_sup>: undefined = ets:info(gproc, name)
    in gproc.erl line 2488
  11: <P.1/gproc_sup>: gproc = ets:new(gproc, [ordered_set,public,named_table,{write_concurrency,true},{read_concurrency,true}])
    in gproc.erl line 2490
  12: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
  13: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  14: <P.1/gproc_sup>: undefined = erlang:whereis(gproc)
    in gen.erl line 299
  15: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  16: <P.1/gproc_sup>: <P.1.1/gproc> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc},gproc,[],[{spawn_opt,[]}]]],[link]})
    in erlang.erl line 2868
  17: <P.1.1/gproc>: true = erlang:register(gproc, <P.1.1/gproc>)
    in gen.erl line 302
  18: <P.1.1/gproc>: '$end_of_table' = ets:select(gproc, [{{{'$1',l}},[],['$1']}], 100)
    in gproc.erl line 2502
  19: <P.1.1/gproc>: {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}} = <P.1/gproc_sup> ! {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}}
    in proc_lib.erl line 392
  20: <P.1/gproc_sup>: receives message ({ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}})
    in proc_lib.erl line 348
  21: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  22: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  23: <P.1/gproc_sup>: undefined = ets:info(gproc_monitor, owner)
  24: <P.1/gproc_sup>: gproc_monitor = ets:new(gproc_monitor, [ordered_set,protected,named_table,{heir,<P.1/gproc_sup>,[]}])
  25: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  26: <P.1/gproc_sup>: <P.1.2/gproc_monitor> = erlang:spawn_link(proc_lib, init_p, [gproc_sup,[<P>],gproc_monitor,init,[<P.1/gproc_sup>]])
    in proc_lib.erl line 100
  27: <P.1.2/gproc_monitor>: normal = erlang:process_flag(priority, high)
    in gproc_monitor.erl line 123
  28: <P.1.2/gproc_monitor>: true = erlang:register(gproc_monitor, <P.1.2/gproc_monitor>)
    in gproc_monitor.erl line 124
  29: <P.1.2/gproc_monitor>: {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}} = <P.1/gproc_sup> ! {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}}
    in proc_lib.erl line 392
  30: <P.1/gproc_sup>: receives message ({ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}})
    in proc_lib.erl line 348
  31: <P.1/gproc_sup>: true = ets:give_away(gproc_monitor, <P.1.2/gproc_monitor>, [])
    in gproc_monitor.erl line 104
  32: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  33: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  34: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_bcast)
    in gen.erl line 299
  35: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  36: <P.1/gproc_sup>: <P.1.3/gproc_bcast> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_bcast},gproc_bcast,[],[]]],[link]})
    in erlang.erl line 2868
  37: <P.1.2/gproc_monitor>: receives message ({'ETS-TRANSFER',gproc_monitor,<P.1/gproc_sup>,[]})
    in gproc_monitor.erl line 126
  38: <P.1.3/gproc_bcast>: true = erlang:register(gproc_bcast, <P.1.3/gproc_bcast>)
    in gen.erl line 302
  39: <P.1.3/gproc_bcast>: {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}} = <P.1/gproc_sup> ! {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}}
    in proc_lib.erl line 392
  40: <P.1/gproc_sup>: receives message ({ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}})
    in proc_lib.erl line 348
  41: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  42: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  43: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_pool)
    in gen.erl line 299
  44: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  45: <P.1/gproc_sup>: <P.1.4/gproc_pool> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_pool},gproc_pool,[],[]]],[link]})
    in erlang.erl line 2868
  46: <P.1.4/gproc_pool>: true = erlang:register(gproc_pool, <P.1.4/gproc_pool>)
    in gen.erl line 302
  47: <P.1.4/gproc_pool>: {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}} = <P.1/gproc_sup> ! {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}}
    in proc_lib.erl line 392
  48: <P.1/gproc_sup>: receives message ({ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}})
    in proc_lib.erl line 348
  49: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  50: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  51: <P.1/gproc_sup>: {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}} = <P> ! {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}}
    in proc_lib.erl line 392
  52: <P>: receives message ({ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}})
    in proc_lib.erl line 348
  53: <P>: {<P.2>,#Ref<0.3937440253.4130865153.76259>} = erlang:spawn_opt({erlang,apply,[#Fun<test.8.122744875>,[]],[monitor]})
    in erlang.erl line 2731
  54: <P.2>: #Ref<0.3937440253.4130865153.76262> = erlang:monitor(process, <P>)
    in test.erl line 38
  55: <P.2>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  56: <P.2>: #Ref<0.3937440253.4130865153.76266> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  57: <P.2>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}}, [noconnect])
    in gen.erl line 167
  58: <P.1.1/gproc>: receives message ({'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}})
    in gen_server.erl line 381
  59: <P.1.1/gproc>: true = ets:insert_new(gproc, {{{n,l,foo},n},<P.2>,the_value})
    in gproc_lib.erl line 78
  60: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,{n,l,foo}},[]})
  61: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,l}})
    in gproc_lib.erl line 300
  62: <P.1.1/gproc>: #Ref<0.3937440253.4130865153.76276> = erlang:monitor(process, <P.2>)
    in gproc_lib.erl line 302
  63: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76266>,true} = <P.2> ! {#Ref<0.3937440253.4130865153.76266>,true}
    in gen_server.erl line 243
  64: <P.2>: receives message ({#Ref<0.3937440253.4130865153.76266>,true})
    in gen.erl line 169
  65: <P.2>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76266>, [flush])
    in gen.erl line 171
  66: <P.2>: {<P.2>,ok} = <P> ! {<P.2>,ok}
    in test.erl line 40
  67: <P>: receives message ({<P.2>,ok})
    in test.erl line 45
  68: <P>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  69: <P>: #Ref<0.3937440253.4130865153.76286> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  70: <P>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}}, [noconnect])
    in gen.erl line 167
  71: <P.1.1/gproc>: receives message ({'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}})
    in gen_server.erl line 381
  72: <P.1.1/gproc>: [{{{n,l,foo},n},<P.2>,the_value}] = ets:lookup(gproc, {{n,l,foo},n})
    in gproc.erl line 2072
  73: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}} = <P> ! {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}}
    in gen_server.erl line 243
  74: <P>: receives message ({#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}})
    in gen.erl line 169
  75: <P>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76286>, [flush])
    in gen.erl line 171
  76: <P>: true = erlang:exit(<P.2>, kill)
    in test.erl line 47
  77: <P.2>: exits abnormally (killed)
  78: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed} = erlang:send(<P>, {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    (while exiting)
  79: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed} = erlang:send(<P.1.1/gproc>, {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed})
    (while exiting)
  80: <P>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    in test.erl line 48
  81: <P>: exits normally
  82: <P>: true = erlang:exit(<P.1/gproc_sup>, normal)
    (while exiting)
  83: <P>: {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal} = erlang:send(<P.2>, {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal})
    (while exiting)
  84: <P.1/gproc_sup>: receives message ({'EXIT',<P>,normal})
    in gen_server.erl line 381
  85: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76307> = erlang:monitor(process, <P.1.4/gproc_pool>)
    in supervisor.erl line 978
  86: <P.1/gproc_sup>: true = erlang:unlink(<P.1.4/gproc_pool>)
    in supervisor.erl line 979
  87: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
  88: <P.1/gproc_sup>: true = erlang:exit(<P.1.4/gproc_pool>, shutdown)
    in supervisor.erl line 954
  89: <P.1.1/gproc>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed})
    in gen_server.erl line 381
  90: <P.1.1/gproc>: true = ets:member(gproc, {<P.2>,l})
    in gproc.erl line 2313
  91: <P.1.1/gproc>: [{{n,l,foo},[]}] = ets:select(gproc, [{{{<P.2>,'$1'},'$2'},[{'==',{element,2,'$1'},l}],[{{'$1','$2'}}]}])
    in gproc.erl line 2317
  92: <P.1.1/gproc>: [{{{n,l,foo},n},<P.2>,the_value}] = ets:lookup(gproc, {{n,l,foo},n})
    in gproc.erl line 2323
  93: <P.1.1/gproc>: true = ets:delete(gproc, {{n,l,foo},n})
    in gproc.erl line 2325
  94: <P.1.1/gproc>: 1 = ets:select_delete(gproc, [{{{<P.2>,{'_',l,'_'}},'_'},[],[true]}])
    in gproc.erl line 2372
  95: <P.1.1/gproc>: true = ets:delete(gproc, {<P.2>,l})
    in gproc.erl line 2373
  96: <P.1.4/gproc_pool>: exits abnormally (shutdown)
  97: <P.1.4/gproc_pool>: {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    (while exiting)
  98: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    in supervisor.erl line 955
  99: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76331> = erlang:monitor(process, <P.1.3/gproc_bcast>)
    in supervisor.erl line 978
 100: <P.1/gproc_sup>: true = erlang:unlink(<P.1.3/gproc_bcast>)
    in supervisor.erl line 979
 101: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 102: <P.1/gproc_sup>: true = erlang:exit(<P.1.3/gproc_bcast>, shutdown)
    in supervisor.erl line 954
 103: <P.1.3/gproc_bcast>: exits abnormally (shutdown)
 104: <P.1.3/gproc_bcast>: {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    (while exiting)
 105: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    in supervisor.erl line 955
 106: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76340> = erlang:monitor(process, <P.1.2/gproc_monitor>)
    in supervisor.erl line 978
 107: <P.1/gproc_sup>: true = erlang:unlink(<P.1.2/gproc_monitor>)
    in supervisor.erl line 979
 108: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 109: <P.1/gproc_sup>: true = erlang:exit(<P.1.2/gproc_monitor>, shutdown)
    in supervisor.erl line 954
 110: <P.1.2/gproc_monitor>: exits abnormally (shutdown)
 111: <P.1.2/gproc_monitor>: true = ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 112: <P.1.2/gproc_monitor>: {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    (while exiting)
 113: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    in supervisor.erl line 955
 114: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76351> = erlang:monitor(process, <P.1.1/gproc>)
    in supervisor.erl line 978
 115: <P.1/gproc_sup>: true = erlang:unlink(<P.1.1/gproc>)
    in supervisor.erl line 979
 116: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 117: <P.1/gproc_sup>: true = erlang:exit(<P.1.1/gproc>, shutdown)
    in supervisor.erl line 954
 118: <P.1.1/gproc>: exits abnormally (shutdown)
 119: <P.1.1/gproc>: {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    (while exiting)
 120: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    in supervisor.erl line 955
 121: <P.1/gproc_sup>: exits normally
 122: <P.1/gproc_sup>: true = ets:delete(gproc)
    (while exiting)
 123: <P.1/gproc_sup>: Exception badarg raised by: ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 124: <P.1/gproc_sup>: true = ets:delete(gproc_monitor)
    (while exiting)
 125: <P.1/gproc_sup>: true = erlang:exit(<P>, normal)
    (while exiting)
################################################################################
Interleaving #11
--------------------------------------------------------------------------------
Errors found:
* At step 77 process <P.2> exited abnormally
    Reason:
      killed
    Stacktrace:
      []
--------------------------------------------------------------------------------
Event trace:
   1: <P>: undefined = erlang:whereis(gproc_sup)
    in gen.erl line 299
   2: <P>: [] = erlang:process_info(<P>, registered_name)
    in proc_lib.erl line 731
   3: <P>: <P.1/gproc_sup> = erlang:spawn_opt({proc_lib,init_p,[<P>,[],gen,init_it,[gen_server,<P>,<P>,{local,gproc_sup},supervisor,{{local,gproc_sup},gproc_sup,[]},[]]],[link]})
    in erlang.erl line 2868
   4: <P.1/gproc_sup>: true = erlang:register(gproc_sup, <P.1/gproc_sup>)
    in gen.erl line 302
   5: <P.1/gproc_sup>: false = erlang:process_flag(trap_exit, true)
    in supervisor.erl line 293
   6: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   7: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
   8: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   9: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  10: <P.1/gproc_sup>: undefined = ets:info(gproc, name)
    in gproc.erl line 2488
  11: <P.1/gproc_sup>: gproc = ets:new(gproc, [ordered_set,public,named_table,{write_concurrency,true},{read_concurrency,true}])
    in gproc.erl line 2490
  12: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
  13: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  14: <P.1/gproc_sup>: undefined = erlang:whereis(gproc)
    in gen.erl line 299
  15: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  16: <P.1/gproc_sup>: <P.1.1/gproc> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc},gproc,[],[{spawn_opt,[]}]]],[link]})
    in erlang.erl line 2868
  17: <P.1.1/gproc>: true = erlang:register(gproc, <P.1.1/gproc>)
    in gen.erl line 302
  18: <P.1.1/gproc>: '$end_of_table' = ets:select(gproc, [{{{'$1',l}},[],['$1']}], 100)
    in gproc.erl line 2502
  19: <P.1.1/gproc>: {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}} = <P.1/gproc_sup> ! {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}}
    in proc_lib.erl line 392
  20: <P.1/gproc_sup>: receives message ({ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}})
    in proc_lib.erl line 348
  21: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  22: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  23: <P.1/gproc_sup>: undefined = ets:info(gproc_monitor, owner)
  24: <P.1/gproc_sup>: gproc_monitor = ets:new(gproc_monitor, [ordered_set,protected,named_table,{heir,<P.1/gproc_sup>,[]}])
  25: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  26: <P.1/gproc_sup>: <P.1.2/gproc_monitor> = erlang:spawn_link(proc_lib, init_p, [gproc_sup,[<P>],gproc_monitor,init,[<P.1/gproc_sup>]])
    in proc_lib.erl line 100
  27: <P.1.2/gproc_monitor>: normal = erlang:process_flag(priority, high)
    in gproc_monitor.erl line 123
  28: <P.1.2/gproc_monitor>: true = erlang:register(gproc_monitor, <P.1.2/gproc_monitor>)
    in gproc_monitor.erl line 124
  29: <P.1.2/gproc_monitor>: {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}} = <P.1/gproc_sup> ! {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}}
    in proc_lib.erl line 392
  30: <P.1/gproc_sup>: receives message ({ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}})
    in proc_lib.erl line 348
  31: <P.1/gproc_sup>: true = ets:give_away(gproc_monitor, <P.1.2/gproc_monitor>, [])
    in gproc_monitor.erl line 104
  32: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  33: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  34: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_bcast)
    in gen.erl line 299
  35: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  36: <P.1/gproc_sup>: <P.1.3/gproc_bcast> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_bcast},gproc_bcast,[],[]]],[link]})
    in erlang.erl line 2868
  37: <P.1.2/gproc_monitor>: receives message ({'ETS-TRANSFER',gproc_monitor,<P.1/gproc_sup>,[]})
    in gproc_monitor.erl line 126
  38: <P.1.3/gproc_bcast>: true = erlang:register(gproc_bcast, <P.1.3/gproc_bcast>)
    in gen.erl line 302
  39: <P.1.3/gproc_bcast>: {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}} = <P.1/gproc_sup> ! {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}}
    in proc_lib.erl line 392
  40: <P.1/gproc_sup>: receives message ({ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}})
    in proc_lib.erl line 348
  41: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  42: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  43: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_pool)
    in gen.erl line 299
  44: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  45: <P.1/gproc_sup>: <P.1.4/gproc_pool> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_pool},gproc_pool,[],[]]],[link]})
    in erlang.erl line 2868
  46: <P.1.4/gproc_pool>: true = erlang:register(gproc_pool, <P.1.4/gproc_pool>)
    in gen.erl line 302
  47: <P.1.4/gproc_pool>: {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}} = <P.1/gproc_sup> ! {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}}
    in proc_lib.erl line 392
  48: <P.1/gproc_sup>: receives message ({ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}})
    in proc_lib.erl line 348
  49: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  50: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  51: <P.1/gproc_sup>: {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}} = <P> ! {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}}
    in proc_lib.erl line 392
  52: <P>: receives message ({ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}})
    in proc_lib.erl line 348
  53: <P>: {<P.2>,#Ref<0.3937440253.4130865153.76259>} = erlang:spawn_opt({erlang,apply,[#Fun<test.8.122744875>,[]],[monitor]})
    in erlang.erl line 2731
  54: <P.2>: #Ref<0.3937440253.4130865153.76262> = erlang:monitor(process, <P>)
    in test.erl line 38
  55: <P.2>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  56: <P.2>: #Ref<0.3937440253.4130865153.76266> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  57: <P.2>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}}, [noconnect])
    in gen.erl line 167
  58: <P.1.1/gproc>: receives message ({'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}})
    in gen_server.erl line 381
  59: <P.1.1/gproc>: true = ets:insert_new(gproc, {{{n,l,foo},n},<P.2>,the_value})
    in gproc_lib.erl line 78
  60: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,{n,l,foo}},[]})
  61: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,l}})
    in gproc_lib.erl line 300
  62: <P.1.1/gproc>: #Ref<0.3937440253.4130865153.76276> = erlang:monitor(process, <P.2>)
    in gproc_lib.erl line 302
  63: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76266>,true} = <P.2> ! {#Ref<0.3937440253.4130865153.76266>,true}
    in gen_server.erl line 243
  64: <P.2>: receives message ({#Ref<0.3937440253.4130865153.76266>,true})
    in gen.erl line 169
  65: <P.2>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76266>, [flush])
    in gen.erl line 171
  66: <P.2>: {<P.2>,ok} = <P> ! {<P.2>,ok}
    in test.erl line 40
  67: <P>: receives message ({<P.2>,ok})
    in test.erl line 45
  68: <P>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  69: <P>: #Ref<0.3937440253.4130865153.76286> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  70: <P>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}}, [noconnect])
    in gen.erl line 167
  71: <P.1.1/gproc>: receives message ({'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}})
    in gen_server.erl line 381
  72: <P.1.1/gproc>: [{{{n,l,foo},n},<P.2>,the_value}] = ets:lookup(gproc, {{n,l,foo},n})
    in gproc.erl line 2072
  73: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}} = <P> ! {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}}
    in gen_server.erl line 243
  74: <P>: receives message ({#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}})
    in gen.erl line 169
  75: <P>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76286>, [flush])
    in gen.erl line 171
  76: <P>: true = erlang:exit(<P.2>, kill)
    in test.erl line 47
  77: <P.2>: exits abnormally (killed)
  78: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed} = erlang:send(<P>, {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    (while exiting)
  79: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed} = erlang:send(<P.1.1/gproc>, {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed})
    (while exiting)
  80: <P>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    in test.erl line 48
  81: <P>: exits normally
  82: <P>: true = erlang:exit(<P.1/gproc_sup>, normal)
    (while exiting)
  83: <P>: {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal} = erlang:send(<P.2>, {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal})
    (while exiting)
  84: <P.1/gproc_sup>: receives message ({'EXIT',<P>,normal})
    in gen_server.erl line 381
  85: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76307> = erlang:monitor(process, <P.1.4/gproc_pool>)
    in supervisor.erl line 978
  86: <P.1/gproc_sup>: true = erlang:unlink(<P.1.4/gproc_pool>)
    in supervisor.erl line 979
  87: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
  88: <P.1/gproc_sup>: true = erlang:exit(<P.1.4/gproc_pool>, shutdown)
    in supervisor.erl line 954
  89: <P.1.1/gproc>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed})
    in gen_server.erl line 381
  90: <P.1.1/gproc>: true = ets:member(gproc, {<P.2>,l})
    in gproc.erl line 2313
  91: <P.1.1/gproc>: [{{n,l,foo},[]}] = ets:select(gproc, [{{{<P.2>,'$1'},'$2'},[{'==',{element,2,'$1'},l}],[{{'$1','$2'}}]}])
    in gproc.erl line 2317
  92: <P.1.1/gproc>: [{{{n,l,foo},n},<P.2>,the_value}] = ets:lookup(gproc, {{n,l,foo},n})
    in gproc.erl line 2323
  93: <P.1.1/gproc>: true = ets:delete(gproc, {{n,l,foo},n})
    in gproc.erl line 2325
  94: <P.1.1/gproc>: 1 = ets:select_delete(gproc, [{{{<P.2>,{'_',l,'_'}},'_'},[],[true]}])
    in gproc.erl line 2372
  95: <P.1.4/gproc_pool>: exits abnormally (shutdown)
  96: <P.1.4/gproc_pool>: {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    (while exiting)
  97: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    in supervisor.erl line 955
  98: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76331> = erlang:monitor(process, <P.1.3/gproc_bcast>)
    in supervisor.erl line 978
  99: <P.1/gproc_sup>: true = erlang:unlink(<P.1.3/gproc_bcast>)
    in supervisor.erl line 979
 100: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 101: <P.1/gproc_sup>: true = erlang:exit(<P.1.3/gproc_bcast>, shutdown)
    in supervisor.erl line 954
 102: <P.1.3/gproc_bcast>: exits abnormally (shutdown)
 103: <P.1.3/gproc_bcast>: {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    (while exiting)
 104: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    in supervisor.erl line 955
 105: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76340> = erlang:monitor(process, <P.1.2/gproc_monitor>)
    in supervisor.erl line 978
 106: <P.1/gproc_sup>: true = erlang:unlink(<P.1.2/gproc_monitor>)
    in supervisor.erl line 979
 107: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 108: <P.1/gproc_sup>: true = erlang:exit(<P.1.2/gproc_monitor>, shutdown)
    in supervisor.erl line 954
 109: <P.1.2/gproc_monitor>: exits abnormally (shutdown)
 110: <P.1.2/gproc_monitor>: true = ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 111: <P.1.2/gproc_monitor>: {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    (while exiting)
 112: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    in supervisor.erl line 955
 113: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76351> = erlang:monitor(process, <P.1.1/gproc>)
    in supervisor.erl line 978
 114: <P.1/gproc_sup>: true = erlang:unlink(<P.1.1/gproc>)
    in supervisor.erl line 979
 115: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 116: <P.1/gproc_sup>: true = erlang:exit(<P.1.1/gproc>, shutdown)
    in supervisor.erl line 954
 117: <P.1.1/gproc>: exits abnormally (shutdown)
 118: <P.1.1/gproc>: {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    (while exiting)
 119: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    in supervisor.erl line 955
 120: <P.1/gproc_sup>: exits normally
 121: <P.1/gproc_sup>: true = ets:delete(gproc)
    (while exiting)
 122: <P.1/gproc_sup>: Exception badarg raised by: ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 123: <P.1/gproc_sup>: true = ets:delete(gproc_monitor)
    (while exiting)
 124: <P.1/gproc_sup>: true = erlang:exit(<P>, normal)
    (while exiting)
################################################################################
Interleaving #12
--------------------------------------------------------------------------------
Errors found:
* At step 77 process <P.2> exited abnormally
    Reason:
      killed
    Stacktrace:
      []
--------------------------------------------------------------------------------
Event trace:
   1: <P>: undefined = erlang:whereis(gproc_sup)
    in gen.erl line 299
   2: <P>: [] = erlang:process_info(<P>, registered_name)
    in proc_lib.erl line 731
   3: <P>: <P.1/gproc_sup> = erlang:spawn_opt({proc_lib,init_p,[<P>,[],gen,init_it,[gen_server,<P>,<P>,{local,gproc_sup},supervisor,{{local,gproc_sup},gproc_sup,[]},[]]],[link]})
    in erlang.erl line 2868
   4: <P.1/gproc_sup>: true = erlang:register(gproc_sup, <P.1/gproc_sup>)
    in gen.erl line 302
   5: <P.1/gproc_sup>: false = erlang:process_flag(trap_exit, true)
    in supervisor.erl line 293
   6: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   7: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
   8: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   9: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  10: <P.1/gproc_sup>: undefined = ets:info(gproc, name)
    in gproc.erl line 2488
  11: <P.1/gproc_sup>: gproc = ets:new(gproc, [ordered_set,public,named_table,{write_concurrency,true},{read_concurrency,true}])
    in gproc.erl line 2490
  12: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
  13: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  14: <P.1/gproc_sup>: undefined = erlang:whereis(gproc)
    in gen.erl line 299
  15: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  16: <P.1/gproc_sup>: <P.1.1/gproc> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc},gproc,[],[{spawn_opt,[]}]]],[link]})
    in erlang.erl line 2868
  17: <P.1.1/gproc>: true = erlang:register(gproc, <P.1.1/gproc>)
    in gen.erl line 302
  18: <P.1.1/gproc>: '$end_of_table' = ets:select(gproc, [{{{'$1',l}},[],['$1']}], 100)
    in gproc.erl line 2502
  19: <P.1.1/gproc>: {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}} = <P.1/gproc_sup> ! {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}}
    in proc_lib.erl line 392
  20: <P.1/gproc_sup>: receives message ({ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}})
    in proc_lib.erl line 348
  21: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  22: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  23: <P.1/gproc_sup>: undefined = ets:info(gproc_monitor, owner)
  24: <P.1/gproc_sup>: gproc_monitor = ets:new(gproc_monitor, [ordered_set,protected,named_table,{heir,<P.1/gproc_sup>,[]}])
  25: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  26: <P.1/gproc_sup>: <P.1.2/gproc_monitor> = erlang:spawn_link(proc_lib, init_p, [gproc_sup,[<P>],gproc_monitor,init,[<P.1/gproc_sup>]])
    in proc_lib.erl line 100
  27: <P.1.2/gproc_monitor>: normal = erlang:process_flag(priority, high)
    in gproc_monitor.erl line 123
  28: <P.1.2/gproc_monitor>: true = erlang:register(gproc_monitor, <P.1.2/gproc_monitor>)
    in gproc_monitor.erl line 124
  29: <P.1.2/gproc_monitor>: {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}} = <P.1/gproc_sup> ! {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}}
    in proc_lib.erl line 392
  30: <P.1/gproc_sup>: receives message ({ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}})
    in proc_lib.erl line 348
  31: <P.1/gproc_sup>: true = ets:give_away(gproc_monitor, <P.1.2/gproc_monitor>, [])
    in gproc_monitor.erl line 104
  32: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  33: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  34: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_bcast)
    in gen.erl line 299
  35: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  36: <P.1/gproc_sup>: <P.1.3/gproc_bcast> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_bcast},gproc_bcast,[],[]]],[link]})
    in erlang.erl line 2868
  37: <P.1.2/gproc_monitor>: receives message ({'ETS-TRANSFER',gproc_monitor,<P.1/gproc_sup>,[]})
    in gproc_monitor.erl line 126
  38: <P.1.3/gproc_bcast>: true = erlang:register(gproc_bcast, <P.1.3/gproc_bcast>)
    in gen.erl line 302
  39: <P.1.3/gproc_bcast>: {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}} = <P.1/gproc_sup> ! {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}}
    in proc_lib.erl line 392
  40: <P.1/gproc_sup>: receives message ({ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}})
    in proc_lib.erl line 348
  41: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  42: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  43: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_pool)
    in gen.erl line 299
  44: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  45: <P.1/gproc_sup>: <P.1.4/gproc_pool> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_pool},gproc_pool,[],[]]],[link]})
    in erlang.erl line 2868
  46: <P.1.4/gproc_pool>: true = erlang:register(gproc_pool, <P.1.4/gproc_pool>)
    in gen.erl line 302
  47: <P.1.4/gproc_pool>: {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}} = <P.1/gproc_sup> ! {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}}
    in proc_lib.erl line 392
  48: <P.1/gproc_sup>: receives message ({ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}})
    in proc_lib.erl line 348
  49: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  50: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  51: <P.1/gproc_sup>: {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}} = <P> ! {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}}
    in proc_lib.erl line 392
  52: <P>: receives message ({ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}})
    in proc_lib.erl line 348
  53: <P>: {<P.2>,#Ref<0.3937440253.4130865153.76259>} = erlang:spawn_opt({erlang,apply,[#Fun<test.8.122744875>,[]],[monitor]})
    in erlang.erl line 2731
  54: <P.2>: #Ref<0.3937440253.4130865153.76262> = erlang:monitor(process, <P>)
    in test.erl line 38
  55: <P.2>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  56: <P.2>: #Ref<0.3937440253.4130865153.76266> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  57: <P.2>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}}, [noconnect])
    in gen.erl line 167
  58: <P.1.1/gproc>: receives message ({'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}})
    in gen_server.erl line 381
  59: <P.1.1/gproc>: true = ets:insert_new(gproc, {{{n,l,foo},n},<P.2>,the_value})
    in gproc_lib.erl line 78
  60: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,{n,l,foo}},[]})
  61: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,l}})
    in gproc_lib.erl line 300
  62: <P.1.1/gproc>: #Ref<0.3937440253.4130865153.76276> = erlang:monitor(process, <P.2>)
    in gproc_lib.erl line 302
  63: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76266>,true} = <P.2> ! {#Ref<0.3937440253.4130865153.76266>,true}
    in gen_server.erl line 243
  64: <P.2>: receives message ({#Ref<0.3937440253.4130865153.76266>,true})
    in gen.erl line 169
  65: <P.2>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76266>, [flush])
    in gen.erl line 171
  66: <P.2>: {<P.2>,ok} = <P> ! {<P.2>,ok}
    in test.erl line 40
  67: <P>: receives message ({<P.2>,ok})
    in test.erl line 45
  68: <P>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  69: <P>: #Ref<0.3937440253.4130865153.76286> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  70: <P>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}}, [noconnect])
    in gen.erl line 167
  71: <P.1.1/gproc>: receives message ({'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}})
    in gen_server.erl line 381
  72: <P.1.1/gproc>: [{{{n,l,foo},n},<P.2>,the_value}] = ets:lookup(gproc, {{n,l,foo},n})
    in gproc.erl line 2072
  73: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}} = <P> ! {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}}
    in gen_server.erl line 243
  74: <P>: receives message ({#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}})
    in gen.erl line 169
  75: <P>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76286>, [flush])
    in gen.erl line 171
  76: <P>: true = erlang:exit(<P.2>, kill)
    in test.erl line 47
  77: <P.2>: exits abnormally (killed)
  78: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed} = erlang:send(<P>, {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    (while exiting)
  79: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed} = erlang:send(<P.1.1/gproc>, {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed})
    (while exiting)
  80: <P>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    in test.erl line 48
  81: <P>: exits normally
  82: <P>: true = erlang:exit(<P.1/gproc_sup>, normal)
    (while exiting)
  83: <P>: {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal} = erlang:send(<P.2>, {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal})
    (while exiting)
  84: <P.1/gproc_sup>: receives message ({'EXIT',<P>,normal})
    in gen_server.erl line 381
  85: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76307> = erlang:monitor(process, <P.1.4/gproc_pool>)
    in supervisor.erl line 978
  86: <P.1/gproc_sup>: true = erlang:unlink(<P.1.4/gproc_pool>)
    in supervisor.erl line 979
  87: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
  88: <P.1/gproc_sup>: true = erlang:exit(<P.1.4/gproc_pool>, shutdown)
    in supervisor.erl line 954
  89: <P.1.1/gproc>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed})
    in gen_server.erl line 381
  90: <P.1.1/gproc>: true = ets:member(gproc, {<P.2>,l})
    in gproc.erl line 2313
  91: <P.1.1/gproc>: [{{n,l,foo},[]}] = ets:select(gproc, [{{{<P.2>,'$1'},'$2'},[{'==',{element,2,'$1'},l}],[{{'$1','$2'}}]}])
    in gproc.erl line 2317
  92: <P.1.1/gproc>: [{{{n,l,foo},n},<P.2>,the_value}] = ets:lookup(gproc, {{n,l,foo},n})
    in gproc.erl line 2323
  93: <P.1.1/gproc>: true = ets:delete(gproc, {{n,l,foo},n})
    in gproc.erl line 2325
  94: <P.1.4/gproc_pool>: exits abnormally (shutdown)
  95: <P.1.4/gproc_pool>: {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    (while exiting)
  96: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    in supervisor.erl line 955
  97: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76331> = erlang:monitor(process, <P.1.3/gproc_bcast>)
    in supervisor.erl line 978
  98: <P.1/gproc_sup>: true = erlang:unlink(<P.1.3/gproc_bcast>)
    in supervisor.erl line 979
  99: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 100: <P.1/gproc_sup>: true = erlang:exit(<P.1.3/gproc_bcast>, shutdown)
    in supervisor.erl line 954
 101: <P.1.3/gproc_bcast>: exits abnormally (shutdown)
 102: <P.1.3/gproc_bcast>: {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    (while exiting)
 103: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    in supervisor.erl line 955
 104: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76340> = erlang:monitor(process, <P.1.2/gproc_monitor>)
    in supervisor.erl line 978
 105: <P.1/gproc_sup>: true = erlang:unlink(<P.1.2/gproc_monitor>)
    in supervisor.erl line 979
 106: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 107: <P.1/gproc_sup>: true = erlang:exit(<P.1.2/gproc_monitor>, shutdown)
    in supervisor.erl line 954
 108: <P.1.2/gproc_monitor>: exits abnormally (shutdown)
 109: <P.1.2/gproc_monitor>: true = ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 110: <P.1.2/gproc_monitor>: {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    (while exiting)
 111: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    in supervisor.erl line 955
 112: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76351> = erlang:monitor(process, <P.1.1/gproc>)
    in supervisor.erl line 978
 113: <P.1/gproc_sup>: true = erlang:unlink(<P.1.1/gproc>)
    in supervisor.erl line 979
 114: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 115: <P.1/gproc_sup>: true = erlang:exit(<P.1.1/gproc>, shutdown)
    in supervisor.erl line 954
 116: <P.1.1/gproc>: exits abnormally (shutdown)
 117: <P.1.1/gproc>: {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    (while exiting)
 118: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    in supervisor.erl line 955
 119: <P.1/gproc_sup>: exits normally
 120: <P.1/gproc_sup>: true = ets:delete(gproc)
    (while exiting)
 121: <P.1/gproc_sup>: Exception badarg raised by: ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 122: <P.1/gproc_sup>: true = ets:delete(gproc_monitor)
    (while exiting)
 123: <P.1/gproc_sup>: true = erlang:exit(<P>, normal)
    (while exiting)
################################################################################
Interleaving #13
--------------------------------------------------------------------------------
Errors found:
* At step 77 process <P.2> exited abnormally
    Reason:
      killed
    Stacktrace:
      []
--------------------------------------------------------------------------------
Event trace:
   1: <P>: undefined = erlang:whereis(gproc_sup)
    in gen.erl line 299
   2: <P>: [] = erlang:process_info(<P>, registered_name)
    in proc_lib.erl line 731
   3: <P>: <P.1/gproc_sup> = erlang:spawn_opt({proc_lib,init_p,[<P>,[],gen,init_it,[gen_server,<P>,<P>,{local,gproc_sup},supervisor,{{local,gproc_sup},gproc_sup,[]},[]]],[link]})
    in erlang.erl line 2868
   4: <P.1/gproc_sup>: true = erlang:register(gproc_sup, <P.1/gproc_sup>)
    in gen.erl line 302
   5: <P.1/gproc_sup>: false = erlang:process_flag(trap_exit, true)
    in supervisor.erl line 293
   6: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   7: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
   8: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   9: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  10: <P.1/gproc_sup>: undefined = ets:info(gproc, name)
    in gproc.erl line 2488
  11: <P.1/gproc_sup>: gproc = ets:new(gproc, [ordered_set,public,named_table,{write_concurrency,true},{read_concurrency,true}])
    in gproc.erl line 2490
  12: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
  13: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  14: <P.1/gproc_sup>: undefined = erlang:whereis(gproc)
    in gen.erl line 299
  15: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  16: <P.1/gproc_sup>: <P.1.1/gproc> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc},gproc,[],[{spawn_opt,[]}]]],[link]})
    in erlang.erl line 2868
  17: <P.1.1/gproc>: true = erlang:register(gproc, <P.1.1/gproc>)
    in gen.erl line 302
  18: <P.1.1/gproc>: '$end_of_table' = ets:select(gproc, [{{{'$1',l}},[],['$1']}], 100)
    in gproc.erl line 2502
  19: <P.1.1/gproc>: {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}} = <P.1/gproc_sup> ! {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}}
    in proc_lib.erl line 392
  20: <P.1/gproc_sup>: receives message ({ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}})
    in proc_lib.erl line 348
  21: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  22: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  23: <P.1/gproc_sup>: undefined = ets:info(gproc_monitor, owner)
  24: <P.1/gproc_sup>: gproc_monitor = ets:new(gproc_monitor, [ordered_set,protected,named_table,{heir,<P.1/gproc_sup>,[]}])
  25: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  26: <P.1/gproc_sup>: <P.1.2/gproc_monitor> = erlang:spawn_link(proc_lib, init_p, [gproc_sup,[<P>],gproc_monitor,init,[<P.1/gproc_sup>]])
    in proc_lib.erl line 100
  27: <P.1.2/gproc_monitor>: normal = erlang:process_flag(priority, high)
    in gproc_monitor.erl line 123
  28: <P.1.2/gproc_monitor>: true = erlang:register(gproc_monitor, <P.1.2/gproc_monitor>)
    in gproc_monitor.erl line 124
  29: <P.1.2/gproc_monitor>: {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}} = <P.1/gproc_sup> ! {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}}
    in proc_lib.erl line 392
  30: <P.1/gproc_sup>: receives message ({ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}})
    in proc_lib.erl line 348
  31: <P.1/gproc_sup>: true = ets:give_away(gproc_monitor, <P.1.2/gproc_monitor>, [])
    in gproc_monitor.erl line 104
  32: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  33: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  34: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_bcast)
    in gen.erl line 299
  35: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  36: <P.1/gproc_sup>: <P.1.3/gproc_bcast> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_bcast},gproc_bcast,[],[]]],[link]})
    in erlang.erl line 2868
  37: <P.1.2/gproc_monitor>: receives message ({'ETS-TRANSFER',gproc_monitor,<P.1/gproc_sup>,[]})
    in gproc_monitor.erl line 126
  38: <P.1.3/gproc_bcast>: true = erlang:register(gproc_bcast, <P.1.3/gproc_bcast>)
    in gen.erl line 302
  39: <P.1.3/gproc_bcast>: {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}} = <P.1/gproc_sup> ! {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}}
    in proc_lib.erl line 392
  40: <P.1/gproc_sup>: receives message ({ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}})
    in proc_lib.erl line 348
  41: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  42: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  43: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_pool)
    in gen.erl line 299
  44: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  45: <P.1/gproc_sup>: <P.1.4/gproc_pool> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_pool},gproc_pool,[],[]]],[link]})
    in erlang.erl line 2868
  46: <P.1.4/gproc_pool>: true = erlang:register(gproc_pool, <P.1.4/gproc_pool>)
    in gen.erl line 302
  47: <P.1.4/gproc_pool>: {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}} = <P.1/gproc_sup> ! {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}}
    in proc_lib.erl line 392
  48: <P.1/gproc_sup>: receives message ({ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}})
    in proc_lib.erl line 348
  49: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  50: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  51: <P.1/gproc_sup>: {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}} = <P> ! {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}}
    in proc_lib.erl line 392
  52: <P>: receives message ({ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}})
    in proc_lib.erl line 348
  53: <P>: {<P.2>,#Ref<0.3937440253.4130865153.76259>} = erlang:spawn_opt({erlang,apply,[#Fun<test.8.122744875>,[]],[monitor]})
    in erlang.erl line 2731
  54: <P.2>: #Ref<0.3937440253.4130865153.76262> = erlang:monitor(process, <P>)
    in test.erl line 38
  55: <P.2>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  56: <P.2>: #Ref<0.3937440253.4130865153.76266> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  57: <P.2>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}}, [noconnect])
    in gen.erl line 167
  58: <P.1.1/gproc>: receives message ({'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}})
    in gen_server.erl line 381
  59: <P.1.1/gproc>: true = ets:insert_new(gproc, {{{n,l,foo},n},<P.2>,the_value})
    in gproc_lib.erl line 78
  60: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,{n,l,foo}},[]})
  61: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,l}})
    in gproc_lib.erl line 300
  62: <P.1.1/gproc>: #Ref<0.3937440253.4130865153.76276> = erlang:monitor(process, <P.2>)
    in gproc_lib.erl line 302
  63: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76266>,true} = <P.2> ! {#Ref<0.3937440253.4130865153.76266>,true}
    in gen_server.erl line 243
  64: <P.2>: receives message ({#Ref<0.3937440253.4130865153.76266>,true})
    in gen.erl line 169
  65: <P.2>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76266>, [flush])
    in gen.erl line 171
  66: <P.2>: {<P.2>,ok} = <P> ! {<P.2>,ok}
    in test.erl line 40
  67: <P>: receives message ({<P.2>,ok})
    in test.erl line 45
  68: <P>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  69: <P>: #Ref<0.3937440253.4130865153.76286> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  70: <P>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}}, [noconnect])
    in gen.erl line 167
  71: <P.1.1/gproc>: receives message ({'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}})
    in gen_server.erl line 381
  72: <P.1.1/gproc>: [{{{n,l,foo},n},<P.2>,the_value}] = ets:lookup(gproc, {{n,l,foo},n})
    in gproc.erl line 2072
  73: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}} = <P> ! {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}}
    in gen_server.erl line 243
  74: <P>: receives message ({#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}})
    in gen.erl line 169
  75: <P>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76286>, [flush])
    in gen.erl line 171
  76: <P>: true = erlang:exit(<P.2>, kill)
    in test.erl line 47
  77: <P.2>: exits abnormally (killed)
  78: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed} = erlang:send(<P>, {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    (while exiting)
  79: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed} = erlang:send(<P.1.1/gproc>, {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed})
    (while exiting)
  80: <P>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    in test.erl line 48
  81: <P>: exits normally
  82: <P>: true = erlang:exit(<P.1/gproc_sup>, normal)
    (while exiting)
  83: <P>: {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal} = erlang:send(<P.2>, {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal})
    (while exiting)
  84: <P.1/gproc_sup>: receives message ({'EXIT',<P>,normal})
    in gen_server.erl line 381
  85: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76307> = erlang:monitor(process, <P.1.4/gproc_pool>)
    in supervisor.erl line 978
  86: <P.1/gproc_sup>: true = erlang:unlink(<P.1.4/gproc_pool>)
    in supervisor.erl line 979
  87: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
  88: <P.1/gproc_sup>: true = erlang:exit(<P.1.4/gproc_pool>, shutdown)
    in supervisor.erl line 954
  89: <P.1.1/gproc>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed})
    in gen_server.erl line 381
  90: <P.1.1/gproc>: true = ets:member(gproc, {<P.2>,l})
    in gproc.erl line 2313
  91: <P.1.1/gproc>: [{{n,l,foo},[]}] = ets:select(gproc, [{{{<P.2>,'$1'},'$2'},[{'==',{element,2,'$1'},l}],[{{'$1','$2'}}]}])
    in gproc.erl line 2317
  92: <P.1.1/gproc>: [{{{n,l,foo},n},<P.2>,the_value}] = ets:lookup(gproc, {{n,l,foo},n})
    in gproc.erl line 2323
  93: <P.1.4/gproc_pool>: exits abnormally (shutdown)
  94: <P.1.4/gproc_pool>: {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    (while exiting)
  95: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    in supervisor.erl line 955
  96: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76331> = erlang:monitor(process, <P.1.3/gproc_bcast>)
    in supervisor.erl line 978
  97: <P.1/gproc_sup>: true = erlang:unlink(<P.1.3/gproc_bcast>)
    in supervisor.erl line 979
  98: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
  99: <P.1/gproc_sup>: true = erlang:exit(<P.1.3/gproc_bcast>, shutdown)
    in supervisor.erl line 954
 100: <P.1.3/gproc_bcast>: exits abnormally (shutdown)
 101: <P.1.3/gproc_bcast>: {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    (while exiting)
 102: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    in supervisor.erl line 955
 103: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76340> = erlang:monitor(process, <P.1.2/gproc_monitor>)
    in supervisor.erl line 978
 104: <P.1/gproc_sup>: true = erlang:unlink(<P.1.2/gproc_monitor>)
    in supervisor.erl line 979
 105: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 106: <P.1/gproc_sup>: true = erlang:exit(<P.1.2/gproc_monitor>, shutdown)
    in supervisor.erl line 954
 107: <P.1.2/gproc_monitor>: exits abnormally (shutdown)
 108: <P.1.2/gproc_monitor>: true = ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 109: <P.1.2/gproc_monitor>: {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    (while exiting)
 110: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    in supervisor.erl line 955
 111: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76351> = erlang:monitor(process, <P.1.1/gproc>)
    in supervisor.erl line 978
 112: <P.1/gproc_sup>: true = erlang:unlink(<P.1.1/gproc>)
    in supervisor.erl line 979
 113: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 114: <P.1/gproc_sup>: true = erlang:exit(<P.1.1/gproc>, shutdown)
    in supervisor.erl line 954
 115: <P.1.1/gproc>: exits abnormally (shutdown)
 116: <P.1.1/gproc>: {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    (while exiting)
 117: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    in supervisor.erl line 955
 118: <P.1/gproc_sup>: exits normally
 119: <P.1/gproc_sup>: true = ets:delete(gproc)
    (while exiting)
 120: <P.1/gproc_sup>: Exception badarg raised by: ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 121: <P.1/gproc_sup>: true = ets:delete(gproc_monitor)
    (while exiting)
 122: <P.1/gproc_sup>: true = erlang:exit(<P>, normal)
    (while exiting)
################################################################################
Interleaving #14
--------------------------------------------------------------------------------
Errors found:
* At step 77 process <P.2> exited abnormally
    Reason:
      killed
    Stacktrace:
      []
--------------------------------------------------------------------------------
Event trace:
   1: <P>: undefined = erlang:whereis(gproc_sup)
    in gen.erl line 299
   2: <P>: [] = erlang:process_info(<P>, registered_name)
    in proc_lib.erl line 731
   3: <P>: <P.1/gproc_sup> = erlang:spawn_opt({proc_lib,init_p,[<P>,[],gen,init_it,[gen_server,<P>,<P>,{local,gproc_sup},supervisor,{{local,gproc_sup},gproc_sup,[]},[]]],[link]})
    in erlang.erl line 2868
   4: <P.1/gproc_sup>: true = erlang:register(gproc_sup, <P.1/gproc_sup>)
    in gen.erl line 302
   5: <P.1/gproc_sup>: false = erlang:process_flag(trap_exit, true)
    in supervisor.erl line 293
   6: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   7: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
   8: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   9: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  10: <P.1/gproc_sup>: undefined = ets:info(gproc, name)
    in gproc.erl line 2488
  11: <P.1/gproc_sup>: gproc = ets:new(gproc, [ordered_set,public,named_table,{write_concurrency,true},{read_concurrency,true}])
    in gproc.erl line 2490
  12: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
  13: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  14: <P.1/gproc_sup>: undefined = erlang:whereis(gproc)
    in gen.erl line 299
  15: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  16: <P.1/gproc_sup>: <P.1.1/gproc> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc},gproc,[],[{spawn_opt,[]}]]],[link]})
    in erlang.erl line 2868
  17: <P.1.1/gproc>: true = erlang:register(gproc, <P.1.1/gproc>)
    in gen.erl line 302
  18: <P.1.1/gproc>: '$end_of_table' = ets:select(gproc, [{{{'$1',l}},[],['$1']}], 100)
    in gproc.erl line 2502
  19: <P.1.1/gproc>: {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}} = <P.1/gproc_sup> ! {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}}
    in proc_lib.erl line 392
  20: <P.1/gproc_sup>: receives message ({ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}})
    in proc_lib.erl line 348
  21: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  22: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  23: <P.1/gproc_sup>: undefined = ets:info(gproc_monitor, owner)
  24: <P.1/gproc_sup>: gproc_monitor = ets:new(gproc_monitor, [ordered_set,protected,named_table,{heir,<P.1/gproc_sup>,[]}])
  25: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  26: <P.1/gproc_sup>: <P.1.2/gproc_monitor> = erlang:spawn_link(proc_lib, init_p, [gproc_sup,[<P>],gproc_monitor,init,[<P.1/gproc_sup>]])
    in proc_lib.erl line 100
  27: <P.1.2/gproc_monitor>: normal = erlang:process_flag(priority, high)
    in gproc_monitor.erl line 123
  28: <P.1.2/gproc_monitor>: true = erlang:register(gproc_monitor, <P.1.2/gproc_monitor>)
    in gproc_monitor.erl line 124
  29: <P.1.2/gproc_monitor>: {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}} = <P.1/gproc_sup> ! {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}}
    in proc_lib.erl line 392
  30: <P.1/gproc_sup>: receives message ({ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}})
    in proc_lib.erl line 348
  31: <P.1/gproc_sup>: true = ets:give_away(gproc_monitor, <P.1.2/gproc_monitor>, [])
    in gproc_monitor.erl line 104
  32: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  33: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  34: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_bcast)
    in gen.erl line 299
  35: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  36: <P.1/gproc_sup>: <P.1.3/gproc_bcast> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_bcast},gproc_bcast,[],[]]],[link]})
    in erlang.erl line 2868
  37: <P.1.2/gproc_monitor>: receives message ({'ETS-TRANSFER',gproc_monitor,<P.1/gproc_sup>,[]})
    in gproc_monitor.erl line 126
  38: <P.1.3/gproc_bcast>: true = erlang:register(gproc_bcast, <P.1.3/gproc_bcast>)
    in gen.erl line 302
  39: <P.1.3/gproc_bcast>: {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}} = <P.1/gproc_sup> ! {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}}
    in proc_lib.erl line 392
  40: <P.1/gproc_sup>: receives message ({ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}})
    in proc_lib.erl line 348
  41: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  42: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  43: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_pool)
    in gen.erl line 299
  44: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  45: <P.1/gproc_sup>: <P.1.4/gproc_pool> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_pool},gproc_pool,[],[]]],[link]})
    in erlang.erl line 2868
  46: <P.1.4/gproc_pool>: true = erlang:register(gproc_pool, <P.1.4/gproc_pool>)
    in gen.erl line 302
  47: <P.1.4/gproc_pool>: {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}} = <P.1/gproc_sup> ! {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}}
    in proc_lib.erl line 392
  48: <P.1/gproc_sup>: receives message ({ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}})
    in proc_lib.erl line 348
  49: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  50: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  51: <P.1/gproc_sup>: {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}} = <P> ! {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}}
    in proc_lib.erl line 392
  52: <P>: receives message ({ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}})
    in proc_lib.erl line 348
  53: <P>: {<P.2>,#Ref<0.3937440253.4130865153.76259>} = erlang:spawn_opt({erlang,apply,[#Fun<test.8.122744875>,[]],[monitor]})
    in erlang.erl line 2731
  54: <P.2>: #Ref<0.3937440253.4130865153.76262> = erlang:monitor(process, <P>)
    in test.erl line 38
  55: <P.2>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  56: <P.2>: #Ref<0.3937440253.4130865153.76266> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  57: <P.2>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}}, [noconnect])
    in gen.erl line 167
  58: <P.1.1/gproc>: receives message ({'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}})
    in gen_server.erl line 381
  59: <P.1.1/gproc>: true = ets:insert_new(gproc, {{{n,l,foo},n},<P.2>,the_value})
    in gproc_lib.erl line 78
  60: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,{n,l,foo}},[]})
  61: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,l}})
    in gproc_lib.erl line 300
  62: <P.1.1/gproc>: #Ref<0.3937440253.4130865153.76276> = erlang:monitor(process, <P.2>)
    in gproc_lib.erl line 302
  63: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76266>,true} = <P.2> ! {#Ref<0.3937440253.4130865153.76266>,true}
    in gen_server.erl line 243
  64: <P.2>: receives message ({#Ref<0.3937440253.4130865153.76266>,true})
    in gen.erl line 169
  65: <P.2>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76266>, [flush])
    in gen.erl line 171
  66: <P.2>: {<P.2>,ok} = <P> ! {<P.2>,ok}
    in test.erl line 40
  67: <P>: receives message ({<P.2>,ok})
    in test.erl line 45
  68: <P>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  69: <P>: #Ref<0.3937440253.4130865153.76286> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  70: <P>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}}, [noconnect])
    in gen.erl line 167
  71: <P.1.1/gproc>: receives message ({'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}})
    in gen_server.erl line 381
  72: <P.1.1/gproc>: [{{{n,l,foo},n},<P.2>,the_value}] = ets:lookup(gproc, {{n,l,foo},n})
    in gproc.erl line 2072
  73: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}} = <P> ! {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}}
    in gen_server.erl line 243
  74: <P>: receives message ({#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}})
    in gen.erl line 169
  75: <P>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76286>, [flush])
    in gen.erl line 171
  76: <P>: true = erlang:exit(<P.2>, kill)
    in test.erl line 47
  77: <P.2>: exits abnormally (killed)
  78: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed} = erlang:send(<P>, {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    (while exiting)
  79: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed} = erlang:send(<P.1.1/gproc>, {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed})
    (while exiting)
  80: <P>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    in test.erl line 48
  81: <P>: exits normally
  82: <P>: true = erlang:exit(<P.1/gproc_sup>, normal)
    (while exiting)
  83: <P>: {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal} = erlang:send(<P.2>, {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal})
    (while exiting)
  84: <P.1/gproc_sup>: receives message ({'EXIT',<P>,normal})
    in gen_server.erl line 381
  85: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76307> = erlang:monitor(process, <P.1.4/gproc_pool>)
    in supervisor.erl line 978
  86: <P.1/gproc_sup>: true = erlang:unlink(<P.1.4/gproc_pool>)
    in supervisor.erl line 979
  87: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
  88: <P.1/gproc_sup>: true = erlang:exit(<P.1.4/gproc_pool>, shutdown)
    in supervisor.erl line 954
  89: <P.1.1/gproc>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed})
    in gen_server.erl line 381
  90: <P.1.1/gproc>: true = ets:member(gproc, {<P.2>,l})
    in gproc.erl line 2313
  91: <P.1.1/gproc>: [{{n,l,foo},[]}] = ets:select(gproc, [{{{<P.2>,'$1'},'$2'},[{'==',{element,2,'$1'},l}],[{{'$1','$2'}}]}])
    in gproc.erl line 2317
  92: <P.1.4/gproc_pool>: exits abnormally (shutdown)
  93: <P.1.4/gproc_pool>: {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    (while exiting)
  94: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    in supervisor.erl line 955
  95: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76331> = erlang:monitor(process, <P.1.3/gproc_bcast>)
    in supervisor.erl line 978
  96: <P.1/gproc_sup>: true = erlang:unlink(<P.1.3/gproc_bcast>)
    in supervisor.erl line 979
  97: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
  98: <P.1/gproc_sup>: true = erlang:exit(<P.1.3/gproc_bcast>, shutdown)
    in supervisor.erl line 954
  99: <P.1.3/gproc_bcast>: exits abnormally (shutdown)
 100: <P.1.3/gproc_bcast>: {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    (while exiting)
 101: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    in supervisor.erl line 955
 102: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76340> = erlang:monitor(process, <P.1.2/gproc_monitor>)
    in supervisor.erl line 978
 103: <P.1/gproc_sup>: true = erlang:unlink(<P.1.2/gproc_monitor>)
    in supervisor.erl line 979
 104: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 105: <P.1/gproc_sup>: true = erlang:exit(<P.1.2/gproc_monitor>, shutdown)
    in supervisor.erl line 954
 106: <P.1.2/gproc_monitor>: exits abnormally (shutdown)
 107: <P.1.2/gproc_monitor>: true = ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 108: <P.1.2/gproc_monitor>: {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    (while exiting)
 109: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    in supervisor.erl line 955
 110: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76351> = erlang:monitor(process, <P.1.1/gproc>)
    in supervisor.erl line 978
 111: <P.1/gproc_sup>: true = erlang:unlink(<P.1.1/gproc>)
    in supervisor.erl line 979
 112: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 113: <P.1/gproc_sup>: true = erlang:exit(<P.1.1/gproc>, shutdown)
    in supervisor.erl line 954
 114: <P.1.1/gproc>: exits abnormally (shutdown)
 115: <P.1.1/gproc>: {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    (while exiting)
 116: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    in supervisor.erl line 955
 117: <P.1/gproc_sup>: exits normally
 118: <P.1/gproc_sup>: true = ets:delete(gproc)
    (while exiting)
 119: <P.1/gproc_sup>: Exception badarg raised by: ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 120: <P.1/gproc_sup>: true = ets:delete(gproc_monitor)
    (while exiting)
 121: <P.1/gproc_sup>: true = erlang:exit(<P>, normal)
    (while exiting)
################################################################################
Interleaving #15
--------------------------------------------------------------------------------
Errors found:
* At step 77 process <P.2> exited abnormally
    Reason:
      killed
    Stacktrace:
      []
--------------------------------------------------------------------------------
Event trace:
   1: <P>: undefined = erlang:whereis(gproc_sup)
    in gen.erl line 299
   2: <P>: [] = erlang:process_info(<P>, registered_name)
    in proc_lib.erl line 731
   3: <P>: <P.1/gproc_sup> = erlang:spawn_opt({proc_lib,init_p,[<P>,[],gen,init_it,[gen_server,<P>,<P>,{local,gproc_sup},supervisor,{{local,gproc_sup},gproc_sup,[]},[]]],[link]})
    in erlang.erl line 2868
   4: <P.1/gproc_sup>: true = erlang:register(gproc_sup, <P.1/gproc_sup>)
    in gen.erl line 302
   5: <P.1/gproc_sup>: false = erlang:process_flag(trap_exit, true)
    in supervisor.erl line 293
   6: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   7: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
   8: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   9: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  10: <P.1/gproc_sup>: undefined = ets:info(gproc, name)
    in gproc.erl line 2488
  11: <P.1/gproc_sup>: gproc = ets:new(gproc, [ordered_set,public,named_table,{write_concurrency,true},{read_concurrency,true}])
    in gproc.erl line 2490
  12: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
  13: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  14: <P.1/gproc_sup>: undefined = erlang:whereis(gproc)
    in gen.erl line 299
  15: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  16: <P.1/gproc_sup>: <P.1.1/gproc> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc},gproc,[],[{spawn_opt,[]}]]],[link]})
    in erlang.erl line 2868
  17: <P.1.1/gproc>: true = erlang:register(gproc, <P.1.1/gproc>)
    in gen.erl line 302
  18: <P.1.1/gproc>: '$end_of_table' = ets:select(gproc, [{{{'$1',l}},[],['$1']}], 100)
    in gproc.erl line 2502
  19: <P.1.1/gproc>: {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}} = <P.1/gproc_sup> ! {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}}
    in proc_lib.erl line 392
  20: <P.1/gproc_sup>: receives message ({ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}})
    in proc_lib.erl line 348
  21: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  22: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  23: <P.1/gproc_sup>: undefined = ets:info(gproc_monitor, owner)
  24: <P.1/gproc_sup>: gproc_monitor = ets:new(gproc_monitor, [ordered_set,protected,named_table,{heir,<P.1/gproc_sup>,[]}])
  25: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  26: <P.1/gproc_sup>: <P.1.2/gproc_monitor> = erlang:spawn_link(proc_lib, init_p, [gproc_sup,[<P>],gproc_monitor,init,[<P.1/gproc_sup>]])
    in proc_lib.erl line 100
  27: <P.1.2/gproc_monitor>: normal = erlang:process_flag(priority, high)
    in gproc_monitor.erl line 123
  28: <P.1.2/gproc_monitor>: true = erlang:register(gproc_monitor, <P.1.2/gproc_monitor>)
    in gproc_monitor.erl line 124
  29: <P.1.2/gproc_monitor>: {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}} = <P.1/gproc_sup> ! {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}}
    in proc_lib.erl line 392
  30: <P.1/gproc_sup>: receives message ({ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}})
    in proc_lib.erl line 348
  31: <P.1/gproc_sup>: true = ets:give_away(gproc_monitor, <P.1.2/gproc_monitor>, [])
    in gproc_monitor.erl line 104
  32: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  33: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  34: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_bcast)
    in gen.erl line 299
  35: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  36: <P.1/gproc_sup>: <P.1.3/gproc_bcast> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_bcast},gproc_bcast,[],[]]],[link]})
    in erlang.erl line 2868
  37: <P.1.2/gproc_monitor>: receives message ({'ETS-TRANSFER',gproc_monitor,<P.1/gproc_sup>,[]})
    in gproc_monitor.erl line 126
  38: <P.1.3/gproc_bcast>: true = erlang:register(gproc_bcast, <P.1.3/gproc_bcast>)
    in gen.erl line 302
  39: <P.1.3/gproc_bcast>: {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}} = <P.1/gproc_sup> ! {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}}
    in proc_lib.erl line 392
  40: <P.1/gproc_sup>: receives message ({ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}})
    in proc_lib.erl line 348
  41: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  42: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  43: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_pool)
    in gen.erl line 299
  44: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  45: <P.1/gproc_sup>: <P.1.4/gproc_pool> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_pool},gproc_pool,[],[]]],[link]})
    in erlang.erl line 2868
  46: <P.1.4/gproc_pool>: true = erlang:register(gproc_pool, <P.1.4/gproc_pool>)
    in gen.erl line 302
  47: <P.1.4/gproc_pool>: {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}} = <P.1/gproc_sup> ! {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}}
    in proc_lib.erl line 392
  48: <P.1/gproc_sup>: receives message ({ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}})
    in proc_lib.erl line 348
  49: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  50: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  51: <P.1/gproc_sup>: {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}} = <P> ! {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}}
    in proc_lib.erl line 392
  52: <P>: receives message ({ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}})
    in proc_lib.erl line 348
  53: <P>: {<P.2>,#Ref<0.3937440253.4130865153.76259>} = erlang:spawn_opt({erlang,apply,[#Fun<test.8.122744875>,[]],[monitor]})
    in erlang.erl line 2731
  54: <P.2>: #Ref<0.3937440253.4130865153.76262> = erlang:monitor(process, <P>)
    in test.erl line 38
  55: <P.2>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  56: <P.2>: #Ref<0.3937440253.4130865153.76266> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  57: <P.2>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}}, [noconnect])
    in gen.erl line 167
  58: <P.1.1/gproc>: receives message ({'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}})
    in gen_server.erl line 381
  59: <P.1.1/gproc>: true = ets:insert_new(gproc, {{{n,l,foo},n},<P.2>,the_value})
    in gproc_lib.erl line 78
  60: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,{n,l,foo}},[]})
  61: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,l}})
    in gproc_lib.erl line 300
  62: <P.1.1/gproc>: #Ref<0.3937440253.4130865153.76276> = erlang:monitor(process, <P.2>)
    in gproc_lib.erl line 302
  63: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76266>,true} = <P.2> ! {#Ref<0.3937440253.4130865153.76266>,true}
    in gen_server.erl line 243
  64: <P.2>: receives message ({#Ref<0.3937440253.4130865153.76266>,true})
    in gen.erl line 169
  65: <P.2>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76266>, [flush])
    in gen.erl line 171
  66: <P.2>: {<P.2>,ok} = <P> ! {<P.2>,ok}
    in test.erl line 40
  67: <P>: receives message ({<P.2>,ok})
    in test.erl line 45
  68: <P>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  69: <P>: #Ref<0.3937440253.4130865153.76286> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  70: <P>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}}, [noconnect])
    in gen.erl line 167
  71: <P.1.1/gproc>: receives message ({'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}})
    in gen_server.erl line 381
  72: <P.1.1/gproc>: [{{{n,l,foo},n},<P.2>,the_value}] = ets:lookup(gproc, {{n,l,foo},n})
    in gproc.erl line 2072
  73: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}} = <P> ! {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}}
    in gen_server.erl line 243
  74: <P>: receives message ({#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}})
    in gen.erl line 169
  75: <P>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76286>, [flush])
    in gen.erl line 171
  76: <P>: true = erlang:exit(<P.2>, kill)
    in test.erl line 47
  77: <P.2>: exits abnormally (killed)
  78: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed} = erlang:send(<P>, {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    (while exiting)
  79: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed} = erlang:send(<P.1.1/gproc>, {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed})
    (while exiting)
  80: <P>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    in test.erl line 48
  81: <P>: exits normally
  82: <P>: true = erlang:exit(<P.1/gproc_sup>, normal)
    (while exiting)
  83: <P>: {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal} = erlang:send(<P.2>, {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal})
    (while exiting)
  84: <P.1/gproc_sup>: receives message ({'EXIT',<P>,normal})
    in gen_server.erl line 381
  85: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76307> = erlang:monitor(process, <P.1.4/gproc_pool>)
    in supervisor.erl line 978
  86: <P.1/gproc_sup>: true = erlang:unlink(<P.1.4/gproc_pool>)
    in supervisor.erl line 979
  87: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
  88: <P.1/gproc_sup>: true = erlang:exit(<P.1.4/gproc_pool>, shutdown)
    in supervisor.erl line 954
  89: <P.1.1/gproc>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed})
    in gen_server.erl line 381
  90: <P.1.1/gproc>: true = ets:member(gproc, {<P.2>,l})
    in gproc.erl line 2313
  91: <P.1.4/gproc_pool>: exits abnormally (shutdown)
  92: <P.1.4/gproc_pool>: {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    (while exiting)
  93: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    in supervisor.erl line 955
  94: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76331> = erlang:monitor(process, <P.1.3/gproc_bcast>)
    in supervisor.erl line 978
  95: <P.1/gproc_sup>: true = erlang:unlink(<P.1.3/gproc_bcast>)
    in supervisor.erl line 979
  96: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
  97: <P.1/gproc_sup>: true = erlang:exit(<P.1.3/gproc_bcast>, shutdown)
    in supervisor.erl line 954
  98: <P.1.3/gproc_bcast>: exits abnormally (shutdown)
  99: <P.1.3/gproc_bcast>: {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    (while exiting)
 100: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    in supervisor.erl line 955
 101: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76340> = erlang:monitor(process, <P.1.2/gproc_monitor>)
    in supervisor.erl line 978
 102: <P.1/gproc_sup>: true = erlang:unlink(<P.1.2/gproc_monitor>)
    in supervisor.erl line 979
 103: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 104: <P.1/gproc_sup>: true = erlang:exit(<P.1.2/gproc_monitor>, shutdown)
    in supervisor.erl line 954
 105: <P.1.2/gproc_monitor>: exits abnormally (shutdown)
 106: <P.1.2/gproc_monitor>: true = ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 107: <P.1.2/gproc_monitor>: {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    (while exiting)
 108: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    in supervisor.erl line 955
 109: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76351> = erlang:monitor(process, <P.1.1/gproc>)
    in supervisor.erl line 978
 110: <P.1/gproc_sup>: true = erlang:unlink(<P.1.1/gproc>)
    in supervisor.erl line 979
 111: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 112: <P.1/gproc_sup>: true = erlang:exit(<P.1.1/gproc>, shutdown)
    in supervisor.erl line 954
 113: <P.1.1/gproc>: exits abnormally (shutdown)
 114: <P.1.1/gproc>: {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    (while exiting)
 115: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    in supervisor.erl line 955
 116: <P.1/gproc_sup>: exits normally
 117: <P.1/gproc_sup>: true = ets:delete(gproc)
    (while exiting)
 118: <P.1/gproc_sup>: Exception badarg raised by: ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 119: <P.1/gproc_sup>: true = ets:delete(gproc_monitor)
    (while exiting)
 120: <P.1/gproc_sup>: true = erlang:exit(<P>, normal)
    (while exiting)
################################################################################
Interleaving #16
--------------------------------------------------------------------------------
Errors found:
* At step 77 process <P.2> exited abnormally
    Reason:
      killed
    Stacktrace:
      []
--------------------------------------------------------------------------------
Event trace:
   1: <P>: undefined = erlang:whereis(gproc_sup)
    in gen.erl line 299
   2: <P>: [] = erlang:process_info(<P>, registered_name)
    in proc_lib.erl line 731
   3: <P>: <P.1/gproc_sup> = erlang:spawn_opt({proc_lib,init_p,[<P>,[],gen,init_it,[gen_server,<P>,<P>,{local,gproc_sup},supervisor,{{local,gproc_sup},gproc_sup,[]},[]]],[link]})
    in erlang.erl line 2868
   4: <P.1/gproc_sup>: true = erlang:register(gproc_sup, <P.1/gproc_sup>)
    in gen.erl line 302
   5: <P.1/gproc_sup>: false = erlang:process_flag(trap_exit, true)
    in supervisor.erl line 293
   6: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   7: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
   8: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   9: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  10: <P.1/gproc_sup>: undefined = ets:info(gproc, name)
    in gproc.erl line 2488
  11: <P.1/gproc_sup>: gproc = ets:new(gproc, [ordered_set,public,named_table,{write_concurrency,true},{read_concurrency,true}])
    in gproc.erl line 2490
  12: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
  13: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  14: <P.1/gproc_sup>: undefined = erlang:whereis(gproc)
    in gen.erl line 299
  15: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  16: <P.1/gproc_sup>: <P.1.1/gproc> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc},gproc,[],[{spawn_opt,[]}]]],[link]})
    in erlang.erl line 2868
  17: <P.1.1/gproc>: true = erlang:register(gproc, <P.1.1/gproc>)
    in gen.erl line 302
  18: <P.1.1/gproc>: '$end_of_table' = ets:select(gproc, [{{{'$1',l}},[],['$1']}], 100)
    in gproc.erl line 2502
  19: <P.1.1/gproc>: {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}} = <P.1/gproc_sup> ! {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}}
    in proc_lib.erl line 392
  20: <P.1/gproc_sup>: receives message ({ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}})
    in proc_lib.erl line 348
  21: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  22: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  23: <P.1/gproc_sup>: undefined = ets:info(gproc_monitor, owner)
  24: <P.1/gproc_sup>: gproc_monitor = ets:new(gproc_monitor, [ordered_set,protected,named_table,{heir,<P.1/gproc_sup>,[]}])
  25: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  26: <P.1/gproc_sup>: <P.1.2/gproc_monitor> = erlang:spawn_link(proc_lib, init_p, [gproc_sup,[<P>],gproc_monitor,init,[<P.1/gproc_sup>]])
    in proc_lib.erl line 100
  27: <P.1.2/gproc_monitor>: normal = erlang:process_flag(priority, high)
    in gproc_monitor.erl line 123
  28: <P.1.2/gproc_monitor>: true = erlang:register(gproc_monitor, <P.1.2/gproc_monitor>)
    in gproc_monitor.erl line 124
  29: <P.1.2/gproc_monitor>: {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}} = <P.1/gproc_sup> ! {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}}
    in proc_lib.erl line 392
  30: <P.1/gproc_sup>: receives message ({ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}})
    in proc_lib.erl line 348
  31: <P.1/gproc_sup>: true = ets:give_away(gproc_monitor, <P.1.2/gproc_monitor>, [])
    in gproc_monitor.erl line 104
  32: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  33: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  34: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_bcast)
    in gen.erl line 299
  35: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  36: <P.1/gproc_sup>: <P.1.3/gproc_bcast> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_bcast},gproc_bcast,[],[]]],[link]})
    in erlang.erl line 2868
  37: <P.1.2/gproc_monitor>: receives message ({'ETS-TRANSFER',gproc_monitor,<P.1/gproc_sup>,[]})
    in gproc_monitor.erl line 126
  38: <P.1.3/gproc_bcast>: true = erlang:register(gproc_bcast, <P.1.3/gproc_bcast>)
    in gen.erl line 302
  39: <P.1.3/gproc_bcast>: {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}} = <P.1/gproc_sup> ! {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}}
    in proc_lib.erl line 392
  40: <P.1/gproc_sup>: receives message ({ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}})
    in proc_lib.erl line 348
  41: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  42: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  43: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_pool)
    in gen.erl line 299
  44: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  45: <P.1/gproc_sup>: <P.1.4/gproc_pool> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_pool},gproc_pool,[],[]]],[link]})
    in erlang.erl line 2868
  46: <P.1.4/gproc_pool>: true = erlang:register(gproc_pool, <P.1.4/gproc_pool>)
    in gen.erl line 302
  47: <P.1.4/gproc_pool>: {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}} = <P.1/gproc_sup> ! {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}}
    in proc_lib.erl line 392
  48: <P.1/gproc_sup>: receives message ({ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}})
    in proc_lib.erl line 348
  49: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  50: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  51: <P.1/gproc_sup>: {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}} = <P> ! {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}}
    in proc_lib.erl line 392
  52: <P>: receives message ({ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}})
    in proc_lib.erl line 348
  53: <P>: {<P.2>,#Ref<0.3937440253.4130865153.76259>} = erlang:spawn_opt({erlang,apply,[#Fun<test.8.122744875>,[]],[monitor]})
    in erlang.erl line 2731
  54: <P.2>: #Ref<0.3937440253.4130865153.76262> = erlang:monitor(process, <P>)
    in test.erl line 38
  55: <P.2>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  56: <P.2>: #Ref<0.3937440253.4130865153.76266> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  57: <P.2>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}}, [noconnect])
    in gen.erl line 167
  58: <P.1.1/gproc>: receives message ({'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}})
    in gen_server.erl line 381
  59: <P.1.1/gproc>: true = ets:insert_new(gproc, {{{n,l,foo},n},<P.2>,the_value})
    in gproc_lib.erl line 78
  60: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,{n,l,foo}},[]})
  61: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,l}})
    in gproc_lib.erl line 300
  62: <P.1.1/gproc>: #Ref<0.3937440253.4130865153.76276> = erlang:monitor(process, <P.2>)
    in gproc_lib.erl line 302
  63: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76266>,true} = <P.2> ! {#Ref<0.3937440253.4130865153.76266>,true}
    in gen_server.erl line 243
  64: <P.2>: receives message ({#Ref<0.3937440253.4130865153.76266>,true})
    in gen.erl line 169
  65: <P.2>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76266>, [flush])
    in gen.erl line 171
  66: <P.2>: {<P.2>,ok} = <P> ! {<P.2>,ok}
    in test.erl line 40
  67: <P>: receives message ({<P.2>,ok})
    in test.erl line 45
  68: <P>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  69: <P>: #Ref<0.3937440253.4130865153.76286> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  70: <P>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}}, [noconnect])
    in gen.erl line 167
  71: <P.1.1/gproc>: receives message ({'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}})
    in gen_server.erl line 381
  72: <P.1.1/gproc>: [{{{n,l,foo},n},<P.2>,the_value}] = ets:lookup(gproc, {{n,l,foo},n})
    in gproc.erl line 2072
  73: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}} = <P> ! {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}}
    in gen_server.erl line 243
  74: <P>: receives message ({#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}})
    in gen.erl line 169
  75: <P>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76286>, [flush])
    in gen.erl line 171
  76: <P>: true = erlang:exit(<P.2>, kill)
    in test.erl line 47
  77: <P.2>: exits abnormally (killed)
  78: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed} = erlang:send(<P>, {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    (while exiting)
  79: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed} = erlang:send(<P.1.1/gproc>, {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed})
    (while exiting)
  80: <P>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    in test.erl line 48
  81: <P>: exits normally
  82: <P>: true = erlang:exit(<P.1/gproc_sup>, normal)
    (while exiting)
  83: <P>: {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal} = erlang:send(<P.2>, {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal})
    (while exiting)
  84: <P.1/gproc_sup>: receives message ({'EXIT',<P>,normal})
    in gen_server.erl line 381
  85: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76307> = erlang:monitor(process, <P.1.4/gproc_pool>)
    in supervisor.erl line 978
  86: <P.1/gproc_sup>: true = erlang:unlink(<P.1.4/gproc_pool>)
    in supervisor.erl line 979
  87: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
  88: <P.1/gproc_sup>: true = erlang:exit(<P.1.4/gproc_pool>, shutdown)
    in supervisor.erl line 954
  89: <P.1.1/gproc>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed})
    in gen_server.erl line 381
  90: <P.1.4/gproc_pool>: exits abnormally (shutdown)
  91: <P.1.4/gproc_pool>: {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    (while exiting)
  92: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    in supervisor.erl line 955
  93: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76331> = erlang:monitor(process, <P.1.3/gproc_bcast>)
    in supervisor.erl line 978
  94: <P.1/gproc_sup>: true = erlang:unlink(<P.1.3/gproc_bcast>)
    in supervisor.erl line 979
  95: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
  96: <P.1/gproc_sup>: true = erlang:exit(<P.1.3/gproc_bcast>, shutdown)
    in supervisor.erl line 954
  97: <P.1.3/gproc_bcast>: exits abnormally (shutdown)
  98: <P.1.3/gproc_bcast>: {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    (while exiting)
  99: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    in supervisor.erl line 955
 100: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76340> = erlang:monitor(process, <P.1.2/gproc_monitor>)
    in supervisor.erl line 978
 101: <P.1/gproc_sup>: true = erlang:unlink(<P.1.2/gproc_monitor>)
    in supervisor.erl line 979
 102: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 103: <P.1/gproc_sup>: true = erlang:exit(<P.1.2/gproc_monitor>, shutdown)
    in supervisor.erl line 954
 104: <P.1.2/gproc_monitor>: exits abnormally (shutdown)
 105: <P.1.2/gproc_monitor>: true = ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 106: <P.1.2/gproc_monitor>: {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    (while exiting)
 107: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    in supervisor.erl line 955
 108: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76351> = erlang:monitor(process, <P.1.1/gproc>)
    in supervisor.erl line 978
 109: <P.1/gproc_sup>: true = erlang:unlink(<P.1.1/gproc>)
    in supervisor.erl line 979
 110: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 111: <P.1/gproc_sup>: true = erlang:exit(<P.1.1/gproc>, shutdown)
    in supervisor.erl line 954
 112: <P.1.1/gproc>: exits abnormally (shutdown)
 113: <P.1.1/gproc>: {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    (while exiting)
 114: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    in supervisor.erl line 955
 115: <P.1/gproc_sup>: exits normally
 116: <P.1/gproc_sup>: true = ets:delete(gproc)
    (while exiting)
 117: <P.1/gproc_sup>: Exception badarg raised by: ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 118: <P.1/gproc_sup>: true = ets:delete(gproc_monitor)
    (while exiting)
 119: <P.1/gproc_sup>: true = erlang:exit(<P>, normal)
    (while exiting)
################################################################################
Interleaving #17
--------------------------------------------------------------------------------
Errors found:
* At step 77 process <P.2> exited abnormally
    Reason:
      killed
    Stacktrace:
      []
--------------------------------------------------------------------------------
Event trace:
   1: <P>: undefined = erlang:whereis(gproc_sup)
    in gen.erl line 299
   2: <P>: [] = erlang:process_info(<P>, registered_name)
    in proc_lib.erl line 731
   3: <P>: <P.1/gproc_sup> = erlang:spawn_opt({proc_lib,init_p,[<P>,[],gen,init_it,[gen_server,<P>,<P>,{local,gproc_sup},supervisor,{{local,gproc_sup},gproc_sup,[]},[]]],[link]})
    in erlang.erl line 2868
   4: <P.1/gproc_sup>: true = erlang:register(gproc_sup, <P.1/gproc_sup>)
    in gen.erl line 302
   5: <P.1/gproc_sup>: false = erlang:process_flag(trap_exit, true)
    in supervisor.erl line 293
   6: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   7: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
   8: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   9: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  10: <P.1/gproc_sup>: undefined = ets:info(gproc, name)
    in gproc.erl line 2488
  11: <P.1/gproc_sup>: gproc = ets:new(gproc, [ordered_set,public,named_table,{write_concurrency,true},{read_concurrency,true}])
    in gproc.erl line 2490
  12: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
  13: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  14: <P.1/gproc_sup>: undefined = erlang:whereis(gproc)
    in gen.erl line 299
  15: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  16: <P.1/gproc_sup>: <P.1.1/gproc> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc},gproc,[],[{spawn_opt,[]}]]],[link]})
    in erlang.erl line 2868
  17: <P.1.1/gproc>: true = erlang:register(gproc, <P.1.1/gproc>)
    in gen.erl line 302
  18: <P.1.1/gproc>: '$end_of_table' = ets:select(gproc, [{{{'$1',l}},[],['$1']}], 100)
    in gproc.erl line 2502
  19: <P.1.1/gproc>: {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}} = <P.1/gproc_sup> ! {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}}
    in proc_lib.erl line 392
  20: <P.1/gproc_sup>: receives message ({ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}})
    in proc_lib.erl line 348
  21: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  22: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  23: <P.1/gproc_sup>: undefined = ets:info(gproc_monitor, owner)
  24: <P.1/gproc_sup>: gproc_monitor = ets:new(gproc_monitor, [ordered_set,protected,named_table,{heir,<P.1/gproc_sup>,[]}])
  25: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  26: <P.1/gproc_sup>: <P.1.2/gproc_monitor> = erlang:spawn_link(proc_lib, init_p, [gproc_sup,[<P>],gproc_monitor,init,[<P.1/gproc_sup>]])
    in proc_lib.erl line 100
  27: <P.1.2/gproc_monitor>: normal = erlang:process_flag(priority, high)
    in gproc_monitor.erl line 123
  28: <P.1.2/gproc_monitor>: true = erlang:register(gproc_monitor, <P.1.2/gproc_monitor>)
    in gproc_monitor.erl line 124
  29: <P.1.2/gproc_monitor>: {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}} = <P.1/gproc_sup> ! {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}}
    in proc_lib.erl line 392
  30: <P.1/gproc_sup>: receives message ({ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}})
    in proc_lib.erl line 348
  31: <P.1/gproc_sup>: true = ets:give_away(gproc_monitor, <P.1.2/gproc_monitor>, [])
    in gproc_monitor.erl line 104
  32: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  33: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  34: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_bcast)
    in gen.erl line 299
  35: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  36: <P.1/gproc_sup>: <P.1.3/gproc_bcast> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_bcast},gproc_bcast,[],[]]],[link]})
    in erlang.erl line 2868
  37: <P.1.2/gproc_monitor>: receives message ({'ETS-TRANSFER',gproc_monitor,<P.1/gproc_sup>,[]})
    in gproc_monitor.erl line 126
  38: <P.1.3/gproc_bcast>: true = erlang:register(gproc_bcast, <P.1.3/gproc_bcast>)
    in gen.erl line 302
  39: <P.1.3/gproc_bcast>: {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}} = <P.1/gproc_sup> ! {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}}
    in proc_lib.erl line 392
  40: <P.1/gproc_sup>: receives message ({ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}})
    in proc_lib.erl line 348
  41: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  42: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  43: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_pool)
    in gen.erl line 299
  44: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  45: <P.1/gproc_sup>: <P.1.4/gproc_pool> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_pool},gproc_pool,[],[]]],[link]})
    in erlang.erl line 2868
  46: <P.1.4/gproc_pool>: true = erlang:register(gproc_pool, <P.1.4/gproc_pool>)
    in gen.erl line 302
  47: <P.1.4/gproc_pool>: {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}} = <P.1/gproc_sup> ! {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}}
    in proc_lib.erl line 392
  48: <P.1/gproc_sup>: receives message ({ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}})
    in proc_lib.erl line 348
  49: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  50: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  51: <P.1/gproc_sup>: {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}} = <P> ! {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}}
    in proc_lib.erl line 392
  52: <P>: receives message ({ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}})
    in proc_lib.erl line 348
  53: <P>: {<P.2>,#Ref<0.3937440253.4130865153.76259>} = erlang:spawn_opt({erlang,apply,[#Fun<test.8.122744875>,[]],[monitor]})
    in erlang.erl line 2731
  54: <P.2>: #Ref<0.3937440253.4130865153.76262> = erlang:monitor(process, <P>)
    in test.erl line 38
  55: <P.2>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  56: <P.2>: #Ref<0.3937440253.4130865153.76266> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  57: <P.2>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}}, [noconnect])
    in gen.erl line 167
  58: <P.1.1/gproc>: receives message ({'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}})
    in gen_server.erl line 381
  59: <P.1.1/gproc>: true = ets:insert_new(gproc, {{{n,l,foo},n},<P.2>,the_value})
    in gproc_lib.erl line 78
  60: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,{n,l,foo}},[]})
  61: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,l}})
    in gproc_lib.erl line 300
  62: <P.1.1/gproc>: #Ref<0.3937440253.4130865153.76276> = erlang:monitor(process, <P.2>)
    in gproc_lib.erl line 302
  63: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76266>,true} = <P.2> ! {#Ref<0.3937440253.4130865153.76266>,true}
    in gen_server.erl line 243
  64: <P.2>: receives message ({#Ref<0.3937440253.4130865153.76266>,true})
    in gen.erl line 169
  65: <P.2>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76266>, [flush])
    in gen.erl line 171
  66: <P.2>: {<P.2>,ok} = <P> ! {<P.2>,ok}
    in test.erl line 40
  67: <P>: receives message ({<P.2>,ok})
    in test.erl line 45
  68: <P>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  69: <P>: #Ref<0.3937440253.4130865153.76286> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  70: <P>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}}, [noconnect])
    in gen.erl line 167
  71: <P.1.1/gproc>: receives message ({'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}})
    in gen_server.erl line 381
  72: <P.1.1/gproc>: [{{{n,l,foo},n},<P.2>,the_value}] = ets:lookup(gproc, {{n,l,foo},n})
    in gproc.erl line 2072
  73: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}} = <P> ! {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}}
    in gen_server.erl line 243
  74: <P>: receives message ({#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}})
    in gen.erl line 169
  75: <P>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76286>, [flush])
    in gen.erl line 171
  76: <P>: true = erlang:exit(<P.2>, kill)
    in test.erl line 47
  77: <P.2>: exits abnormally (killed)
  78: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed} = erlang:send(<P>, {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    (while exiting)
  79: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed} = erlang:send(<P.1.1/gproc>, {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed})
    (while exiting)
  80: <P>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    in test.erl line 48
  81: <P>: exits normally
  82: <P>: true = erlang:exit(<P.1/gproc_sup>, normal)
    (while exiting)
  83: <P>: {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal} = erlang:send(<P.2>, {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal})
    (while exiting)
  84: <P.1/gproc_sup>: receives message ({'EXIT',<P>,normal})
    in gen_server.erl line 381
  85: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76307> = erlang:monitor(process, <P.1.4/gproc_pool>)
    in supervisor.erl line 978
  86: <P.1/gproc_sup>: true = erlang:unlink(<P.1.4/gproc_pool>)
    in supervisor.erl line 979
  87: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
  88: <P.1/gproc_sup>: true = erlang:exit(<P.1.4/gproc_pool>, shutdown)
    in supervisor.erl line 954
  89: <P.1.4/gproc_pool>: exits abnormally (shutdown)
  90: <P.1.4/gproc_pool>: {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    (while exiting)
  91: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    in supervisor.erl line 955
  92: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76331> = erlang:monitor(process, <P.1.3/gproc_bcast>)
    in supervisor.erl line 978
  93: <P.1/gproc_sup>: true = erlang:unlink(<P.1.3/gproc_bcast>)
    in supervisor.erl line 979
  94: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
  95: <P.1/gproc_sup>: true = erlang:exit(<P.1.3/gproc_bcast>, shutdown)
    in supervisor.erl line 954
  96: <P.1.3/gproc_bcast>: exits abnormally (shutdown)
  97: <P.1.3/gproc_bcast>: {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    (while exiting)
  98: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    in supervisor.erl line 955
  99: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76340> = erlang:monitor(process, <P.1.2/gproc_monitor>)
    in supervisor.erl line 978
 100: <P.1/gproc_sup>: true = erlang:unlink(<P.1.2/gproc_monitor>)
    in supervisor.erl line 979
 101: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 102: <P.1/gproc_sup>: true = erlang:exit(<P.1.2/gproc_monitor>, shutdown)
    in supervisor.erl line 954
 103: <P.1.2/gproc_monitor>: exits abnormally (shutdown)
 104: <P.1.2/gproc_monitor>: true = ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 105: <P.1.2/gproc_monitor>: {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    (while exiting)
 106: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    in supervisor.erl line 955
 107: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76351> = erlang:monitor(process, <P.1.1/gproc>)
    in supervisor.erl line 978
 108: <P.1/gproc_sup>: true = erlang:unlink(<P.1.1/gproc>)
    in supervisor.erl line 979
 109: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 110: <P.1/gproc_sup>: true = erlang:exit(<P.1.1/gproc>, shutdown)
    in supervisor.erl line 954
 111: <P.1.1/gproc>: exits abnormally (shutdown)
 112: <P.1.1/gproc>: {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    (while exiting)
 113: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    in supervisor.erl line 955
 114: <P.1/gproc_sup>: exits normally
 115: <P.1/gproc_sup>: true = ets:delete(gproc)
    (while exiting)
 116: <P.1/gproc_sup>: Exception badarg raised by: ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 117: <P.1/gproc_sup>: true = ets:delete(gproc_monitor)
    (while exiting)
 118: <P.1/gproc_sup>: true = erlang:exit(<P>, normal)
    (while exiting)
################################################################################
Interleaving #18
--------------------------------------------------------------------------------
Errors found:
* At step 77 process <P.2> exited abnormally
    Reason:
      killed
    Stacktrace:
      []
--------------------------------------------------------------------------------
Event trace:
   1: <P>: undefined = erlang:whereis(gproc_sup)
    in gen.erl line 299
   2: <P>: [] = erlang:process_info(<P>, registered_name)
    in proc_lib.erl line 731
   3: <P>: <P.1/gproc_sup> = erlang:spawn_opt({proc_lib,init_p,[<P>,[],gen,init_it,[gen_server,<P>,<P>,{local,gproc_sup},supervisor,{{local,gproc_sup},gproc_sup,[]},[]]],[link]})
    in erlang.erl line 2868
   4: <P.1/gproc_sup>: true = erlang:register(gproc_sup, <P.1/gproc_sup>)
    in gen.erl line 302
   5: <P.1/gproc_sup>: false = erlang:process_flag(trap_exit, true)
    in supervisor.erl line 293
   6: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   7: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
   8: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   9: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  10: <P.1/gproc_sup>: undefined = ets:info(gproc, name)
    in gproc.erl line 2488
  11: <P.1/gproc_sup>: gproc = ets:new(gproc, [ordered_set,public,named_table,{write_concurrency,true},{read_concurrency,true}])
    in gproc.erl line 2490
  12: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
  13: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  14: <P.1/gproc_sup>: undefined = erlang:whereis(gproc)
    in gen.erl line 299
  15: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  16: <P.1/gproc_sup>: <P.1.1/gproc> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc},gproc,[],[{spawn_opt,[]}]]],[link]})
    in erlang.erl line 2868
  17: <P.1.1/gproc>: true = erlang:register(gproc, <P.1.1/gproc>)
    in gen.erl line 302
  18: <P.1.1/gproc>: '$end_of_table' = ets:select(gproc, [{{{'$1',l}},[],['$1']}], 100)
    in gproc.erl line 2502
  19: <P.1.1/gproc>: {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}} = <P.1/gproc_sup> ! {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}}
    in proc_lib.erl line 392
  20: <P.1/gproc_sup>: receives message ({ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}})
    in proc_lib.erl line 348
  21: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  22: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  23: <P.1/gproc_sup>: undefined = ets:info(gproc_monitor, owner)
  24: <P.1/gproc_sup>: gproc_monitor = ets:new(gproc_monitor, [ordered_set,protected,named_table,{heir,<P.1/gproc_sup>,[]}])
  25: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  26: <P.1/gproc_sup>: <P.1.2/gproc_monitor> = erlang:spawn_link(proc_lib, init_p, [gproc_sup,[<P>],gproc_monitor,init,[<P.1/gproc_sup>]])
    in proc_lib.erl line 100
  27: <P.1.2/gproc_monitor>: normal = erlang:process_flag(priority, high)
    in gproc_monitor.erl line 123
  28: <P.1.2/gproc_monitor>: true = erlang:register(gproc_monitor, <P.1.2/gproc_monitor>)
    in gproc_monitor.erl line 124
  29: <P.1.2/gproc_monitor>: {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}} = <P.1/gproc_sup> ! {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}}
    in proc_lib.erl line 392
  30: <P.1/gproc_sup>: receives message ({ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}})
    in proc_lib.erl line 348
  31: <P.1/gproc_sup>: true = ets:give_away(gproc_monitor, <P.1.2/gproc_monitor>, [])
    in gproc_monitor.erl line 104
  32: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  33: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  34: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_bcast)
    in gen.erl line 299
  35: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  36: <P.1/gproc_sup>: <P.1.3/gproc_bcast> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_bcast},gproc_bcast,[],[]]],[link]})
    in erlang.erl line 2868
  37: <P.1.2/gproc_monitor>: receives message ({'ETS-TRANSFER',gproc_monitor,<P.1/gproc_sup>,[]})
    in gproc_monitor.erl line 126
  38: <P.1.3/gproc_bcast>: true = erlang:register(gproc_bcast, <P.1.3/gproc_bcast>)
    in gen.erl line 302
  39: <P.1.3/gproc_bcast>: {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}} = <P.1/gproc_sup> ! {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}}
    in proc_lib.erl line 392
  40: <P.1/gproc_sup>: receives message ({ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}})
    in proc_lib.erl line 348
  41: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  42: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  43: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_pool)
    in gen.erl line 299
  44: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  45: <P.1/gproc_sup>: <P.1.4/gproc_pool> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_pool},gproc_pool,[],[]]],[link]})
    in erlang.erl line 2868
  46: <P.1.4/gproc_pool>: true = erlang:register(gproc_pool, <P.1.4/gproc_pool>)
    in gen.erl line 302
  47: <P.1.4/gproc_pool>: {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}} = <P.1/gproc_sup> ! {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}}
    in proc_lib.erl line 392
  48: <P.1/gproc_sup>: receives message ({ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}})
    in proc_lib.erl line 348
  49: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  50: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  51: <P.1/gproc_sup>: {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}} = <P> ! {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}}
    in proc_lib.erl line 392
  52: <P>: receives message ({ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}})
    in proc_lib.erl line 348
  53: <P>: {<P.2>,#Ref<0.3937440253.4130865153.76259>} = erlang:spawn_opt({erlang,apply,[#Fun<test.8.122744875>,[]],[monitor]})
    in erlang.erl line 2731
  54: <P.2>: #Ref<0.3937440253.4130865153.76262> = erlang:monitor(process, <P>)
    in test.erl line 38
  55: <P.2>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  56: <P.2>: #Ref<0.3937440253.4130865153.76266> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  57: <P.2>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}}, [noconnect])
    in gen.erl line 167
  58: <P.1.1/gproc>: receives message ({'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}})
    in gen_server.erl line 381
  59: <P.1.1/gproc>: true = ets:insert_new(gproc, {{{n,l,foo},n},<P.2>,the_value})
    in gproc_lib.erl line 78
  60: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,{n,l,foo}},[]})
  61: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,l}})
    in gproc_lib.erl line 300
  62: <P.1.1/gproc>: #Ref<0.3937440253.4130865153.76276> = erlang:monitor(process, <P.2>)
    in gproc_lib.erl line 302
  63: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76266>,true} = <P.2> ! {#Ref<0.3937440253.4130865153.76266>,true}
    in gen_server.erl line 243
  64: <P.2>: receives message ({#Ref<0.3937440253.4130865153.76266>,true})
    in gen.erl line 169
  65: <P.2>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76266>, [flush])
    in gen.erl line 171
  66: <P.2>: {<P.2>,ok} = <P> ! {<P.2>,ok}
    in test.erl line 40
  67: <P>: receives message ({<P.2>,ok})
    in test.erl line 45
  68: <P>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  69: <P>: #Ref<0.3937440253.4130865153.76286> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  70: <P>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}}, [noconnect])
    in gen.erl line 167
  71: <P.1.1/gproc>: receives message ({'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}})
    in gen_server.erl line 381
  72: <P.1.1/gproc>: [{{{n,l,foo},n},<P.2>,the_value}] = ets:lookup(gproc, {{n,l,foo},n})
    in gproc.erl line 2072
  73: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}} = <P> ! {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}}
    in gen_server.erl line 243
  74: <P>: receives message ({#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}})
    in gen.erl line 169
  75: <P>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76286>, [flush])
    in gen.erl line 171
  76: <P>: true = erlang:exit(<P.2>, kill)
    in test.erl line 47
  77: <P.2>: exits abnormally (killed)
  78: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed} = erlang:send(<P>, {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    (while exiting)
  79: <P>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    in test.erl line 48
  80: <P>: exits normally
  81: <P>: true = erlang:exit(<P.1/gproc_sup>, normal)
    (while exiting)
  82: <P>: {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal} = erlang:send(<P.2>, {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal})
    (while exiting)
  83: <P.1/gproc_sup>: receives message ({'EXIT',<P>,normal})
    in gen_server.erl line 381
  84: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76307> = erlang:monitor(process, <P.1.4/gproc_pool>)
    in supervisor.erl line 978
  85: <P.1/gproc_sup>: true = erlang:unlink(<P.1.4/gproc_pool>)
    in supervisor.erl line 979
  86: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
  87: <P.1/gproc_sup>: true = erlang:exit(<P.1.4/gproc_pool>, shutdown)
    in supervisor.erl line 954
  88: <P.1.4/gproc_pool>: exits abnormally (shutdown)
  89: <P.1.4/gproc_pool>: {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    (while exiting)
  90: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    in supervisor.erl line 955
  91: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76331> = erlang:monitor(process, <P.1.3/gproc_bcast>)
    in supervisor.erl line 978
  92: <P.1/gproc_sup>: true = erlang:unlink(<P.1.3/gproc_bcast>)
    in supervisor.erl line 979
  93: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
  94: <P.1/gproc_sup>: true = erlang:exit(<P.1.3/gproc_bcast>, shutdown)
    in supervisor.erl line 954
  95: <P.1.3/gproc_bcast>: exits abnormally (shutdown)
  96: <P.1.3/gproc_bcast>: {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    (while exiting)
  97: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    in supervisor.erl line 955
  98: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76340> = erlang:monitor(process, <P.1.2/gproc_monitor>)
    in supervisor.erl line 978
  99: <P.1/gproc_sup>: true = erlang:unlink(<P.1.2/gproc_monitor>)
    in supervisor.erl line 979
 100: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 101: <P.1/gproc_sup>: true = erlang:exit(<P.1.2/gproc_monitor>, shutdown)
    in supervisor.erl line 954
 102: <P.1.2/gproc_monitor>: exits abnormally (shutdown)
 103: <P.1.2/gproc_monitor>: true = ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 104: <P.1.2/gproc_monitor>: {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    (while exiting)
 105: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    in supervisor.erl line 955
 106: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76351> = erlang:monitor(process, <P.1.1/gproc>)
    in supervisor.erl line 978
 107: <P.1/gproc_sup>: true = erlang:unlink(<P.1.1/gproc>)
    in supervisor.erl line 979
 108: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 109: <P.1/gproc_sup>: true = erlang:exit(<P.1.1/gproc>, shutdown)
    in supervisor.erl line 954
 110: <P.1.1/gproc>: exits abnormally (shutdown)
 111: <P.1.1/gproc>: {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    (while exiting)
 112: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed} = erlang:send(<P.1.1/gproc>, {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed})
    (while exiting)
 113: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    in supervisor.erl line 955
 114: <P.1/gproc_sup>: exits normally
 115: <P.1/gproc_sup>: true = ets:delete(gproc)
    (while exiting)
 116: <P.1/gproc_sup>: Exception badarg raised by: ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 117: <P.1/gproc_sup>: true = ets:delete(gproc_monitor)
    (while exiting)
 118: <P.1/gproc_sup>: true = erlang:exit(<P>, normal)
    (while exiting)
################################################################################
Interleaving #19
--------------------------------------------------------------------------------
Errors found:
* At step 76 process <P.2> exited abnormally
    Reason:
      killed
    Stacktrace:
      []
--------------------------------------------------------------------------------
Event trace:
   1: <P>: undefined = erlang:whereis(gproc_sup)
    in gen.erl line 299
   2: <P>: [] = erlang:process_info(<P>, registered_name)
    in proc_lib.erl line 731
   3: <P>: <P.1/gproc_sup> = erlang:spawn_opt({proc_lib,init_p,[<P>,[],gen,init_it,[gen_server,<P>,<P>,{local,gproc_sup},supervisor,{{local,gproc_sup},gproc_sup,[]},[]]],[link]})
    in erlang.erl line 2868
   4: <P.1/gproc_sup>: true = erlang:register(gproc_sup, <P.1/gproc_sup>)
    in gen.erl line 302
   5: <P.1/gproc_sup>: false = erlang:process_flag(trap_exit, true)
    in supervisor.erl line 293
   6: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   7: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
   8: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   9: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  10: <P.1/gproc_sup>: undefined = ets:info(gproc, name)
    in gproc.erl line 2488
  11: <P.1/gproc_sup>: gproc = ets:new(gproc, [ordered_set,public,named_table,{write_concurrency,true},{read_concurrency,true}])
    in gproc.erl line 2490
  12: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
  13: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  14: <P.1/gproc_sup>: undefined = erlang:whereis(gproc)
    in gen.erl line 299
  15: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  16: <P.1/gproc_sup>: <P.1.1/gproc> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc},gproc,[],[{spawn_opt,[]}]]],[link]})
    in erlang.erl line 2868
  17: <P.1.1/gproc>: true = erlang:register(gproc, <P.1.1/gproc>)
    in gen.erl line 302
  18: <P.1.1/gproc>: '$end_of_table' = ets:select(gproc, [{{{'$1',l}},[],['$1']}], 100)
    in gproc.erl line 2502
  19: <P.1.1/gproc>: {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}} = <P.1/gproc_sup> ! {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}}
    in proc_lib.erl line 392
  20: <P.1/gproc_sup>: receives message ({ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}})
    in proc_lib.erl line 348
  21: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  22: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  23: <P.1/gproc_sup>: undefined = ets:info(gproc_monitor, owner)
  24: <P.1/gproc_sup>: gproc_monitor = ets:new(gproc_monitor, [ordered_set,protected,named_table,{heir,<P.1/gproc_sup>,[]}])
  25: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  26: <P.1/gproc_sup>: <P.1.2/gproc_monitor> = erlang:spawn_link(proc_lib, init_p, [gproc_sup,[<P>],gproc_monitor,init,[<P.1/gproc_sup>]])
    in proc_lib.erl line 100
  27: <P.1.2/gproc_monitor>: normal = erlang:process_flag(priority, high)
    in gproc_monitor.erl line 123
  28: <P.1.2/gproc_monitor>: true = erlang:register(gproc_monitor, <P.1.2/gproc_monitor>)
    in gproc_monitor.erl line 124
  29: <P.1.2/gproc_monitor>: {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}} = <P.1/gproc_sup> ! {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}}
    in proc_lib.erl line 392
  30: <P.1/gproc_sup>: receives message ({ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}})
    in proc_lib.erl line 348
  31: <P.1/gproc_sup>: true = ets:give_away(gproc_monitor, <P.1.2/gproc_monitor>, [])
    in gproc_monitor.erl line 104
  32: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  33: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  34: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_bcast)
    in gen.erl line 299
  35: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  36: <P.1/gproc_sup>: <P.1.3/gproc_bcast> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_bcast},gproc_bcast,[],[]]],[link]})
    in erlang.erl line 2868
  37: <P.1.3/gproc_bcast>: true = erlang:register(gproc_bcast, <P.1.3/gproc_bcast>)
    in gen.erl line 302
  38: <P.1.3/gproc_bcast>: {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}} = <P.1/gproc_sup> ! {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}}
    in proc_lib.erl line 392
  39: <P.1/gproc_sup>: receives message ({ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}})
    in proc_lib.erl line 348
  40: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  41: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  42: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_pool)
    in gen.erl line 299
  43: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  44: <P.1/gproc_sup>: <P.1.4/gproc_pool> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_pool},gproc_pool,[],[]]],[link]})
    in erlang.erl line 2868
  45: <P.1.4/gproc_pool>: true = erlang:register(gproc_pool, <P.1.4/gproc_pool>)
    in gen.erl line 302
  46: <P.1.4/gproc_pool>: {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}} = <P.1/gproc_sup> ! {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}}
    in proc_lib.erl line 392
  47: <P.1/gproc_sup>: receives message ({ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}})
    in proc_lib.erl line 348
  48: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  49: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  50: <P.1/gproc_sup>: {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}} = <P> ! {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}}
    in proc_lib.erl line 392
  51: <P>: receives message ({ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}})
    in proc_lib.erl line 348
  52: <P>: {<P.2>,#Ref<0.3937440253.4130865153.76259>} = erlang:spawn_opt({erlang,apply,[#Fun<test.8.122744875>,[]],[monitor]})
    in erlang.erl line 2731
  53: <P.2>: #Ref<0.3937440253.4130865153.76262> = erlang:monitor(process, <P>)
    in test.erl line 38
  54: <P.2>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  55: <P.2>: #Ref<0.3937440253.4130865153.76266> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  56: <P.2>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}}, [noconnect])
    in gen.erl line 167
  57: <P.1.1/gproc>: receives message ({'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}})
    in gen_server.erl line 381
  58: <P.1.1/gproc>: true = ets:insert_new(gproc, {{{n,l,foo},n},<P.2>,the_value})
    in gproc_lib.erl line 78
  59: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,{n,l,foo}},[]})
  60: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,l}})
    in gproc_lib.erl line 300
  61: <P.1.1/gproc>: #Ref<0.3937440253.4130865153.76276> = erlang:monitor(process, <P.2>)
    in gproc_lib.erl line 302
  62: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76266>,true} = <P.2> ! {#Ref<0.3937440253.4130865153.76266>,true}
    in gen_server.erl line 243
  63: <P.2>: receives message ({#Ref<0.3937440253.4130865153.76266>,true})
    in gen.erl line 169
  64: <P.2>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76266>, [flush])
    in gen.erl line 171
  65: <P.2>: {<P.2>,ok} = <P> ! {<P.2>,ok}
    in test.erl line 40
  66: <P>: receives message ({<P.2>,ok})
    in test.erl line 45
  67: <P>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  68: <P>: #Ref<0.3937440253.4130865153.76286> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  69: <P>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}}, [noconnect])
    in gen.erl line 167
  70: <P.1.1/gproc>: receives message ({'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}})
    in gen_server.erl line 381
  71: <P.1.1/gproc>: [{{{n,l,foo},n},<P.2>,the_value}] = ets:lookup(gproc, {{n,l,foo},n})
    in gproc.erl line 2072
  72: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}} = <P> ! {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}}
    in gen_server.erl line 243
  73: <P>: receives message ({#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}})
    in gen.erl line 169
  74: <P>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76286>, [flush])
    in gen.erl line 171
  75: <P>: true = erlang:exit(<P.2>, kill)
    in test.erl line 47
  76: <P.2>: exits abnormally (killed)
  77: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed} = erlang:send(<P>, {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    (while exiting)
  78: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed} = erlang:send(<P.1.1/gproc>, {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed})
    (while exiting)
  79: <P>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    in test.erl line 48
  80: <P>: exits normally
  81: <P>: true = erlang:exit(<P.1/gproc_sup>, normal)
    (while exiting)
  82: <P>: {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal} = erlang:send(<P.2>, {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal})
    (while exiting)
  83: <P.1/gproc_sup>: receives message ({'EXIT',<P>,normal})
    in gen_server.erl line 381
  84: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76307> = erlang:monitor(process, <P.1.4/gproc_pool>)
    in supervisor.erl line 978
  85: <P.1/gproc_sup>: true = erlang:unlink(<P.1.4/gproc_pool>)
    in supervisor.erl line 979
  86: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
  87: <P.1/gproc_sup>: true = erlang:exit(<P.1.4/gproc_pool>, shutdown)
    in supervisor.erl line 954
  88: <P.1.1/gproc>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed})
    in gen_server.erl line 381
  89: <P.1.1/gproc>: true = ets:member(gproc, {<P.2>,l})
    in gproc.erl line 2313
  90: <P.1.1/gproc>: [{{n,l,foo},[]}] = ets:select(gproc, [{{{<P.2>,'$1'},'$2'},[{'==',{element,2,'$1'},l}],[{{'$1','$2'}}]}])
    in gproc.erl line 2317
  91: <P.1.1/gproc>: [{{{n,l,foo},n},<P.2>,the_value}] = ets:lookup(gproc, {{n,l,foo},n})
    in gproc.erl line 2323
  92: <P.1.1/gproc>: true = ets:delete(gproc, {{n,l,foo},n})
    in gproc.erl line 2325
  93: <P.1.1/gproc>: 1 = ets:select_delete(gproc, [{{{<P.2>,{'_',l,'_'}},'_'},[],[true]}])
    in gproc.erl line 2372
  94: <P.1.1/gproc>: true = ets:delete(gproc, {<P.2>,l})
    in gproc.erl line 2373
  95: <P.1.4/gproc_pool>: exits abnormally (shutdown)
  96: <P.1.4/gproc_pool>: {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    (while exiting)
  97: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    in supervisor.erl line 955
  98: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76331> = erlang:monitor(process, <P.1.3/gproc_bcast>)
    in supervisor.erl line 978
  99: <P.1/gproc_sup>: true = erlang:unlink(<P.1.3/gproc_bcast>)
    in supervisor.erl line 979
 100: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 101: <P.1/gproc_sup>: true = erlang:exit(<P.1.3/gproc_bcast>, shutdown)
    in supervisor.erl line 954
 102: <P.1.3/gproc_bcast>: exits abnormally (shutdown)
 103: <P.1.3/gproc_bcast>: {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    (while exiting)
 104: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    in supervisor.erl line 955
 105: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76340> = erlang:monitor(process, <P.1.2/gproc_monitor>)
    in supervisor.erl line 978
 106: <P.1/gproc_sup>: true = erlang:unlink(<P.1.2/gproc_monitor>)
    in supervisor.erl line 979
 107: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 108: <P.1/gproc_sup>: true = erlang:exit(<P.1.2/gproc_monitor>, shutdown)
    in supervisor.erl line 954
 109: <P.1.2/gproc_monitor>: exits abnormally (shutdown)
 110: <P.1.2/gproc_monitor>: true = ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 111: <P.1.2/gproc_monitor>: {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    (while exiting)
 112: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    in supervisor.erl line 955
 113: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76351> = erlang:monitor(process, <P.1.1/gproc>)
    in supervisor.erl line 978
 114: <P.1/gproc_sup>: true = erlang:unlink(<P.1.1/gproc>)
    in supervisor.erl line 979
 115: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 116: <P.1/gproc_sup>: true = erlang:exit(<P.1.1/gproc>, shutdown)
    in supervisor.erl line 954
 117: <P.1.1/gproc>: exits abnormally (shutdown)
 118: <P.1.1/gproc>: {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    (while exiting)
 119: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    in supervisor.erl line 955
 120: <P.1/gproc_sup>: exits normally
 121: <P.1/gproc_sup>: true = ets:delete(gproc)
    (while exiting)
 122: <P.1/gproc_sup>: Exception badarg raised by: ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 123: <P.1/gproc_sup>: true = ets:delete(gproc_monitor)
    (while exiting)
 124: <P.1/gproc_sup>: true = erlang:exit(<P>, normal)
    (while exiting)
################################################################################
Interleaving #20
--------------------------------------------------------------------------------
Errors found:
* At step 76 process <P.2> exited abnormally
    Reason:
      killed
    Stacktrace:
      []
--------------------------------------------------------------------------------
Event trace:
   1: <P>: undefined = erlang:whereis(gproc_sup)
    in gen.erl line 299
   2: <P>: [] = erlang:process_info(<P>, registered_name)
    in proc_lib.erl line 731
   3: <P>: <P.1/gproc_sup> = erlang:spawn_opt({proc_lib,init_p,[<P>,[],gen,init_it,[gen_server,<P>,<P>,{local,gproc_sup},supervisor,{{local,gproc_sup},gproc_sup,[]},[]]],[link]})
    in erlang.erl line 2868
   4: <P.1/gproc_sup>: true = erlang:register(gproc_sup, <P.1/gproc_sup>)
    in gen.erl line 302
   5: <P.1/gproc_sup>: false = erlang:process_flag(trap_exit, true)
    in supervisor.erl line 293
   6: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   7: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
   8: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   9: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  10: <P.1/gproc_sup>: undefined = ets:info(gproc, name)
    in gproc.erl line 2488
  11: <P.1/gproc_sup>: gproc = ets:new(gproc, [ordered_set,public,named_table,{write_concurrency,true},{read_concurrency,true}])
    in gproc.erl line 2490
  12: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
  13: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  14: <P.1/gproc_sup>: undefined = erlang:whereis(gproc)
    in gen.erl line 299
  15: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  16: <P.1/gproc_sup>: <P.1.1/gproc> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc},gproc,[],[{spawn_opt,[]}]]],[link]})
    in erlang.erl line 2868
  17: <P.1.1/gproc>: true = erlang:register(gproc, <P.1.1/gproc>)
    in gen.erl line 302
  18: <P.1.1/gproc>: '$end_of_table' = ets:select(gproc, [{{{'$1',l}},[],['$1']}], 100)
    in gproc.erl line 2502
  19: <P.1.1/gproc>: {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}} = <P.1/gproc_sup> ! {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}}
    in proc_lib.erl line 392
  20: <P.1/gproc_sup>: receives message ({ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}})
    in proc_lib.erl line 348
  21: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  22: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  23: <P.1/gproc_sup>: undefined = ets:info(gproc_monitor, owner)
  24: <P.1/gproc_sup>: gproc_monitor = ets:new(gproc_monitor, [ordered_set,protected,named_table,{heir,<P.1/gproc_sup>,[]}])
  25: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  26: <P.1/gproc_sup>: <P.1.2/gproc_monitor> = erlang:spawn_link(proc_lib, init_p, [gproc_sup,[<P>],gproc_monitor,init,[<P.1/gproc_sup>]])
    in proc_lib.erl line 100
  27: <P.1.2/gproc_monitor>: normal = erlang:process_flag(priority, high)
    in gproc_monitor.erl line 123
  28: <P.1.2/gproc_monitor>: true = erlang:register(gproc_monitor, <P.1.2/gproc_monitor>)
    in gproc_monitor.erl line 124
  29: <P.1.2/gproc_monitor>: {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}} = <P.1/gproc_sup> ! {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}}
    in proc_lib.erl line 392
  30: <P.1/gproc_sup>: receives message ({ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}})
    in proc_lib.erl line 348
  31: <P.1/gproc_sup>: true = ets:give_away(gproc_monitor, <P.1.2/gproc_monitor>, [])
    in gproc_monitor.erl line 104
  32: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  33: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  34: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_bcast)
    in gen.erl line 299
  35: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  36: <P.1/gproc_sup>: <P.1.3/gproc_bcast> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_bcast},gproc_bcast,[],[]]],[link]})
    in erlang.erl line 2868
  37: <P.1.3/gproc_bcast>: true = erlang:register(gproc_bcast, <P.1.3/gproc_bcast>)
    in gen.erl line 302
  38: <P.1.3/gproc_bcast>: {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}} = <P.1/gproc_sup> ! {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}}
    in proc_lib.erl line 392
  39: <P.1/gproc_sup>: receives message ({ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}})
    in proc_lib.erl line 348
  40: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  41: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  42: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_pool)
    in gen.erl line 299
  43: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  44: <P.1/gproc_sup>: <P.1.4/gproc_pool> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_pool},gproc_pool,[],[]]],[link]})
    in erlang.erl line 2868
  45: <P.1.4/gproc_pool>: true = erlang:register(gproc_pool, <P.1.4/gproc_pool>)
    in gen.erl line 302
  46: <P.1.4/gproc_pool>: {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}} = <P.1/gproc_sup> ! {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}}
    in proc_lib.erl line 392
  47: <P.1/gproc_sup>: receives message ({ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}})
    in proc_lib.erl line 348
  48: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  49: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  50: <P.1/gproc_sup>: {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}} = <P> ! {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}}
    in proc_lib.erl line 392
  51: <P>: receives message ({ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}})
    in proc_lib.erl line 348
  52: <P>: {<P.2>,#Ref<0.3937440253.4130865153.76259>} = erlang:spawn_opt({erlang,apply,[#Fun<test.8.122744875>,[]],[monitor]})
    in erlang.erl line 2731
  53: <P.2>: #Ref<0.3937440253.4130865153.76262> = erlang:monitor(process, <P>)
    in test.erl line 38
  54: <P.2>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  55: <P.2>: #Ref<0.3937440253.4130865153.76266> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  56: <P.2>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}}, [noconnect])
    in gen.erl line 167
  57: <P.1.1/gproc>: receives message ({'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}})
    in gen_server.erl line 381
  58: <P.1.1/gproc>: true = ets:insert_new(gproc, {{{n,l,foo},n},<P.2>,the_value})
    in gproc_lib.erl line 78
  59: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,{n,l,foo}},[]})
  60: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,l}})
    in gproc_lib.erl line 300
  61: <P.1.1/gproc>: #Ref<0.3937440253.4130865153.76276> = erlang:monitor(process, <P.2>)
    in gproc_lib.erl line 302
  62: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76266>,true} = <P.2> ! {#Ref<0.3937440253.4130865153.76266>,true}
    in gen_server.erl line 243
  63: <P.2>: receives message ({#Ref<0.3937440253.4130865153.76266>,true})
    in gen.erl line 169
  64: <P.2>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76266>, [flush])
    in gen.erl line 171
  65: <P.2>: {<P.2>,ok} = <P> ! {<P.2>,ok}
    in test.erl line 40
  66: <P>: receives message ({<P.2>,ok})
    in test.erl line 45
  67: <P>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  68: <P>: #Ref<0.3937440253.4130865153.76286> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  69: <P>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}}, [noconnect])
    in gen.erl line 167
  70: <P.1.1/gproc>: receives message ({'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}})
    in gen_server.erl line 381
  71: <P.1.1/gproc>: [{{{n,l,foo},n},<P.2>,the_value}] = ets:lookup(gproc, {{n,l,foo},n})
    in gproc.erl line 2072
  72: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}} = <P> ! {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}}
    in gen_server.erl line 243
  73: <P>: receives message ({#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}})
    in gen.erl line 169
  74: <P>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76286>, [flush])
    in gen.erl line 171
  75: <P>: true = erlang:exit(<P.2>, kill)
    in test.erl line 47
  76: <P.2>: exits abnormally (killed)
  77: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed} = erlang:send(<P>, {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    (while exiting)
  78: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed} = erlang:send(<P.1.1/gproc>, {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed})
    (while exiting)
  79: <P>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    in test.erl line 48
  80: <P>: exits normally
  81: <P>: true = erlang:exit(<P.1/gproc_sup>, normal)
    (while exiting)
  82: <P>: {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal} = erlang:send(<P.2>, {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal})
    (while exiting)
  83: <P.1/gproc_sup>: receives message ({'EXIT',<P>,normal})
    in gen_server.erl line 381
  84: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76307> = erlang:monitor(process, <P.1.4/gproc_pool>)
    in supervisor.erl line 978
  85: <P.1/gproc_sup>: true = erlang:unlink(<P.1.4/gproc_pool>)
    in supervisor.erl line 979
  86: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
  87: <P.1/gproc_sup>: true = erlang:exit(<P.1.4/gproc_pool>, shutdown)
    in supervisor.erl line 954
  88: <P.1.1/gproc>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed})
    in gen_server.erl line 381
  89: <P.1.1/gproc>: true = ets:member(gproc, {<P.2>,l})
    in gproc.erl line 2313
  90: <P.1.1/gproc>: [{{n,l,foo},[]}] = ets:select(gproc, [{{{<P.2>,'$1'},'$2'},[{'==',{element,2,'$1'},l}],[{{'$1','$2'}}]}])
    in gproc.erl line 2317
  91: <P.1.1/gproc>: [{{{n,l,foo},n},<P.2>,the_value}] = ets:lookup(gproc, {{n,l,foo},n})
    in gproc.erl line 2323
  92: <P.1.1/gproc>: true = ets:delete(gproc, {{n,l,foo},n})
    in gproc.erl line 2325
  93: <P.1.1/gproc>: 1 = ets:select_delete(gproc, [{{{<P.2>,{'_',l,'_'}},'_'},[],[true]}])
    in gproc.erl line 2372
  94: <P.1.4/gproc_pool>: exits abnormally (shutdown)
  95: <P.1.4/gproc_pool>: {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    (while exiting)
  96: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    in supervisor.erl line 955
  97: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76331> = erlang:monitor(process, <P.1.3/gproc_bcast>)
    in supervisor.erl line 978
  98: <P.1/gproc_sup>: true = erlang:unlink(<P.1.3/gproc_bcast>)
    in supervisor.erl line 979
  99: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 100: <P.1/gproc_sup>: true = erlang:exit(<P.1.3/gproc_bcast>, shutdown)
    in supervisor.erl line 954
 101: <P.1.3/gproc_bcast>: exits abnormally (shutdown)
 102: <P.1.3/gproc_bcast>: {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    (while exiting)
 103: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    in supervisor.erl line 955
 104: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76340> = erlang:monitor(process, <P.1.2/gproc_monitor>)
    in supervisor.erl line 978
 105: <P.1/gproc_sup>: true = erlang:unlink(<P.1.2/gproc_monitor>)
    in supervisor.erl line 979
 106: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 107: <P.1/gproc_sup>: true = erlang:exit(<P.1.2/gproc_monitor>, shutdown)
    in supervisor.erl line 954
 108: <P.1.2/gproc_monitor>: exits abnormally (shutdown)
 109: <P.1.2/gproc_monitor>: true = ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 110: <P.1.2/gproc_monitor>: {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    (while exiting)
 111: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    in supervisor.erl line 955
 112: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76351> = erlang:monitor(process, <P.1.1/gproc>)
    in supervisor.erl line 978
 113: <P.1/gproc_sup>: true = erlang:unlink(<P.1.1/gproc>)
    in supervisor.erl line 979
 114: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 115: <P.1/gproc_sup>: true = erlang:exit(<P.1.1/gproc>, shutdown)
    in supervisor.erl line 954
 116: <P.1.1/gproc>: exits abnormally (shutdown)
 117: <P.1.1/gproc>: {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    (while exiting)
 118: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    in supervisor.erl line 955
 119: <P.1/gproc_sup>: exits normally
 120: <P.1/gproc_sup>: true = ets:delete(gproc)
    (while exiting)
 121: <P.1/gproc_sup>: Exception badarg raised by: ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 122: <P.1/gproc_sup>: true = ets:delete(gproc_monitor)
    (while exiting)
 123: <P.1/gproc_sup>: true = erlang:exit(<P>, normal)
    (while exiting)
################################################################################
Interleaving #21
--------------------------------------------------------------------------------
Errors found:
* At step 76 process <P.2> exited abnormally
    Reason:
      killed
    Stacktrace:
      []
--------------------------------------------------------------------------------
Event trace:
   1: <P>: undefined = erlang:whereis(gproc_sup)
    in gen.erl line 299
   2: <P>: [] = erlang:process_info(<P>, registered_name)
    in proc_lib.erl line 731
   3: <P>: <P.1/gproc_sup> = erlang:spawn_opt({proc_lib,init_p,[<P>,[],gen,init_it,[gen_server,<P>,<P>,{local,gproc_sup},supervisor,{{local,gproc_sup},gproc_sup,[]},[]]],[link]})
    in erlang.erl line 2868
   4: <P.1/gproc_sup>: true = erlang:register(gproc_sup, <P.1/gproc_sup>)
    in gen.erl line 302
   5: <P.1/gproc_sup>: false = erlang:process_flag(trap_exit, true)
    in supervisor.erl line 293
   6: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   7: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
   8: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   9: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  10: <P.1/gproc_sup>: undefined = ets:info(gproc, name)
    in gproc.erl line 2488
  11: <P.1/gproc_sup>: gproc = ets:new(gproc, [ordered_set,public,named_table,{write_concurrency,true},{read_concurrency,true}])
    in gproc.erl line 2490
  12: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
  13: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  14: <P.1/gproc_sup>: undefined = erlang:whereis(gproc)
    in gen.erl line 299
  15: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  16: <P.1/gproc_sup>: <P.1.1/gproc> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc},gproc,[],[{spawn_opt,[]}]]],[link]})
    in erlang.erl line 2868
  17: <P.1.1/gproc>: true = erlang:register(gproc, <P.1.1/gproc>)
    in gen.erl line 302
  18: <P.1.1/gproc>: '$end_of_table' = ets:select(gproc, [{{{'$1',l}},[],['$1']}], 100)
    in gproc.erl line 2502
  19: <P.1.1/gproc>: {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}} = <P.1/gproc_sup> ! {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}}
    in proc_lib.erl line 392
  20: <P.1/gproc_sup>: receives message ({ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}})
    in proc_lib.erl line 348
  21: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  22: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  23: <P.1/gproc_sup>: undefined = ets:info(gproc_monitor, owner)
  24: <P.1/gproc_sup>: gproc_monitor = ets:new(gproc_monitor, [ordered_set,protected,named_table,{heir,<P.1/gproc_sup>,[]}])
  25: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  26: <P.1/gproc_sup>: <P.1.2/gproc_monitor> = erlang:spawn_link(proc_lib, init_p, [gproc_sup,[<P>],gproc_monitor,init,[<P.1/gproc_sup>]])
    in proc_lib.erl line 100
  27: <P.1.2/gproc_monitor>: normal = erlang:process_flag(priority, high)
    in gproc_monitor.erl line 123
  28: <P.1.2/gproc_monitor>: true = erlang:register(gproc_monitor, <P.1.2/gproc_monitor>)
    in gproc_monitor.erl line 124
  29: <P.1.2/gproc_monitor>: {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}} = <P.1/gproc_sup> ! {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}}
    in proc_lib.erl line 392
  30: <P.1/gproc_sup>: receives message ({ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}})
    in proc_lib.erl line 348
  31: <P.1/gproc_sup>: true = ets:give_away(gproc_monitor, <P.1.2/gproc_monitor>, [])
    in gproc_monitor.erl line 104
  32: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  33: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  34: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_bcast)
    in gen.erl line 299
  35: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  36: <P.1/gproc_sup>: <P.1.3/gproc_bcast> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_bcast},gproc_bcast,[],[]]],[link]})
    in erlang.erl line 2868
  37: <P.1.3/gproc_bcast>: true = erlang:register(gproc_bcast, <P.1.3/gproc_bcast>)
    in gen.erl line 302
  38: <P.1.3/gproc_bcast>: {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}} = <P.1/gproc_sup> ! {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}}
    in proc_lib.erl line 392
  39: <P.1/gproc_sup>: receives message ({ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}})
    in proc_lib.erl line 348
  40: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  41: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  42: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_pool)
    in gen.erl line 299
  43: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  44: <P.1/gproc_sup>: <P.1.4/gproc_pool> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_pool},gproc_pool,[],[]]],[link]})
    in erlang.erl line 2868
  45: <P.1.4/gproc_pool>: true = erlang:register(gproc_pool, <P.1.4/gproc_pool>)
    in gen.erl line 302
  46: <P.1.4/gproc_pool>: {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}} = <P.1/gproc_sup> ! {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}}
    in proc_lib.erl line 392
  47: <P.1/gproc_sup>: receives message ({ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}})
    in proc_lib.erl line 348
  48: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  49: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  50: <P.1/gproc_sup>: {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}} = <P> ! {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}}
    in proc_lib.erl line 392
  51: <P>: receives message ({ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}})
    in proc_lib.erl line 348
  52: <P>: {<P.2>,#Ref<0.3937440253.4130865153.76259>} = erlang:spawn_opt({erlang,apply,[#Fun<test.8.122744875>,[]],[monitor]})
    in erlang.erl line 2731
  53: <P.2>: #Ref<0.3937440253.4130865153.76262> = erlang:monitor(process, <P>)
    in test.erl line 38
  54: <P.2>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  55: <P.2>: #Ref<0.3937440253.4130865153.76266> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  56: <P.2>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}}, [noconnect])
    in gen.erl line 167
  57: <P.1.1/gproc>: receives message ({'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}})
    in gen_server.erl line 381
  58: <P.1.1/gproc>: true = ets:insert_new(gproc, {{{n,l,foo},n},<P.2>,the_value})
    in gproc_lib.erl line 78
  59: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,{n,l,foo}},[]})
  60: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,l}})
    in gproc_lib.erl line 300
  61: <P.1.1/gproc>: #Ref<0.3937440253.4130865153.76276> = erlang:monitor(process, <P.2>)
    in gproc_lib.erl line 302
  62: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76266>,true} = <P.2> ! {#Ref<0.3937440253.4130865153.76266>,true}
    in gen_server.erl line 243
  63: <P.2>: receives message ({#Ref<0.3937440253.4130865153.76266>,true})
    in gen.erl line 169
  64: <P.2>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76266>, [flush])
    in gen.erl line 171
  65: <P.2>: {<P.2>,ok} = <P> ! {<P.2>,ok}
    in test.erl line 40
  66: <P>: receives message ({<P.2>,ok})
    in test.erl line 45
  67: <P>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  68: <P>: #Ref<0.3937440253.4130865153.76286> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  69: <P>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}}, [noconnect])
    in gen.erl line 167
  70: <P.1.1/gproc>: receives message ({'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}})
    in gen_server.erl line 381
  71: <P.1.1/gproc>: [{{{n,l,foo},n},<P.2>,the_value}] = ets:lookup(gproc, {{n,l,foo},n})
    in gproc.erl line 2072
  72: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}} = <P> ! {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}}
    in gen_server.erl line 243
  73: <P>: receives message ({#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}})
    in gen.erl line 169
  74: <P>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76286>, [flush])
    in gen.erl line 171
  75: <P>: true = erlang:exit(<P.2>, kill)
    in test.erl line 47
  76: <P.2>: exits abnormally (killed)
  77: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed} = erlang:send(<P>, {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    (while exiting)
  78: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed} = erlang:send(<P.1.1/gproc>, {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed})
    (while exiting)
  79: <P>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    in test.erl line 48
  80: <P>: exits normally
  81: <P>: true = erlang:exit(<P.1/gproc_sup>, normal)
    (while exiting)
  82: <P>: {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal} = erlang:send(<P.2>, {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal})
    (while exiting)
  83: <P.1/gproc_sup>: receives message ({'EXIT',<P>,normal})
    in gen_server.erl line 381
  84: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76307> = erlang:monitor(process, <P.1.4/gproc_pool>)
    in supervisor.erl line 978
  85: <P.1/gproc_sup>: true = erlang:unlink(<P.1.4/gproc_pool>)
    in supervisor.erl line 979
  86: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
  87: <P.1/gproc_sup>: true = erlang:exit(<P.1.4/gproc_pool>, shutdown)
    in supervisor.erl line 954
  88: <P.1.1/gproc>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed})
    in gen_server.erl line 381
  89: <P.1.1/gproc>: true = ets:member(gproc, {<P.2>,l})
    in gproc.erl line 2313
  90: <P.1.1/gproc>: [{{n,l,foo},[]}] = ets:select(gproc, [{{{<P.2>,'$1'},'$2'},[{'==',{element,2,'$1'},l}],[{{'$1','$2'}}]}])
    in gproc.erl line 2317
  91: <P.1.1/gproc>: [{{{n,l,foo},n},<P.2>,the_value}] = ets:lookup(gproc, {{n,l,foo},n})
    in gproc.erl line 2323
  92: <P.1.1/gproc>: true = ets:delete(gproc, {{n,l,foo},n})
    in gproc.erl line 2325
  93: <P.1.4/gproc_pool>: exits abnormally (shutdown)
  94: <P.1.4/gproc_pool>: {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    (while exiting)
  95: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    in supervisor.erl line 955
  96: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76331> = erlang:monitor(process, <P.1.3/gproc_bcast>)
    in supervisor.erl line 978
  97: <P.1/gproc_sup>: true = erlang:unlink(<P.1.3/gproc_bcast>)
    in supervisor.erl line 979
  98: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
  99: <P.1/gproc_sup>: true = erlang:exit(<P.1.3/gproc_bcast>, shutdown)
    in supervisor.erl line 954
 100: <P.1.3/gproc_bcast>: exits abnormally (shutdown)
 101: <P.1.3/gproc_bcast>: {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    (while exiting)
 102: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    in supervisor.erl line 955
 103: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76340> = erlang:monitor(process, <P.1.2/gproc_monitor>)
    in supervisor.erl line 978
 104: <P.1/gproc_sup>: true = erlang:unlink(<P.1.2/gproc_monitor>)
    in supervisor.erl line 979
 105: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 106: <P.1/gproc_sup>: true = erlang:exit(<P.1.2/gproc_monitor>, shutdown)
    in supervisor.erl line 954
 107: <P.1.2/gproc_monitor>: exits abnormally (shutdown)
 108: <P.1.2/gproc_monitor>: true = ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 109: <P.1.2/gproc_monitor>: {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    (while exiting)
 110: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    in supervisor.erl line 955
 111: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76351> = erlang:monitor(process, <P.1.1/gproc>)
    in supervisor.erl line 978
 112: <P.1/gproc_sup>: true = erlang:unlink(<P.1.1/gproc>)
    in supervisor.erl line 979
 113: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 114: <P.1/gproc_sup>: true = erlang:exit(<P.1.1/gproc>, shutdown)
    in supervisor.erl line 954
 115: <P.1.1/gproc>: exits abnormally (shutdown)
 116: <P.1.1/gproc>: {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    (while exiting)
 117: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    in supervisor.erl line 955
 118: <P.1/gproc_sup>: exits normally
 119: <P.1/gproc_sup>: true = ets:delete(gproc)
    (while exiting)
 120: <P.1/gproc_sup>: Exception badarg raised by: ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 121: <P.1/gproc_sup>: true = ets:delete(gproc_monitor)
    (while exiting)
 122: <P.1/gproc_sup>: true = erlang:exit(<P>, normal)
    (while exiting)
################################################################################
Interleaving #22
--------------------------------------------------------------------------------
Errors found:
* At step 76 process <P.2> exited abnormally
    Reason:
      killed
    Stacktrace:
      []
--------------------------------------------------------------------------------
Event trace:
   1: <P>: undefined = erlang:whereis(gproc_sup)
    in gen.erl line 299
   2: <P>: [] = erlang:process_info(<P>, registered_name)
    in proc_lib.erl line 731
   3: <P>: <P.1/gproc_sup> = erlang:spawn_opt({proc_lib,init_p,[<P>,[],gen,init_it,[gen_server,<P>,<P>,{local,gproc_sup},supervisor,{{local,gproc_sup},gproc_sup,[]},[]]],[link]})
    in erlang.erl line 2868
   4: <P.1/gproc_sup>: true = erlang:register(gproc_sup, <P.1/gproc_sup>)
    in gen.erl line 302
   5: <P.1/gproc_sup>: false = erlang:process_flag(trap_exit, true)
    in supervisor.erl line 293
   6: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   7: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
   8: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   9: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  10: <P.1/gproc_sup>: undefined = ets:info(gproc, name)
    in gproc.erl line 2488
  11: <P.1/gproc_sup>: gproc = ets:new(gproc, [ordered_set,public,named_table,{write_concurrency,true},{read_concurrency,true}])
    in gproc.erl line 2490
  12: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
  13: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  14: <P.1/gproc_sup>: undefined = erlang:whereis(gproc)
    in gen.erl line 299
  15: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  16: <P.1/gproc_sup>: <P.1.1/gproc> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc},gproc,[],[{spawn_opt,[]}]]],[link]})
    in erlang.erl line 2868
  17: <P.1.1/gproc>: true = erlang:register(gproc, <P.1.1/gproc>)
    in gen.erl line 302
  18: <P.1.1/gproc>: '$end_of_table' = ets:select(gproc, [{{{'$1',l}},[],['$1']}], 100)
    in gproc.erl line 2502
  19: <P.1.1/gproc>: {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}} = <P.1/gproc_sup> ! {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}}
    in proc_lib.erl line 392
  20: <P.1/gproc_sup>: receives message ({ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}})
    in proc_lib.erl line 348
  21: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  22: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  23: <P.1/gproc_sup>: undefined = ets:info(gproc_monitor, owner)
  24: <P.1/gproc_sup>: gproc_monitor = ets:new(gproc_monitor, [ordered_set,protected,named_table,{heir,<P.1/gproc_sup>,[]}])
  25: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  26: <P.1/gproc_sup>: <P.1.2/gproc_monitor> = erlang:spawn_link(proc_lib, init_p, [gproc_sup,[<P>],gproc_monitor,init,[<P.1/gproc_sup>]])
    in proc_lib.erl line 100
  27: <P.1.2/gproc_monitor>: normal = erlang:process_flag(priority, high)
    in gproc_monitor.erl line 123
  28: <P.1.2/gproc_monitor>: true = erlang:register(gproc_monitor, <P.1.2/gproc_monitor>)
    in gproc_monitor.erl line 124
  29: <P.1.2/gproc_monitor>: {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}} = <P.1/gproc_sup> ! {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}}
    in proc_lib.erl line 392
  30: <P.1/gproc_sup>: receives message ({ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}})
    in proc_lib.erl line 348
  31: <P.1/gproc_sup>: true = ets:give_away(gproc_monitor, <P.1.2/gproc_monitor>, [])
    in gproc_monitor.erl line 104
  32: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  33: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  34: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_bcast)
    in gen.erl line 299
  35: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  36: <P.1/gproc_sup>: <P.1.3/gproc_bcast> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_bcast},gproc_bcast,[],[]]],[link]})
    in erlang.erl line 2868
  37: <P.1.3/gproc_bcast>: true = erlang:register(gproc_bcast, <P.1.3/gproc_bcast>)
    in gen.erl line 302
  38: <P.1.3/gproc_bcast>: {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}} = <P.1/gproc_sup> ! {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}}
    in proc_lib.erl line 392
  39: <P.1/gproc_sup>: receives message ({ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}})
    in proc_lib.erl line 348
  40: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  41: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  42: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_pool)
    in gen.erl line 299
  43: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  44: <P.1/gproc_sup>: <P.1.4/gproc_pool> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_pool},gproc_pool,[],[]]],[link]})
    in erlang.erl line 2868
  45: <P.1.4/gproc_pool>: true = erlang:register(gproc_pool, <P.1.4/gproc_pool>)
    in gen.erl line 302
  46: <P.1.4/gproc_pool>: {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}} = <P.1/gproc_sup> ! {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}}
    in proc_lib.erl line 392
  47: <P.1/gproc_sup>: receives message ({ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}})
    in proc_lib.erl line 348
  48: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  49: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  50: <P.1/gproc_sup>: {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}} = <P> ! {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}}
    in proc_lib.erl line 392
  51: <P>: receives message ({ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}})
    in proc_lib.erl line 348
  52: <P>: {<P.2>,#Ref<0.3937440253.4130865153.76259>} = erlang:spawn_opt({erlang,apply,[#Fun<test.8.122744875>,[]],[monitor]})
    in erlang.erl line 2731
  53: <P.2>: #Ref<0.3937440253.4130865153.76262> = erlang:monitor(process, <P>)
    in test.erl line 38
  54: <P.2>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  55: <P.2>: #Ref<0.3937440253.4130865153.76266> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  56: <P.2>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}}, [noconnect])
    in gen.erl line 167
  57: <P.1.1/gproc>: receives message ({'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}})
    in gen_server.erl line 381
  58: <P.1.1/gproc>: true = ets:insert_new(gproc, {{{n,l,foo},n},<P.2>,the_value})
    in gproc_lib.erl line 78
  59: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,{n,l,foo}},[]})
  60: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,l}})
    in gproc_lib.erl line 300
  61: <P.1.1/gproc>: #Ref<0.3937440253.4130865153.76276> = erlang:monitor(process, <P.2>)
    in gproc_lib.erl line 302
  62: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76266>,true} = <P.2> ! {#Ref<0.3937440253.4130865153.76266>,true}
    in gen_server.erl line 243
  63: <P.2>: receives message ({#Ref<0.3937440253.4130865153.76266>,true})
    in gen.erl line 169
  64: <P.2>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76266>, [flush])
    in gen.erl line 171
  65: <P.2>: {<P.2>,ok} = <P> ! {<P.2>,ok}
    in test.erl line 40
  66: <P>: receives message ({<P.2>,ok})
    in test.erl line 45
  67: <P>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  68: <P>: #Ref<0.3937440253.4130865153.76286> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  69: <P>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}}, [noconnect])
    in gen.erl line 167
  70: <P.1.1/gproc>: receives message ({'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}})
    in gen_server.erl line 381
  71: <P.1.1/gproc>: [{{{n,l,foo},n},<P.2>,the_value}] = ets:lookup(gproc, {{n,l,foo},n})
    in gproc.erl line 2072
  72: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}} = <P> ! {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}}
    in gen_server.erl line 243
  73: <P>: receives message ({#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}})
    in gen.erl line 169
  74: <P>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76286>, [flush])
    in gen.erl line 171
  75: <P>: true = erlang:exit(<P.2>, kill)
    in test.erl line 47
  76: <P.2>: exits abnormally (killed)
  77: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed} = erlang:send(<P>, {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    (while exiting)
  78: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed} = erlang:send(<P.1.1/gproc>, {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed})
    (while exiting)
  79: <P>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    in test.erl line 48
  80: <P>: exits normally
  81: <P>: true = erlang:exit(<P.1/gproc_sup>, normal)
    (while exiting)
  82: <P>: {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal} = erlang:send(<P.2>, {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal})
    (while exiting)
  83: <P.1/gproc_sup>: receives message ({'EXIT',<P>,normal})
    in gen_server.erl line 381
  84: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76307> = erlang:monitor(process, <P.1.4/gproc_pool>)
    in supervisor.erl line 978
  85: <P.1/gproc_sup>: true = erlang:unlink(<P.1.4/gproc_pool>)
    in supervisor.erl line 979
  86: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
  87: <P.1/gproc_sup>: true = erlang:exit(<P.1.4/gproc_pool>, shutdown)
    in supervisor.erl line 954
  88: <P.1.1/gproc>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed})
    in gen_server.erl line 381
  89: <P.1.1/gproc>: true = ets:member(gproc, {<P.2>,l})
    in gproc.erl line 2313
  90: <P.1.1/gproc>: [{{n,l,foo},[]}] = ets:select(gproc, [{{{<P.2>,'$1'},'$2'},[{'==',{element,2,'$1'},l}],[{{'$1','$2'}}]}])
    in gproc.erl line 2317
  91: <P.1.1/gproc>: [{{{n,l,foo},n},<P.2>,the_value}] = ets:lookup(gproc, {{n,l,foo},n})
    in gproc.erl line 2323
  92: <P.1.4/gproc_pool>: exits abnormally (shutdown)
  93: <P.1.4/gproc_pool>: {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    (while exiting)
  94: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    in supervisor.erl line 955
  95: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76331> = erlang:monitor(process, <P.1.3/gproc_bcast>)
    in supervisor.erl line 978
  96: <P.1/gproc_sup>: true = erlang:unlink(<P.1.3/gproc_bcast>)
    in supervisor.erl line 979
  97: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
  98: <P.1/gproc_sup>: true = erlang:exit(<P.1.3/gproc_bcast>, shutdown)
    in supervisor.erl line 954
  99: <P.1.3/gproc_bcast>: exits abnormally (shutdown)
 100: <P.1.3/gproc_bcast>: {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    (while exiting)
 101: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    in supervisor.erl line 955
 102: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76340> = erlang:monitor(process, <P.1.2/gproc_monitor>)
    in supervisor.erl line 978
 103: <P.1/gproc_sup>: true = erlang:unlink(<P.1.2/gproc_monitor>)
    in supervisor.erl line 979
 104: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 105: <P.1/gproc_sup>: true = erlang:exit(<P.1.2/gproc_monitor>, shutdown)
    in supervisor.erl line 954
 106: <P.1.2/gproc_monitor>: exits abnormally (shutdown)
 107: <P.1.2/gproc_monitor>: true = ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 108: <P.1.2/gproc_monitor>: {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    (while exiting)
 109: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    in supervisor.erl line 955
 110: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76351> = erlang:monitor(process, <P.1.1/gproc>)
    in supervisor.erl line 978
 111: <P.1/gproc_sup>: true = erlang:unlink(<P.1.1/gproc>)
    in supervisor.erl line 979
 112: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 113: <P.1/gproc_sup>: true = erlang:exit(<P.1.1/gproc>, shutdown)
    in supervisor.erl line 954
 114: <P.1.1/gproc>: exits abnormally (shutdown)
 115: <P.1.1/gproc>: {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    (while exiting)
 116: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    in supervisor.erl line 955
 117: <P.1/gproc_sup>: exits normally
 118: <P.1/gproc_sup>: true = ets:delete(gproc)
    (while exiting)
 119: <P.1/gproc_sup>: Exception badarg raised by: ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 120: <P.1/gproc_sup>: true = ets:delete(gproc_monitor)
    (while exiting)
 121: <P.1/gproc_sup>: true = erlang:exit(<P>, normal)
    (while exiting)
################################################################################
Interleaving #23
--------------------------------------------------------------------------------
Errors found:
* At step 76 process <P.2> exited abnormally
    Reason:
      killed
    Stacktrace:
      []
--------------------------------------------------------------------------------
Event trace:
   1: <P>: undefined = erlang:whereis(gproc_sup)
    in gen.erl line 299
   2: <P>: [] = erlang:process_info(<P>, registered_name)
    in proc_lib.erl line 731
   3: <P>: <P.1/gproc_sup> = erlang:spawn_opt({proc_lib,init_p,[<P>,[],gen,init_it,[gen_server,<P>,<P>,{local,gproc_sup},supervisor,{{local,gproc_sup},gproc_sup,[]},[]]],[link]})
    in erlang.erl line 2868
   4: <P.1/gproc_sup>: true = erlang:register(gproc_sup, <P.1/gproc_sup>)
    in gen.erl line 302
   5: <P.1/gproc_sup>: false = erlang:process_flag(trap_exit, true)
    in supervisor.erl line 293
   6: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   7: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
   8: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   9: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  10: <P.1/gproc_sup>: undefined = ets:info(gproc, name)
    in gproc.erl line 2488
  11: <P.1/gproc_sup>: gproc = ets:new(gproc, [ordered_set,public,named_table,{write_concurrency,true},{read_concurrency,true}])
    in gproc.erl line 2490
  12: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
  13: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  14: <P.1/gproc_sup>: undefined = erlang:whereis(gproc)
    in gen.erl line 299
  15: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  16: <P.1/gproc_sup>: <P.1.1/gproc> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc},gproc,[],[{spawn_opt,[]}]]],[link]})
    in erlang.erl line 2868
  17: <P.1.1/gproc>: true = erlang:register(gproc, <P.1.1/gproc>)
    in gen.erl line 302
  18: <P.1.1/gproc>: '$end_of_table' = ets:select(gproc, [{{{'$1',l}},[],['$1']}], 100)
    in gproc.erl line 2502
  19: <P.1.1/gproc>: {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}} = <P.1/gproc_sup> ! {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}}
    in proc_lib.erl line 392
  20: <P.1/gproc_sup>: receives message ({ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}})
    in proc_lib.erl line 348
  21: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  22: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  23: <P.1/gproc_sup>: undefined = ets:info(gproc_monitor, owner)
  24: <P.1/gproc_sup>: gproc_monitor = ets:new(gproc_monitor, [ordered_set,protected,named_table,{heir,<P.1/gproc_sup>,[]}])
  25: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  26: <P.1/gproc_sup>: <P.1.2/gproc_monitor> = erlang:spawn_link(proc_lib, init_p, [gproc_sup,[<P>],gproc_monitor,init,[<P.1/gproc_sup>]])
    in proc_lib.erl line 100
  27: <P.1.2/gproc_monitor>: normal = erlang:process_flag(priority, high)
    in gproc_monitor.erl line 123
  28: <P.1.2/gproc_monitor>: true = erlang:register(gproc_monitor, <P.1.2/gproc_monitor>)
    in gproc_monitor.erl line 124
  29: <P.1.2/gproc_monitor>: {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}} = <P.1/gproc_sup> ! {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}}
    in proc_lib.erl line 392
  30: <P.1/gproc_sup>: receives message ({ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}})
    in proc_lib.erl line 348
  31: <P.1/gproc_sup>: true = ets:give_away(gproc_monitor, <P.1.2/gproc_monitor>, [])
    in gproc_monitor.erl line 104
  32: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  33: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  34: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_bcast)
    in gen.erl line 299
  35: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  36: <P.1/gproc_sup>: <P.1.3/gproc_bcast> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_bcast},gproc_bcast,[],[]]],[link]})
    in erlang.erl line 2868
  37: <P.1.3/gproc_bcast>: true = erlang:register(gproc_bcast, <P.1.3/gproc_bcast>)
    in gen.erl line 302
  38: <P.1.3/gproc_bcast>: {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}} = <P.1/gproc_sup> ! {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}}
    in proc_lib.erl line 392
  39: <P.1/gproc_sup>: receives message ({ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}})
    in proc_lib.erl line 348
  40: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  41: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  42: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_pool)
    in gen.erl line 299
  43: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  44: <P.1/gproc_sup>: <P.1.4/gproc_pool> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_pool},gproc_pool,[],[]]],[link]})
    in erlang.erl line 2868
  45: <P.1.4/gproc_pool>: true = erlang:register(gproc_pool, <P.1.4/gproc_pool>)
    in gen.erl line 302
  46: <P.1.4/gproc_pool>: {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}} = <P.1/gproc_sup> ! {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}}
    in proc_lib.erl line 392
  47: <P.1/gproc_sup>: receives message ({ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}})
    in proc_lib.erl line 348
  48: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  49: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  50: <P.1/gproc_sup>: {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}} = <P> ! {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}}
    in proc_lib.erl line 392
  51: <P>: receives message ({ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}})
    in proc_lib.erl line 348
  52: <P>: {<P.2>,#Ref<0.3937440253.4130865153.76259>} = erlang:spawn_opt({erlang,apply,[#Fun<test.8.122744875>,[]],[monitor]})
    in erlang.erl line 2731
  53: <P.2>: #Ref<0.3937440253.4130865153.76262> = erlang:monitor(process, <P>)
    in test.erl line 38
  54: <P.2>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  55: <P.2>: #Ref<0.3937440253.4130865153.76266> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  56: <P.2>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}}, [noconnect])
    in gen.erl line 167
  57: <P.1.1/gproc>: receives message ({'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}})
    in gen_server.erl line 381
  58: <P.1.1/gproc>: true = ets:insert_new(gproc, {{{n,l,foo},n},<P.2>,the_value})
    in gproc_lib.erl line 78
  59: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,{n,l,foo}},[]})
  60: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,l}})
    in gproc_lib.erl line 300
  61: <P.1.1/gproc>: #Ref<0.3937440253.4130865153.76276> = erlang:monitor(process, <P.2>)
    in gproc_lib.erl line 302
  62: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76266>,true} = <P.2> ! {#Ref<0.3937440253.4130865153.76266>,true}
    in gen_server.erl line 243
  63: <P.2>: receives message ({#Ref<0.3937440253.4130865153.76266>,true})
    in gen.erl line 169
  64: <P.2>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76266>, [flush])
    in gen.erl line 171
  65: <P.2>: {<P.2>,ok} = <P> ! {<P.2>,ok}
    in test.erl line 40
  66: <P>: receives message ({<P.2>,ok})
    in test.erl line 45
  67: <P>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  68: <P>: #Ref<0.3937440253.4130865153.76286> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  69: <P>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}}, [noconnect])
    in gen.erl line 167
  70: <P.1.1/gproc>: receives message ({'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}})
    in gen_server.erl line 381
  71: <P.1.1/gproc>: [{{{n,l,foo},n},<P.2>,the_value}] = ets:lookup(gproc, {{n,l,foo},n})
    in gproc.erl line 2072
  72: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}} = <P> ! {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}}
    in gen_server.erl line 243
  73: <P>: receives message ({#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}})
    in gen.erl line 169
  74: <P>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76286>, [flush])
    in gen.erl line 171
  75: <P>: true = erlang:exit(<P.2>, kill)
    in test.erl line 47
  76: <P.2>: exits abnormally (killed)
  77: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed} = erlang:send(<P>, {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    (while exiting)
  78: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed} = erlang:send(<P.1.1/gproc>, {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed})
    (while exiting)
  79: <P>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    in test.erl line 48
  80: <P>: exits normally
  81: <P>: true = erlang:exit(<P.1/gproc_sup>, normal)
    (while exiting)
  82: <P>: {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal} = erlang:send(<P.2>, {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal})
    (while exiting)
  83: <P.1/gproc_sup>: receives message ({'EXIT',<P>,normal})
    in gen_server.erl line 381
  84: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76307> = erlang:monitor(process, <P.1.4/gproc_pool>)
    in supervisor.erl line 978
  85: <P.1/gproc_sup>: true = erlang:unlink(<P.1.4/gproc_pool>)
    in supervisor.erl line 979
  86: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
  87: <P.1/gproc_sup>: true = erlang:exit(<P.1.4/gproc_pool>, shutdown)
    in supervisor.erl line 954
  88: <P.1.1/gproc>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed})
    in gen_server.erl line 381
  89: <P.1.1/gproc>: true = ets:member(gproc, {<P.2>,l})
    in gproc.erl line 2313
  90: <P.1.1/gproc>: [{{n,l,foo},[]}] = ets:select(gproc, [{{{<P.2>,'$1'},'$2'},[{'==',{element,2,'$1'},l}],[{{'$1','$2'}}]}])
    in gproc.erl line 2317
  91: <P.1.4/gproc_pool>: exits abnormally (shutdown)
  92: <P.1.4/gproc_pool>: {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    (while exiting)
  93: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    in supervisor.erl line 955
  94: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76331> = erlang:monitor(process, <P.1.3/gproc_bcast>)
    in supervisor.erl line 978
  95: <P.1/gproc_sup>: true = erlang:unlink(<P.1.3/gproc_bcast>)
    in supervisor.erl line 979
  96: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
  97: <P.1/gproc_sup>: true = erlang:exit(<P.1.3/gproc_bcast>, shutdown)
    in supervisor.erl line 954
  98: <P.1.3/gproc_bcast>: exits abnormally (shutdown)
  99: <P.1.3/gproc_bcast>: {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    (while exiting)
 100: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    in supervisor.erl line 955
 101: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76340> = erlang:monitor(process, <P.1.2/gproc_monitor>)
    in supervisor.erl line 978
 102: <P.1/gproc_sup>: true = erlang:unlink(<P.1.2/gproc_monitor>)
    in supervisor.erl line 979
 103: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 104: <P.1/gproc_sup>: true = erlang:exit(<P.1.2/gproc_monitor>, shutdown)
    in supervisor.erl line 954
 105: <P.1.2/gproc_monitor>: exits abnormally (shutdown)
 106: <P.1.2/gproc_monitor>: true = ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 107: <P.1.2/gproc_monitor>: {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    (while exiting)
 108: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    in supervisor.erl line 955
 109: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76351> = erlang:monitor(process, <P.1.1/gproc>)
    in supervisor.erl line 978
 110: <P.1/gproc_sup>: true = erlang:unlink(<P.1.1/gproc>)
    in supervisor.erl line 979
 111: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 112: <P.1/gproc_sup>: true = erlang:exit(<P.1.1/gproc>, shutdown)
    in supervisor.erl line 954
 113: <P.1.1/gproc>: exits abnormally (shutdown)
 114: <P.1.1/gproc>: {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    (while exiting)
 115: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    in supervisor.erl line 955
 116: <P.1/gproc_sup>: exits normally
 117: <P.1/gproc_sup>: true = ets:delete(gproc)
    (while exiting)
 118: <P.1/gproc_sup>: Exception badarg raised by: ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 119: <P.1/gproc_sup>: true = ets:delete(gproc_monitor)
    (while exiting)
 120: <P.1/gproc_sup>: true = erlang:exit(<P>, normal)
    (while exiting)
################################################################################
Interleaving #24
--------------------------------------------------------------------------------
Errors found:
* At step 76 process <P.2> exited abnormally
    Reason:
      killed
    Stacktrace:
      []
--------------------------------------------------------------------------------
Event trace:
   1: <P>: undefined = erlang:whereis(gproc_sup)
    in gen.erl line 299
   2: <P>: [] = erlang:process_info(<P>, registered_name)
    in proc_lib.erl line 731
   3: <P>: <P.1/gproc_sup> = erlang:spawn_opt({proc_lib,init_p,[<P>,[],gen,init_it,[gen_server,<P>,<P>,{local,gproc_sup},supervisor,{{local,gproc_sup},gproc_sup,[]},[]]],[link]})
    in erlang.erl line 2868
   4: <P.1/gproc_sup>: true = erlang:register(gproc_sup, <P.1/gproc_sup>)
    in gen.erl line 302
   5: <P.1/gproc_sup>: false = erlang:process_flag(trap_exit, true)
    in supervisor.erl line 293
   6: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   7: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
   8: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   9: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  10: <P.1/gproc_sup>: undefined = ets:info(gproc, name)
    in gproc.erl line 2488
  11: <P.1/gproc_sup>: gproc = ets:new(gproc, [ordered_set,public,named_table,{write_concurrency,true},{read_concurrency,true}])
    in gproc.erl line 2490
  12: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
  13: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  14: <P.1/gproc_sup>: undefined = erlang:whereis(gproc)
    in gen.erl line 299
  15: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  16: <P.1/gproc_sup>: <P.1.1/gproc> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc},gproc,[],[{spawn_opt,[]}]]],[link]})
    in erlang.erl line 2868
  17: <P.1.1/gproc>: true = erlang:register(gproc, <P.1.1/gproc>)
    in gen.erl line 302
  18: <P.1.1/gproc>: '$end_of_table' = ets:select(gproc, [{{{'$1',l}},[],['$1']}], 100)
    in gproc.erl line 2502
  19: <P.1.1/gproc>: {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}} = <P.1/gproc_sup> ! {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}}
    in proc_lib.erl line 392
  20: <P.1/gproc_sup>: receives message ({ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}})
    in proc_lib.erl line 348
  21: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  22: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  23: <P.1/gproc_sup>: undefined = ets:info(gproc_monitor, owner)
  24: <P.1/gproc_sup>: gproc_monitor = ets:new(gproc_monitor, [ordered_set,protected,named_table,{heir,<P.1/gproc_sup>,[]}])
  25: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  26: <P.1/gproc_sup>: <P.1.2/gproc_monitor> = erlang:spawn_link(proc_lib, init_p, [gproc_sup,[<P>],gproc_monitor,init,[<P.1/gproc_sup>]])
    in proc_lib.erl line 100
  27: <P.1.2/gproc_monitor>: normal = erlang:process_flag(priority, high)
    in gproc_monitor.erl line 123
  28: <P.1.2/gproc_monitor>: true = erlang:register(gproc_monitor, <P.1.2/gproc_monitor>)
    in gproc_monitor.erl line 124
  29: <P.1.2/gproc_monitor>: {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}} = <P.1/gproc_sup> ! {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}}
    in proc_lib.erl line 392
  30: <P.1/gproc_sup>: receives message ({ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}})
    in proc_lib.erl line 348
  31: <P.1/gproc_sup>: true = ets:give_away(gproc_monitor, <P.1.2/gproc_monitor>, [])
    in gproc_monitor.erl line 104
  32: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  33: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  34: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_bcast)
    in gen.erl line 299
  35: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  36: <P.1/gproc_sup>: <P.1.3/gproc_bcast> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_bcast},gproc_bcast,[],[]]],[link]})
    in erlang.erl line 2868
  37: <P.1.3/gproc_bcast>: true = erlang:register(gproc_bcast, <P.1.3/gproc_bcast>)
    in gen.erl line 302
  38: <P.1.3/gproc_bcast>: {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}} = <P.1/gproc_sup> ! {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}}
    in proc_lib.erl line 392
  39: <P.1/gproc_sup>: receives message ({ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}})
    in proc_lib.erl line 348
  40: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  41: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  42: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_pool)
    in gen.erl line 299
  43: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  44: <P.1/gproc_sup>: <P.1.4/gproc_pool> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_pool},gproc_pool,[],[]]],[link]})
    in erlang.erl line 2868
  45: <P.1.4/gproc_pool>: true = erlang:register(gproc_pool, <P.1.4/gproc_pool>)
    in gen.erl line 302
  46: <P.1.4/gproc_pool>: {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}} = <P.1/gproc_sup> ! {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}}
    in proc_lib.erl line 392
  47: <P.1/gproc_sup>: receives message ({ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}})
    in proc_lib.erl line 348
  48: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  49: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  50: <P.1/gproc_sup>: {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}} = <P> ! {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}}
    in proc_lib.erl line 392
  51: <P>: receives message ({ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}})
    in proc_lib.erl line 348
  52: <P>: {<P.2>,#Ref<0.3937440253.4130865153.76259>} = erlang:spawn_opt({erlang,apply,[#Fun<test.8.122744875>,[]],[monitor]})
    in erlang.erl line 2731
  53: <P.2>: #Ref<0.3937440253.4130865153.76262> = erlang:monitor(process, <P>)
    in test.erl line 38
  54: <P.2>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  55: <P.2>: #Ref<0.3937440253.4130865153.76266> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  56: <P.2>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}}, [noconnect])
    in gen.erl line 167
  57: <P.1.1/gproc>: receives message ({'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}})
    in gen_server.erl line 381
  58: <P.1.1/gproc>: true = ets:insert_new(gproc, {{{n,l,foo},n},<P.2>,the_value})
    in gproc_lib.erl line 78
  59: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,{n,l,foo}},[]})
  60: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,l}})
    in gproc_lib.erl line 300
  61: <P.1.1/gproc>: #Ref<0.3937440253.4130865153.76276> = erlang:monitor(process, <P.2>)
    in gproc_lib.erl line 302
  62: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76266>,true} = <P.2> ! {#Ref<0.3937440253.4130865153.76266>,true}
    in gen_server.erl line 243
  63: <P.2>: receives message ({#Ref<0.3937440253.4130865153.76266>,true})
    in gen.erl line 169
  64: <P.2>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76266>, [flush])
    in gen.erl line 171
  65: <P.2>: {<P.2>,ok} = <P> ! {<P.2>,ok}
    in test.erl line 40
  66: <P>: receives message ({<P.2>,ok})
    in test.erl line 45
  67: <P>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  68: <P>: #Ref<0.3937440253.4130865153.76286> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  69: <P>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}}, [noconnect])
    in gen.erl line 167
  70: <P.1.1/gproc>: receives message ({'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}})
    in gen_server.erl line 381
  71: <P.1.1/gproc>: [{{{n,l,foo},n},<P.2>,the_value}] = ets:lookup(gproc, {{n,l,foo},n})
    in gproc.erl line 2072
  72: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}} = <P> ! {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}}
    in gen_server.erl line 243
  73: <P>: receives message ({#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}})
    in gen.erl line 169
  74: <P>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76286>, [flush])
    in gen.erl line 171
  75: <P>: true = erlang:exit(<P.2>, kill)
    in test.erl line 47
  76: <P.2>: exits abnormally (killed)
  77: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed} = erlang:send(<P>, {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    (while exiting)
  78: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed} = erlang:send(<P.1.1/gproc>, {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed})
    (while exiting)
  79: <P>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    in test.erl line 48
  80: <P>: exits normally
  81: <P>: true = erlang:exit(<P.1/gproc_sup>, normal)
    (while exiting)
  82: <P>: {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal} = erlang:send(<P.2>, {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal})
    (while exiting)
  83: <P.1/gproc_sup>: receives message ({'EXIT',<P>,normal})
    in gen_server.erl line 381
  84: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76307> = erlang:monitor(process, <P.1.4/gproc_pool>)
    in supervisor.erl line 978
  85: <P.1/gproc_sup>: true = erlang:unlink(<P.1.4/gproc_pool>)
    in supervisor.erl line 979
  86: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
  87: <P.1/gproc_sup>: true = erlang:exit(<P.1.4/gproc_pool>, shutdown)
    in supervisor.erl line 954
  88: <P.1.1/gproc>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed})
    in gen_server.erl line 381
  89: <P.1.1/gproc>: true = ets:member(gproc, {<P.2>,l})
    in gproc.erl line 2313
  90: <P.1.4/gproc_pool>: exits abnormally (shutdown)
  91: <P.1.4/gproc_pool>: {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    (while exiting)
  92: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    in supervisor.erl line 955
  93: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76331> = erlang:monitor(process, <P.1.3/gproc_bcast>)
    in supervisor.erl line 978
  94: <P.1/gproc_sup>: true = erlang:unlink(<P.1.3/gproc_bcast>)
    in supervisor.erl line 979
  95: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
  96: <P.1/gproc_sup>: true = erlang:exit(<P.1.3/gproc_bcast>, shutdown)
    in supervisor.erl line 954
  97: <P.1.3/gproc_bcast>: exits abnormally (shutdown)
  98: <P.1.3/gproc_bcast>: {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    (while exiting)
  99: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    in supervisor.erl line 955
 100: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76340> = erlang:monitor(process, <P.1.2/gproc_monitor>)
    in supervisor.erl line 978
 101: <P.1/gproc_sup>: true = erlang:unlink(<P.1.2/gproc_monitor>)
    in supervisor.erl line 979
 102: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 103: <P.1/gproc_sup>: true = erlang:exit(<P.1.2/gproc_monitor>, shutdown)
    in supervisor.erl line 954
 104: <P.1.2/gproc_monitor>: exits abnormally (shutdown)
 105: <P.1.2/gproc_monitor>: true = ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 106: <P.1.2/gproc_monitor>: {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    (while exiting)
 107: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    in supervisor.erl line 955
 108: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76351> = erlang:monitor(process, <P.1.1/gproc>)
    in supervisor.erl line 978
 109: <P.1/gproc_sup>: true = erlang:unlink(<P.1.1/gproc>)
    in supervisor.erl line 979
 110: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 111: <P.1/gproc_sup>: true = erlang:exit(<P.1.1/gproc>, shutdown)
    in supervisor.erl line 954
 112: <P.1.1/gproc>: exits abnormally (shutdown)
 113: <P.1.1/gproc>: {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    (while exiting)
 114: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    in supervisor.erl line 955
 115: <P.1/gproc_sup>: exits normally
 116: <P.1/gproc_sup>: true = ets:delete(gproc)
    (while exiting)
 117: <P.1/gproc_sup>: Exception badarg raised by: ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 118: <P.1/gproc_sup>: true = ets:delete(gproc_monitor)
    (while exiting)
 119: <P.1/gproc_sup>: true = erlang:exit(<P>, normal)
    (while exiting)
################################################################################
Interleaving #25
--------------------------------------------------------------------------------
Errors found:
* At step 76 process <P.2> exited abnormally
    Reason:
      killed
    Stacktrace:
      []
--------------------------------------------------------------------------------
Event trace:
   1: <P>: undefined = erlang:whereis(gproc_sup)
    in gen.erl line 299
   2: <P>: [] = erlang:process_info(<P>, registered_name)
    in proc_lib.erl line 731
   3: <P>: <P.1/gproc_sup> = erlang:spawn_opt({proc_lib,init_p,[<P>,[],gen,init_it,[gen_server,<P>,<P>,{local,gproc_sup},supervisor,{{local,gproc_sup},gproc_sup,[]},[]]],[link]})
    in erlang.erl line 2868
   4: <P.1/gproc_sup>: true = erlang:register(gproc_sup, <P.1/gproc_sup>)
    in gen.erl line 302
   5: <P.1/gproc_sup>: false = erlang:process_flag(trap_exit, true)
    in supervisor.erl line 293
   6: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   7: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
   8: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   9: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  10: <P.1/gproc_sup>: undefined = ets:info(gproc, name)
    in gproc.erl line 2488
  11: <P.1/gproc_sup>: gproc = ets:new(gproc, [ordered_set,public,named_table,{write_concurrency,true},{read_concurrency,true}])
    in gproc.erl line 2490
  12: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
  13: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  14: <P.1/gproc_sup>: undefined = erlang:whereis(gproc)
    in gen.erl line 299
  15: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  16: <P.1/gproc_sup>: <P.1.1/gproc> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc},gproc,[],[{spawn_opt,[]}]]],[link]})
    in erlang.erl line 2868
  17: <P.1.1/gproc>: true = erlang:register(gproc, <P.1.1/gproc>)
    in gen.erl line 302
  18: <P.1.1/gproc>: '$end_of_table' = ets:select(gproc, [{{{'$1',l}},[],['$1']}], 100)
    in gproc.erl line 2502
  19: <P.1.1/gproc>: {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}} = <P.1/gproc_sup> ! {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}}
    in proc_lib.erl line 392
  20: <P.1/gproc_sup>: receives message ({ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}})
    in proc_lib.erl line 348
  21: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  22: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  23: <P.1/gproc_sup>: undefined = ets:info(gproc_monitor, owner)
  24: <P.1/gproc_sup>: gproc_monitor = ets:new(gproc_monitor, [ordered_set,protected,named_table,{heir,<P.1/gproc_sup>,[]}])
  25: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  26: <P.1/gproc_sup>: <P.1.2/gproc_monitor> = erlang:spawn_link(proc_lib, init_p, [gproc_sup,[<P>],gproc_monitor,init,[<P.1/gproc_sup>]])
    in proc_lib.erl line 100
  27: <P.1.2/gproc_monitor>: normal = erlang:process_flag(priority, high)
    in gproc_monitor.erl line 123
  28: <P.1.2/gproc_monitor>: true = erlang:register(gproc_monitor, <P.1.2/gproc_monitor>)
    in gproc_monitor.erl line 124
  29: <P.1.2/gproc_monitor>: {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}} = <P.1/gproc_sup> ! {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}}
    in proc_lib.erl line 392
  30: <P.1/gproc_sup>: receives message ({ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}})
    in proc_lib.erl line 348
  31: <P.1/gproc_sup>: true = ets:give_away(gproc_monitor, <P.1.2/gproc_monitor>, [])
    in gproc_monitor.erl line 104
  32: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  33: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  34: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_bcast)
    in gen.erl line 299
  35: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  36: <P.1/gproc_sup>: <P.1.3/gproc_bcast> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_bcast},gproc_bcast,[],[]]],[link]})
    in erlang.erl line 2868
  37: <P.1.3/gproc_bcast>: true = erlang:register(gproc_bcast, <P.1.3/gproc_bcast>)
    in gen.erl line 302
  38: <P.1.3/gproc_bcast>: {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}} = <P.1/gproc_sup> ! {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}}
    in proc_lib.erl line 392
  39: <P.1/gproc_sup>: receives message ({ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}})
    in proc_lib.erl line 348
  40: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  41: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  42: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_pool)
    in gen.erl line 299
  43: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  44: <P.1/gproc_sup>: <P.1.4/gproc_pool> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_pool},gproc_pool,[],[]]],[link]})
    in erlang.erl line 2868
  45: <P.1.4/gproc_pool>: true = erlang:register(gproc_pool, <P.1.4/gproc_pool>)
    in gen.erl line 302
  46: <P.1.4/gproc_pool>: {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}} = <P.1/gproc_sup> ! {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}}
    in proc_lib.erl line 392
  47: <P.1/gproc_sup>: receives message ({ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}})
    in proc_lib.erl line 348
  48: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  49: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  50: <P.1/gproc_sup>: {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}} = <P> ! {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}}
    in proc_lib.erl line 392
  51: <P>: receives message ({ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}})
    in proc_lib.erl line 348
  52: <P>: {<P.2>,#Ref<0.3937440253.4130865153.76259>} = erlang:spawn_opt({erlang,apply,[#Fun<test.8.122744875>,[]],[monitor]})
    in erlang.erl line 2731
  53: <P.2>: #Ref<0.3937440253.4130865153.76262> = erlang:monitor(process, <P>)
    in test.erl line 38
  54: <P.2>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  55: <P.2>: #Ref<0.3937440253.4130865153.76266> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  56: <P.2>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}}, [noconnect])
    in gen.erl line 167
  57: <P.1.1/gproc>: receives message ({'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}})
    in gen_server.erl line 381
  58: <P.1.1/gproc>: true = ets:insert_new(gproc, {{{n,l,foo},n},<P.2>,the_value})
    in gproc_lib.erl line 78
  59: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,{n,l,foo}},[]})
  60: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,l}})
    in gproc_lib.erl line 300
  61: <P.1.1/gproc>: #Ref<0.3937440253.4130865153.76276> = erlang:monitor(process, <P.2>)
    in gproc_lib.erl line 302
  62: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76266>,true} = <P.2> ! {#Ref<0.3937440253.4130865153.76266>,true}
    in gen_server.erl line 243
  63: <P.2>: receives message ({#Ref<0.3937440253.4130865153.76266>,true})
    in gen.erl line 169
  64: <P.2>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76266>, [flush])
    in gen.erl line 171
  65: <P.2>: {<P.2>,ok} = <P> ! {<P.2>,ok}
    in test.erl line 40
  66: <P>: receives message ({<P.2>,ok})
    in test.erl line 45
  67: <P>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  68: <P>: #Ref<0.3937440253.4130865153.76286> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  69: <P>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}}, [noconnect])
    in gen.erl line 167
  70: <P.1.1/gproc>: receives message ({'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}})
    in gen_server.erl line 381
  71: <P.1.1/gproc>: [{{{n,l,foo},n},<P.2>,the_value}] = ets:lookup(gproc, {{n,l,foo},n})
    in gproc.erl line 2072
  72: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}} = <P> ! {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}}
    in gen_server.erl line 243
  73: <P>: receives message ({#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}})
    in gen.erl line 169
  74: <P>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76286>, [flush])
    in gen.erl line 171
  75: <P>: true = erlang:exit(<P.2>, kill)
    in test.erl line 47
  76: <P.2>: exits abnormally (killed)
  77: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed} = erlang:send(<P>, {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    (while exiting)
  78: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed} = erlang:send(<P.1.1/gproc>, {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed})
    (while exiting)
  79: <P>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    in test.erl line 48
  80: <P>: exits normally
  81: <P>: true = erlang:exit(<P.1/gproc_sup>, normal)
    (while exiting)
  82: <P>: {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal} = erlang:send(<P.2>, {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal})
    (while exiting)
  83: <P.1/gproc_sup>: receives message ({'EXIT',<P>,normal})
    in gen_server.erl line 381
  84: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76307> = erlang:monitor(process, <P.1.4/gproc_pool>)
    in supervisor.erl line 978
  85: <P.1/gproc_sup>: true = erlang:unlink(<P.1.4/gproc_pool>)
    in supervisor.erl line 979
  86: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
  87: <P.1/gproc_sup>: true = erlang:exit(<P.1.4/gproc_pool>, shutdown)
    in supervisor.erl line 954
  88: <P.1.1/gproc>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed})
    in gen_server.erl line 381
  89: <P.1.4/gproc_pool>: exits abnormally (shutdown)
  90: <P.1.4/gproc_pool>: {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    (while exiting)
  91: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    in supervisor.erl line 955
  92: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76331> = erlang:monitor(process, <P.1.3/gproc_bcast>)
    in supervisor.erl line 978
  93: <P.1/gproc_sup>: true = erlang:unlink(<P.1.3/gproc_bcast>)
    in supervisor.erl line 979
  94: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
  95: <P.1/gproc_sup>: true = erlang:exit(<P.1.3/gproc_bcast>, shutdown)
    in supervisor.erl line 954
  96: <P.1.3/gproc_bcast>: exits abnormally (shutdown)
  97: <P.1.3/gproc_bcast>: {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    (while exiting)
  98: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    in supervisor.erl line 955
  99: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76340> = erlang:monitor(process, <P.1.2/gproc_monitor>)
    in supervisor.erl line 978
 100: <P.1/gproc_sup>: true = erlang:unlink(<P.1.2/gproc_monitor>)
    in supervisor.erl line 979
 101: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 102: <P.1/gproc_sup>: true = erlang:exit(<P.1.2/gproc_monitor>, shutdown)
    in supervisor.erl line 954
 103: <P.1.2/gproc_monitor>: exits abnormally (shutdown)
 104: <P.1.2/gproc_monitor>: true = ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 105: <P.1.2/gproc_monitor>: {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    (while exiting)
 106: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    in supervisor.erl line 955
 107: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76351> = erlang:monitor(process, <P.1.1/gproc>)
    in supervisor.erl line 978
 108: <P.1/gproc_sup>: true = erlang:unlink(<P.1.1/gproc>)
    in supervisor.erl line 979
 109: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 110: <P.1/gproc_sup>: true = erlang:exit(<P.1.1/gproc>, shutdown)
    in supervisor.erl line 954
 111: <P.1.1/gproc>: exits abnormally (shutdown)
 112: <P.1.1/gproc>: {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    (while exiting)
 113: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    in supervisor.erl line 955
 114: <P.1/gproc_sup>: exits normally
 115: <P.1/gproc_sup>: true = ets:delete(gproc)
    (while exiting)
 116: <P.1/gproc_sup>: Exception badarg raised by: ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 117: <P.1/gproc_sup>: true = ets:delete(gproc_monitor)
    (while exiting)
 118: <P.1/gproc_sup>: true = erlang:exit(<P>, normal)
    (while exiting)
################################################################################
Interleaving #26
--------------------------------------------------------------------------------
Errors found:
* At step 76 process <P.2> exited abnormally
    Reason:
      killed
    Stacktrace:
      []
--------------------------------------------------------------------------------
Event trace:
   1: <P>: undefined = erlang:whereis(gproc_sup)
    in gen.erl line 299
   2: <P>: [] = erlang:process_info(<P>, registered_name)
    in proc_lib.erl line 731
   3: <P>: <P.1/gproc_sup> = erlang:spawn_opt({proc_lib,init_p,[<P>,[],gen,init_it,[gen_server,<P>,<P>,{local,gproc_sup},supervisor,{{local,gproc_sup},gproc_sup,[]},[]]],[link]})
    in erlang.erl line 2868
   4: <P.1/gproc_sup>: true = erlang:register(gproc_sup, <P.1/gproc_sup>)
    in gen.erl line 302
   5: <P.1/gproc_sup>: false = erlang:process_flag(trap_exit, true)
    in supervisor.erl line 293
   6: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   7: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
   8: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   9: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  10: <P.1/gproc_sup>: undefined = ets:info(gproc, name)
    in gproc.erl line 2488
  11: <P.1/gproc_sup>: gproc = ets:new(gproc, [ordered_set,public,named_table,{write_concurrency,true},{read_concurrency,true}])
    in gproc.erl line 2490
  12: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
  13: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  14: <P.1/gproc_sup>: undefined = erlang:whereis(gproc)
    in gen.erl line 299
  15: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  16: <P.1/gproc_sup>: <P.1.1/gproc> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc},gproc,[],[{spawn_opt,[]}]]],[link]})
    in erlang.erl line 2868
  17: <P.1.1/gproc>: true = erlang:register(gproc, <P.1.1/gproc>)
    in gen.erl line 302
  18: <P.1.1/gproc>: '$end_of_table' = ets:select(gproc, [{{{'$1',l}},[],['$1']}], 100)
    in gproc.erl line 2502
  19: <P.1.1/gproc>: {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}} = <P.1/gproc_sup> ! {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}}
    in proc_lib.erl line 392
  20: <P.1/gproc_sup>: receives message ({ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}})
    in proc_lib.erl line 348
  21: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  22: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  23: <P.1/gproc_sup>: undefined = ets:info(gproc_monitor, owner)
  24: <P.1/gproc_sup>: gproc_monitor = ets:new(gproc_monitor, [ordered_set,protected,named_table,{heir,<P.1/gproc_sup>,[]}])
  25: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  26: <P.1/gproc_sup>: <P.1.2/gproc_monitor> = erlang:spawn_link(proc_lib, init_p, [gproc_sup,[<P>],gproc_monitor,init,[<P.1/gproc_sup>]])
    in proc_lib.erl line 100
  27: <P.1.2/gproc_monitor>: normal = erlang:process_flag(priority, high)
    in gproc_monitor.erl line 123
  28: <P.1.2/gproc_monitor>: true = erlang:register(gproc_monitor, <P.1.2/gproc_monitor>)
    in gproc_monitor.erl line 124
  29: <P.1.2/gproc_monitor>: {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}} = <P.1/gproc_sup> ! {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}}
    in proc_lib.erl line 392
  30: <P.1/gproc_sup>: receives message ({ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}})
    in proc_lib.erl line 348
  31: <P.1/gproc_sup>: true = ets:give_away(gproc_monitor, <P.1.2/gproc_monitor>, [])
    in gproc_monitor.erl line 104
  32: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  33: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  34: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_bcast)
    in gen.erl line 299
  35: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  36: <P.1/gproc_sup>: <P.1.3/gproc_bcast> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_bcast},gproc_bcast,[],[]]],[link]})
    in erlang.erl line 2868
  37: <P.1.3/gproc_bcast>: true = erlang:register(gproc_bcast, <P.1.3/gproc_bcast>)
    in gen.erl line 302
  38: <P.1.3/gproc_bcast>: {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}} = <P.1/gproc_sup> ! {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}}
    in proc_lib.erl line 392
  39: <P.1/gproc_sup>: receives message ({ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}})
    in proc_lib.erl line 348
  40: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  41: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  42: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_pool)
    in gen.erl line 299
  43: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  44: <P.1/gproc_sup>: <P.1.4/gproc_pool> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_pool},gproc_pool,[],[]]],[link]})
    in erlang.erl line 2868
  45: <P.1.4/gproc_pool>: true = erlang:register(gproc_pool, <P.1.4/gproc_pool>)
    in gen.erl line 302
  46: <P.1.4/gproc_pool>: {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}} = <P.1/gproc_sup> ! {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}}
    in proc_lib.erl line 392
  47: <P.1/gproc_sup>: receives message ({ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}})
    in proc_lib.erl line 348
  48: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  49: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  50: <P.1/gproc_sup>: {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}} = <P> ! {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}}
    in proc_lib.erl line 392
  51: <P>: receives message ({ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}})
    in proc_lib.erl line 348
  52: <P>: {<P.2>,#Ref<0.3937440253.4130865153.76259>} = erlang:spawn_opt({erlang,apply,[#Fun<test.8.122744875>,[]],[monitor]})
    in erlang.erl line 2731
  53: <P.2>: #Ref<0.3937440253.4130865153.76262> = erlang:monitor(process, <P>)
    in test.erl line 38
  54: <P.2>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  55: <P.2>: #Ref<0.3937440253.4130865153.76266> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  56: <P.2>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}}, [noconnect])
    in gen.erl line 167
  57: <P.1.1/gproc>: receives message ({'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}})
    in gen_server.erl line 381
  58: <P.1.1/gproc>: true = ets:insert_new(gproc, {{{n,l,foo},n},<P.2>,the_value})
    in gproc_lib.erl line 78
  59: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,{n,l,foo}},[]})
  60: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,l}})
    in gproc_lib.erl line 300
  61: <P.1.1/gproc>: #Ref<0.3937440253.4130865153.76276> = erlang:monitor(process, <P.2>)
    in gproc_lib.erl line 302
  62: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76266>,true} = <P.2> ! {#Ref<0.3937440253.4130865153.76266>,true}
    in gen_server.erl line 243
  63: <P.2>: receives message ({#Ref<0.3937440253.4130865153.76266>,true})
    in gen.erl line 169
  64: <P.2>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76266>, [flush])
    in gen.erl line 171
  65: <P.2>: {<P.2>,ok} = <P> ! {<P.2>,ok}
    in test.erl line 40
  66: <P>: receives message ({<P.2>,ok})
    in test.erl line 45
  67: <P>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  68: <P>: #Ref<0.3937440253.4130865153.76286> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  69: <P>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}}, [noconnect])
    in gen.erl line 167
  70: <P.1.1/gproc>: receives message ({'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}})
    in gen_server.erl line 381
  71: <P.1.1/gproc>: [{{{n,l,foo},n},<P.2>,the_value}] = ets:lookup(gproc, {{n,l,foo},n})
    in gproc.erl line 2072
  72: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}} = <P> ! {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}}
    in gen_server.erl line 243
  73: <P>: receives message ({#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}})
    in gen.erl line 169
  74: <P>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76286>, [flush])
    in gen.erl line 171
  75: <P>: true = erlang:exit(<P.2>, kill)
    in test.erl line 47
  76: <P.2>: exits abnormally (killed)
  77: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed} = erlang:send(<P>, {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    (while exiting)
  78: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed} = erlang:send(<P.1.1/gproc>, {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed})
    (while exiting)
  79: <P>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    in test.erl line 48
  80: <P>: exits normally
  81: <P>: true = erlang:exit(<P.1/gproc_sup>, normal)
    (while exiting)
  82: <P>: {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal} = erlang:send(<P.2>, {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal})
    (while exiting)
  83: <P.1/gproc_sup>: receives message ({'EXIT',<P>,normal})
    in gen_server.erl line 381
  84: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76307> = erlang:monitor(process, <P.1.4/gproc_pool>)
    in supervisor.erl line 978
  85: <P.1/gproc_sup>: true = erlang:unlink(<P.1.4/gproc_pool>)
    in supervisor.erl line 979
  86: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
  87: <P.1/gproc_sup>: true = erlang:exit(<P.1.4/gproc_pool>, shutdown)
    in supervisor.erl line 954
  88: <P.1.4/gproc_pool>: exits abnormally (shutdown)
  89: <P.1.4/gproc_pool>: {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    (while exiting)
  90: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    in supervisor.erl line 955
  91: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76331> = erlang:monitor(process, <P.1.3/gproc_bcast>)
    in supervisor.erl line 978
  92: <P.1/gproc_sup>: true = erlang:unlink(<P.1.3/gproc_bcast>)
    in supervisor.erl line 979
  93: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
  94: <P.1/gproc_sup>: true = erlang:exit(<P.1.3/gproc_bcast>, shutdown)
    in supervisor.erl line 954
  95: <P.1.3/gproc_bcast>: exits abnormally (shutdown)
  96: <P.1.3/gproc_bcast>: {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    (while exiting)
  97: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    in supervisor.erl line 955
  98: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76340> = erlang:monitor(process, <P.1.2/gproc_monitor>)
    in supervisor.erl line 978
  99: <P.1/gproc_sup>: true = erlang:unlink(<P.1.2/gproc_monitor>)
    in supervisor.erl line 979
 100: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 101: <P.1/gproc_sup>: true = erlang:exit(<P.1.2/gproc_monitor>, shutdown)
    in supervisor.erl line 954
 102: <P.1.2/gproc_monitor>: exits abnormally (shutdown)
 103: <P.1.2/gproc_monitor>: true = ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 104: <P.1.2/gproc_monitor>: {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    (while exiting)
 105: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    in supervisor.erl line 955
 106: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76351> = erlang:monitor(process, <P.1.1/gproc>)
    in supervisor.erl line 978
 107: <P.1/gproc_sup>: true = erlang:unlink(<P.1.1/gproc>)
    in supervisor.erl line 979
 108: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 109: <P.1/gproc_sup>: true = erlang:exit(<P.1.1/gproc>, shutdown)
    in supervisor.erl line 954
 110: <P.1.1/gproc>: exits abnormally (shutdown)
 111: <P.1.1/gproc>: {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    (while exiting)
 112: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    in supervisor.erl line 955
 113: <P.1/gproc_sup>: exits normally
 114: <P.1/gproc_sup>: true = ets:delete(gproc)
    (while exiting)
 115: <P.1/gproc_sup>: Exception badarg raised by: ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 116: <P.1/gproc_sup>: true = ets:delete(gproc_monitor)
    (while exiting)
 117: <P.1/gproc_sup>: true = erlang:exit(<P>, normal)
    (while exiting)
################################################################################
Interleaving #27
--------------------------------------------------------------------------------
Errors found:
* At step 76 process <P.2> exited abnormally
    Reason:
      killed
    Stacktrace:
      []
--------------------------------------------------------------------------------
Event trace:
   1: <P>: undefined = erlang:whereis(gproc_sup)
    in gen.erl line 299
   2: <P>: [] = erlang:process_info(<P>, registered_name)
    in proc_lib.erl line 731
   3: <P>: <P.1/gproc_sup> = erlang:spawn_opt({proc_lib,init_p,[<P>,[],gen,init_it,[gen_server,<P>,<P>,{local,gproc_sup},supervisor,{{local,gproc_sup},gproc_sup,[]},[]]],[link]})
    in erlang.erl line 2868
   4: <P.1/gproc_sup>: true = erlang:register(gproc_sup, <P.1/gproc_sup>)
    in gen.erl line 302
   5: <P.1/gproc_sup>: false = erlang:process_flag(trap_exit, true)
    in supervisor.erl line 293
   6: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   7: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
   8: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
   9: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  10: <P.1/gproc_sup>: undefined = ets:info(gproc, name)
    in gproc.erl line 2488
  11: <P.1/gproc_sup>: gproc = ets:new(gproc, [ordered_set,public,named_table,{write_concurrency,true},{read_concurrency,true}])
    in gproc.erl line 2490
  12: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in application.erl line 327
  13: <P.1/gproc_sup>: [] = ets:match(ac_tab, {{application_master,'$1'},<P.user/user>})
    in application_controller.erl line 326
  14: <P.1/gproc_sup>: undefined = erlang:whereis(gproc)
    in gen.erl line 299
  15: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  16: <P.1/gproc_sup>: <P.1.1/gproc> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc},gproc,[],[{spawn_opt,[]}]]],[link]})
    in erlang.erl line 2868
  17: <P.1.1/gproc>: true = erlang:register(gproc, <P.1.1/gproc>)
    in gen.erl line 302
  18: <P.1.1/gproc>: '$end_of_table' = ets:select(gproc, [{{{'$1',l}},[],['$1']}], 100)
    in gproc.erl line 2502
  19: <P.1.1/gproc>: {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}} = <P.1/gproc_sup> ! {ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}}
    in proc_lib.erl line 392
  20: <P.1/gproc_sup>: receives message ({ack,<P.1.1/gproc>,{ok,<P.1.1/gproc>}})
    in proc_lib.erl line 348
  21: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  22: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.1/gproc>},{id,gproc},{mfargs,{gproc,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  23: <P.1/gproc_sup>: undefined = ets:info(gproc_monitor, owner)
  24: <P.1/gproc_sup>: gproc_monitor = ets:new(gproc_monitor, [ordered_set,protected,named_table,{heir,<P.1/gproc_sup>,[]}])
  25: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  26: <P.1/gproc_sup>: <P.1.2/gproc_monitor> = erlang:spawn_link(proc_lib, init_p, [gproc_sup,[<P>],gproc_monitor,init,[<P.1/gproc_sup>]])
    in proc_lib.erl line 100
  27: <P.1.2/gproc_monitor>: normal = erlang:process_flag(priority, high)
    in gproc_monitor.erl line 123
  28: <P.1.2/gproc_monitor>: true = erlang:register(gproc_monitor, <P.1.2/gproc_monitor>)
    in gproc_monitor.erl line 124
  29: <P.1.2/gproc_monitor>: {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}} = <P.1/gproc_sup> ! {ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}}
    in proc_lib.erl line 392
  30: <P.1/gproc_sup>: receives message ({ack,<P.1.2/gproc_monitor>,{ok,<P.1.2/gproc_monitor>}})
    in proc_lib.erl line 348
  31: <P.1/gproc_sup>: true = ets:give_away(gproc_monitor, <P.1.2/gproc_monitor>, [])
    in gproc_monitor.erl line 104
  32: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  33: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.2/gproc_monitor>},{id,gproc_monitor},{mfargs,{gproc_monitor,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  34: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_bcast)
    in gen.erl line 299
  35: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  36: <P.1/gproc_sup>: <P.1.3/gproc_bcast> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_bcast},gproc_bcast,[],[]]],[link]})
    in erlang.erl line 2868
  37: <P.1.3/gproc_bcast>: true = erlang:register(gproc_bcast, <P.1.3/gproc_bcast>)
    in gen.erl line 302
  38: <P.1.3/gproc_bcast>: {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}} = <P.1/gproc_sup> ! {ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}}
    in proc_lib.erl line 392
  39: <P.1/gproc_sup>: receives message ({ack,<P.1.3/gproc_bcast>,{ok,<P.1.3/gproc_bcast>}})
    in proc_lib.erl line 348
  40: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  41: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.3/gproc_bcast>},{id,gproc_bcast},{mfargs,{gproc_bcast,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  42: <P.1/gproc_sup>: undefined = erlang:whereis(gproc_pool)
    in gen.erl line 299
  43: <P.1/gproc_sup>: {registered_name,gproc_sup} = erlang:process_info(<P.1/gproc_sup>, registered_name)
    in proc_lib.erl line 731
  44: <P.1/gproc_sup>: <P.1.4/gproc_pool> = erlang:spawn_opt({proc_lib,init_p,[gproc_sup,[<P>],gen,init_it,[gen_server,<P.1/gproc_sup>,<P.1/gproc_sup>,{local,gproc_pool},gproc_pool,[],[]]],[link]})
    in erlang.erl line 2868
  45: <P.1.4/gproc_pool>: true = erlang:register(gproc_pool, <P.1.4/gproc_pool>)
    in gen.erl line 302
  46: <P.1.4/gproc_pool>: {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}} = <P.1/gproc_sup> ! {ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}}
    in proc_lib.erl line 392
  47: <P.1/gproc_sup>: receives message ({ack,<P.1.4/gproc_pool>,{ok,<P.1.4/gproc_pool>}})
    in proc_lib.erl line 348
  48: <P.1/gproc_sup>: <P.user/user> = erlang:group_leader()
    in error_logger.erl line 213
  49: <P.1/gproc_sup>: {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}} = error_logger ! {notify,{info_report,<P.user/user>,{<P.1/gproc_sup>,progress,[{supervisor,{local,gproc_sup}},{started,[{pid,<P.1.4/gproc_pool>},{id,gproc_pool},{mfargs,{gproc_pool,start_link,...}},{restart_type,permanent},{shutdown,2000},{child_type,...}]}]}}}
    in gen_event.erl line 266
  50: <P.1/gproc_sup>: {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}} = <P> ! {ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}}
    in proc_lib.erl line 392
  51: <P>: receives message ({ack,<P.1/gproc_sup>,{ok,<P.1/gproc_sup>}})
    in proc_lib.erl line 348
  52: <P>: {<P.2>,#Ref<0.3937440253.4130865153.76259>} = erlang:spawn_opt({erlang,apply,[#Fun<test.8.122744875>,[]],[monitor]})
    in erlang.erl line 2731
  53: <P.2>: #Ref<0.3937440253.4130865153.76262> = erlang:monitor(process, <P>)
    in test.erl line 38
  54: <P.2>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  55: <P.2>: #Ref<0.3937440253.4130865153.76266> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  56: <P.2>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}}, [noconnect])
    in gen.erl line 167
  57: <P.1.1/gproc>: receives message ({'$gen_call',{<P.2>,#Ref<0.3937440253.4130865153.76266>},{reg,{n,l,foo},the_value}})
    in gen_server.erl line 381
  58: <P.1.1/gproc>: true = ets:insert_new(gproc, {{{n,l,foo},n},<P.2>,the_value})
    in gproc_lib.erl line 78
  59: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,{n,l,foo}},[]})
  60: <P.1.1/gproc>: true = ets:insert_new(gproc, {{<P.2>,l}})
    in gproc_lib.erl line 300
  61: <P.1.1/gproc>: #Ref<0.3937440253.4130865153.76276> = erlang:monitor(process, <P.2>)
    in gproc_lib.erl line 302
  62: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76266>,true} = <P.2> ! {#Ref<0.3937440253.4130865153.76266>,true}
    in gen_server.erl line 243
  63: <P.2>: receives message ({#Ref<0.3937440253.4130865153.76266>,true})
    in gen.erl line 169
  64: <P.2>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76266>, [flush])
    in gen.erl line 171
  65: <P.2>: {<P.2>,ok} = <P> ! {<P.2>,ok}
    in test.erl line 40
  66: <P>: receives message ({<P.2>,ok})
    in test.erl line 45
  67: <P>: <P.1.1/gproc> = erlang:whereis(gproc)
    in gen.erl line 257
  68: <P>: #Ref<0.3937440253.4130865153.76286> = erlang:monitor(process, <P.1.1/gproc>)
    in gen.erl line 156
  69: <P>: ok = erlang:send(<P.1.1/gproc>, {'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}}, [noconnect])
    in gen.erl line 167
  70: <P.1.1/gproc>: receives message ({'$gen_call',{<P>,#Ref<0.3937440253.4130865153.76286>},{reg_or_locate,{n,l,foo},undefined,<P>}})
    in gen_server.erl line 381
  71: <P.1.1/gproc>: [{{{n,l,foo},n},<P.2>,the_value}] = ets:lookup(gproc, {{n,l,foo},n})
    in gproc.erl line 2072
  72: <P.1.1/gproc>: {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}} = <P> ! {#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}}
    in gen_server.erl line 243
  73: <P>: receives message ({#Ref<0.3937440253.4130865153.76286>,{<P.2>,the_value}})
    in gen.erl line 169
  74: <P>: true = erlang:demonitor(#Ref<0.3937440253.4130865153.76286>, [flush])
    in gen.erl line 171
  75: <P>: true = erlang:exit(<P.2>, kill)
    in test.erl line 47
  76: <P.2>: exits abnormally (killed)
  77: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed} = erlang:send(<P>, {'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    (while exiting)
  78: <P>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76259>,process,<P.2>,killed})
    in test.erl line 48
  79: <P>: exits normally
  80: <P>: true = erlang:exit(<P.1/gproc_sup>, normal)
    (while exiting)
  81: <P>: {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal} = erlang:send(<P.2>, {'DOWN',#Ref<0.3937440253.4130865153.76262>,process,<P>,normal})
    (while exiting)
  82: <P.1/gproc_sup>: receives message ({'EXIT',<P>,normal})
    in gen_server.erl line 381
  83: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76307> = erlang:monitor(process, <P.1.4/gproc_pool>)
    in supervisor.erl line 978
  84: <P.1/gproc_sup>: true = erlang:unlink(<P.1.4/gproc_pool>)
    in supervisor.erl line 979
  85: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
  86: <P.1/gproc_sup>: true = erlang:exit(<P.1.4/gproc_pool>, shutdown)
    in supervisor.erl line 954
  87: <P.1.4/gproc_pool>: exits abnormally (shutdown)
  88: <P.1.4/gproc_pool>: {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    (while exiting)
  89: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76307>,process,<P.1.4/gproc_pool>,shutdown})
    in supervisor.erl line 955
  90: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76331> = erlang:monitor(process, <P.1.3/gproc_bcast>)
    in supervisor.erl line 978
  91: <P.1/gproc_sup>: true = erlang:unlink(<P.1.3/gproc_bcast>)
    in supervisor.erl line 979
  92: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
  93: <P.1/gproc_sup>: true = erlang:exit(<P.1.3/gproc_bcast>, shutdown)
    in supervisor.erl line 954
  94: <P.1.3/gproc_bcast>: exits abnormally (shutdown)
  95: <P.1.3/gproc_bcast>: {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    (while exiting)
  96: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76331>,process,<P.1.3/gproc_bcast>,shutdown})
    in supervisor.erl line 955
  97: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76340> = erlang:monitor(process, <P.1.2/gproc_monitor>)
    in supervisor.erl line 978
  98: <P.1/gproc_sup>: true = erlang:unlink(<P.1.2/gproc_monitor>)
    in supervisor.erl line 979
  99: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 100: <P.1/gproc_sup>: true = erlang:exit(<P.1.2/gproc_monitor>, shutdown)
    in supervisor.erl line 954
 101: <P.1.2/gproc_monitor>: exits abnormally (shutdown)
 102: <P.1.2/gproc_monitor>: true = ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 103: <P.1.2/gproc_monitor>: {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    (while exiting)
 104: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76340>,process,<P.1.2/gproc_monitor>,shutdown})
    in supervisor.erl line 955
 105: <P.1/gproc_sup>: #Ref<0.3937440253.4130865153.76351> = erlang:monitor(process, <P.1.1/gproc>)
    in supervisor.erl line 978
 106: <P.1/gproc_sup>: true = erlang:unlink(<P.1.1/gproc>)
    in supervisor.erl line 979
 107: <P.1/gproc_sup>: receive timeout expired after 0 ms
    in supervisor.erl line 981
 108: <P.1/gproc_sup>: true = erlang:exit(<P.1.1/gproc>, shutdown)
    in supervisor.erl line 954
 109: <P.1.1/gproc>: exits abnormally (shutdown)
 110: <P.1.1/gproc>: {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown} = erlang:send(<P.1/gproc_sup>, {'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    (while exiting)
 111: <P.2>: {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed} = erlang:send(<P.1.1/gproc>, {'DOWN',#Ref<0.3937440253.4130865153.76276>,process,<P.2>,killed})
    (while exiting)
 112: <P.1/gproc_sup>: receives message ({'DOWN',#Ref<0.3937440253.4130865153.76351>,process,<P.1.1/gproc>,shutdown})
    in supervisor.erl line 955
 113: <P.1/gproc_sup>: exits normally
 114: <P.1/gproc_sup>: true = ets:delete(gproc)
    (while exiting)
 115: <P.1/gproc_sup>: Exception badarg raised by: ets:give_away(gproc_monitor, <P.1/gproc_sup>, [])
    (while exiting)
 116: <P.1/gproc_sup>: true = ets:delete(gproc_monitor)
    (while exiting)
 117: <P.1/gproc_sup>: true = erlang:exit(<P>, normal)
    (while exiting)
################################################################################
Exploration completed!
################################################################################
Warnings:
--------------------------------------------------------------------------------
* Some abnormal exit reasons were treated as normal ('--treat_as_normal').

################################################################################
Tips:
--------------------------------------------------------------------------------
* Running without a scheduling_bound corresponds to verification and may take a long time.
* An abnormal exit signal killed a process. This is probably the worst thing that can happen race-wise, as any other side-effecting operation races with the arrival of the signal. If the test produces too many interleavings consider refactoring your code.
* Increase '--print_depth' if output/graph contains "...".
* Each of the first 10 interleavings explored so far had some error. This can make later debugging difficult, as the generated report will include too much info. Consider refactoring your code, or using the appropriate options to filter out irrelevant errors.

################################################################################
Info:
--------------------------------------------------------------------------------
* Writing results in /Users/stavros.aronis/git/Concuerror/tests-real/suites/gproc/run/t_reg_or_locate2.out
* Automatically instrumented module io_lib
* Showing PIDs as "<symbolic name(/last registered name)>" ('-h symbolic_names').
* Instrumented & loaded module test
* Automatically instrumented module gproc_sup
* Automatically instrumented module supervisor
* Automatically instrumented module gen_server
* Automatically instrumented module gen
* Automatically instrumented module proc_lib
* Automatically instrumented module erlang
* Automatically instrumented module application
* Automatically instrumented module application_controller
* Automatically instrumented module lists
* Automatically instrumented module gproc
* Automatically instrumented module gproc_lib
* Automatically instrumented module error_logger
* Automatically instrumented module gen_event
* Automatically instrumented module gproc_monitor
* Automatically instrumented module gproc_bcast
* Automatically instrumented module gproc_pool
* Continuing after error (-k)
* You can see pairs of racing instructions (in the report and '--graph') with '--show_races true'

################################################################################
Done at 09 Jul 2018 17:47:17 (Exit status: error)
  Summary: 27 errors, 27/27 interleavings explored
